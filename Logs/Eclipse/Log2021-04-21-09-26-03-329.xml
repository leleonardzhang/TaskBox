<Events startTimestamp="1619011563329" logVersion="1.0.0.202101171653">
  <Command __id="4" _type="ShellCommand" date="Wed Apr 21 09:28:22 EDT 2021" starttimestamp="1619011563329" timestamp="139321" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="5" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:28:30 EDT 2021" docASTNodeCount="146" docActiveCodeLength="916" docExpressionCount="108" docLength="916" projectName="TaskBox" starttimestamp="1619011563329" timestamp="147306">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\TaskPanel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import components.composedGraph.ComposedGraph;
import components.mainpanel.MainPanel;
import components.mainpanel.MainPanelInterface;
import components.page.pages.Page;
import exporter.Exporter;

public class TaskPanel {

	public static void main(String[] args) {
		MainPanelInterface panel = new MainPanel();
		panel.addPage(new Page("Example task I", "", 0));
		panel.addPage(new Page("Example task II", "", 1));
		
		ObjectEditor.setPropertyAttribute(Page.class, "answer", AttributeNames.SCROLLED, true);
		ObjectEditor.setMethodAttribute(ComposedGraph.class, "addLine", AttributeNames.ICON, "Test");
		
		OEFrame frame = ObjectEditor.edit(panel);
		
		
		
		
		frame.setSize(700, 1000);
		frame.setLocation(0, 0);
		Exporter.export(panel, "example.json");

	}

}
]]></snapshot>
  </Command>
  <Command __id="6" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:28:30 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="147531" />
  <Command __id="7" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:28:31 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3766" docExpressionCount="354" docLength="3766" projectName="TaskBox" starttimestamp="1619011563329" timestamp="147712">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package main;

import java.util.Vector;
import javax.swing.text.JTextComponent;
import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.uiFrame;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.oadapters.ClassAdapter;
import bus.uigen.oadapters.ObjectAdapter;
import components.caret.MathPanelCaretListener;
import components.mathEditor.MathEditorPanel;

public class MathMain {
	public static MathEditorPanel panel;
	public static OEFrame frame;
	
	public static void main(String[] args) {
		panel = new MathEditorPanel();
		frame = ObjectEditor.edit(panel);
		
		setCaretPositionListener();
		setButtonImage();
	}
	
	public static void setButtonImage() {
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");
		
		
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");
	}
	
	public static void setCaretPositionListener() {
		uiFrame aUIFrame = (uiFrame) frame;
		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();
		Vector<ObjectAdapter> children = adapter.getChildrenVector();
		
		ObjectAdapter observableAdapter = null;
		
		for (ObjectAdapter child : children) {
			if (child.getComponentName().equals("mathExpression")) {
				observableAdapter = child;
				break;
			}
		}
		
		MathPanelCaretListener listener = new MathPanelCaretListener(panel);
		
		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {
			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="8" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:28:31 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="147845" />
  <Command __id="9" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:28:39 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="156068">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[/*
 * Simple Java LaTex example
 * http://www.heatonresearch.com/
 * 
 * Copyright 2013 Heaton Research, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *   
 * For more information on Heaton Research copyrights, licenses 
 * and trademarks visit:
 * http://www.heatonresearch.com/copyright
 */

package components.mathEditor;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;

public class LatexExample extends JFrame implements ActionListener {
	
	private JTextArea latexSource;
	private JButton btnRender;
	private JPanel drawingArea;

	public LatexExample() {
		this.setTitle("JLatexMath Example");
		this.setSize(500, 500);
		Container content = this.getContentPane();
		content.setLayout(new GridLayout(2, 1));
		this.latexSource = new JTextArea();
		
		JPanel editorArea = new JPanel();
		editorArea.setLayout(new BorderLayout());
		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);
		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		
		
		content.add(editorArea);
		content.add(this.drawingArea = new JPanel());		
		this.btnRender.addActionListener(this);
		
		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");
	}

	public void render() {
		try {
			// get the text
			String latex = this.latexSource.getText();
			
			// create a formula
			TeXFormula formula = new TeXFormula(latex);
			
			
			// render the formla to an icon of the same size as the formula.
			TeXIcon icon = formula
					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
			
			// insert a border 
			icon.setInsets(new Insets(5, 5, 5, 5));

			// now create an actual image of the rendered equation
			BufferedImage image = new BufferedImage(icon.getIconWidth(),
					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
			Graphics2D g2 = image.createGraphics();
			g2.setColor(Color.white);
			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
			JLabel jl = new JLabel();
			jl.setForeground(new Color(0, 0, 0));
			icon.paintIcon(jl, g2, 0, 0);
			// at this point the image is created, you could also save it with ImageIO
			
			File outputfile = new File("image.png");
			ImageIO.write(image, "png", outputfile);
			
			// now draw it to the screen			
			Graphics g = this.drawingArea.getGraphics();
			g.drawImage(image,0,0,null);
		} catch (Exception ex) {
			ex.printStackTrace();
			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",
					JOptionPane.INFORMATION_MESSAGE);		
		}

	}

	public static void main(String[] args) {
		LatexExample frame = new LatexExample();		
		frame.setVisible(true);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if( e.getSource() == this.btnRender ) {
			render();
		}
		
	}
}
]]></snapshot>
  </Command>
  <Command __id="10" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:28:39 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="156197" />
  <Command __id="12" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:28:40 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="157473" />
  <Command __id="13" _type="ShellCommand" date="Wed Apr 21 09:28:49 EDT 2021" starttimestamp="1619011563329" timestamp="165851" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="11" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:28:40 EDT 2021" docASTNodeCount="348" docActiveCodeLength="2432" docExpressionCount="210" docLength="2432" projectName="TaskBox" starttimestamp="1619011563329" timestamp="157363">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathExpressionImage.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import components.listenersupport.PropertyListenerSupport;
import util.annotations.EditablePropertyNames;
import util.annotations.PropertyNames;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.IMAGE_PATTERN)
@PropertyNames({"x", "y", "width", "height", "imageFileName"})
@EditablePropertyNames({})
public class MathExpressionImage implements MathExpressionImageInterface{
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private int x, y, height, width;
	private String imageFileName;

	public MathExpressionImage(int newX, int newY, int h, int w, String name) {
		setX(newX);
		setY(newY);
		setHeight(h);
		setWidth(w);
		setImageFileName(name);
	}
	
	@Override
    public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }

	@Override
	public int getX() {
		return x;
	}

	@Override
	public void setX(int newX) {
		int oldX = x;
		x = newX;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "x", oldX, x));
	}

	@Override
	public int getY() {
		return y;
	}

	@Override
	public void setY(int newY) {
		int oldY = y;
		y = newY;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "y", oldY, y));
	}

	@Override
	public int getWidth() {
		return width;
	}

	@Override
	public void setWidth(int newWidth) {
		int oldWidth = width;
		width = newWidth;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "width", oldWidth, width));
	}

	@Override
	public int getHeight() {
		return height;
	}

	@Override
	public void setHeight(int newHeight) {
		int oldHeight = height;
		height = newHeight;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "height", oldHeight, height));
	}

	@Override
	public String getImageFileName() {
		return imageFileName;
	}

	@Override
	public void setImageFileName(String newName) {
		String oldName = imageFileName;
		imageFileName = newName;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "imageFileName", oldName, imageFileName));
	}
}
	
]]></snapshot>
  </Command>
  <Command __id="14" _type="ShellCommand" date="Wed Apr 21 09:30:20 EDT 2021" starttimestamp="1619011563329" timestamp="257296" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="15" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:30:25 EDT 2021" docASTNodeCount="16" docActiveCodeLength="184" docExpressionCount="10" docLength="184" projectName="TaskBox" starttimestamp="1619011563329" timestamp="261826">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathExpressionImageInterface.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import components.observableshapes.ObservableImageInterface;

public interface MathExpressionImageInterface extends ObservableImageInterface{

}
]]></snapshot>
  </Command>
  <Command __id="16" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:30:25 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="261917" />
  <Command __id="17" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:30:27 EDT 2021" docASTNodeCount="1375" docActiveCodeLength="7559" docExpressionCount="897" docLength="7559" projectName="TaskBox" starttimestamp="1619011563329" timestamp="264399">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionParser.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package parser;

import java.util.Arrays;
import java.util.Vector;

import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;


public class JavaExpressionParser {
	public static final char COMMA = ',', PLUS = '+', MINUS = '-', TIMES = '*', DIVIDES = '/', CARET = '^', EQUALS = '=', LP = '(', RP = ')';
	public enum FunctionName{
		SQRT ("sqrt"),
		POW ("pow"),
		EXP ("exp"),
		LOG ("log"),
		SIN ("sin"),
		COS ("cos"),
		TAN ("tan"),
		MIN ("min"),
		MAX ("max");
		public String name;
		FunctionName(String newName){
			name = newName;
		}
	}
	
	
	public JavaExpressionParser(){
		
	}
	
	public Vector<Character> trim(Vector<Character> aVector){
		Vector<Character> newVector = new Vector<Character> ();
		for (Character c : aVector) {
			if (c != ' ') {
				newVector.add(c);
			}
		}
		return newVector;
	}
	
	public boolean isExpression(Vector<Character> aVector) {
		System.out.println("Testing Expression " + aVector);
		if (aVector.size() == 0) return false;
		return isAtomicExpression(aVector) || isAddSubExpression(aVector) || isMultiDivExpression(aVector) || isExpExpression(aVector) || isFunctionExpression(aVector) || isParenthesisExpression(aVector);
	}
	public boolean isAddSubExpression(Vector<Character> aVector) {
		System.out.println("Testing add-sub Expression " + aVector);
		if (aVector.size() == 0) return false;
		int pt = 0;
		while (pt < aVector.size() && 
				(!isAddOrSub(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {
			pt ++;
		}
		if (pt == aVector.size()) return false;
		return true;
	}
	public boolean isMultiDivExpression(Vector<Character> aVector) {
		System.out.println("Testing multi div Expression " + aVector);
		if (aVector.size() == 0) return false;
		int pt = 0;
		while (pt < aVector.size() && 
				(!isMultiOrDiv(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {
			pt ++;
		}
		if (pt == aVector.size()) return false;
		return true;
	}
	public boolean isExpExpression(Vector<Character> aVector) {
		if (aVector.size() == 0) return false;
		int pt = 0;
		while (pt < aVector.size() && 
				(!isCaret(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {
			pt ++;
		}
		if (pt == aVector.size()) return false;
		return true;
	}
	public boolean isFunctionExpression(Vector<Character> aVector) {
		System.out.println("Testing function Expression " + aVector);
		if (aVector.size() == 0) return false;
		int pt = 0;
		while (!isFunctionName(truncate(aVector, 0, pt)) && pt < aVector.size()) {
			pt ++;
		}
		if (aVector.size() == pt) return false;
		return isFunctionParameters(truncate(aVector, pt, aVector.size()));
	}
	public boolean isFunctionParameters(Vector<Character> aVector) {
		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size()-1)) && isParameters(truncateBoth(aVector));
	}
	public boolean isParameters(Vector<Character> aVector) {
		if (aVector.size() == 0) return false;
		if (isExpression(aVector)) return true;
		int pt = 0;
		while (pt < aVector.size() && 
				(!isComma(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isParameters(truncate(aVector, pt + 1, aVector.size())))) {
			pt ++;
		}
		if (pt == aVector.size()) return false;
		return true;
	}
	public boolean isParenthesisExpression(Vector<Character> aVector) {
		System.out.println("Testing parenthesis Expression " + aVector);
		if (aVector.size() == 0) return false;
		System.out.println("Parenthesis Expression " + truncateBoth(aVector));
		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size() - 1)) && isExpression(truncateBoth(aVector));
	}
	public boolean isFunctionName(Vector<Character> aVector) {
		for (FunctionName functionName : FunctionName.values()) {
			if (compare(aVector, functionName.name)) {
				return true;
			}
		}
		return false;
	}
	public boolean isAtomicExpression(Vector<Character> aVector) {
		return isNumber(aVector) || isVariable(aVector);
	}
	public boolean isNumber(Vector<Character> aVector) {
		return isUnsignedNumber(aVector) || (isSign(aVector.get(0)) && isUnsignedNumber(truncateLeft(aVector)));
	}
	public boolean isUnsignedNumber(Vector<Character> aVector) {
		if (aVector.size() == 1) {
			return isDigit(aVector.get(0));
		}
		return isNonZeroDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));
	}
	public boolean isVariable(Vector<Character> aVector) {
		if (aVector.size() == 1) {
			return isUnsignedVariable(aVector);
		}
		return isUnsignedVariable(aVector) || (isSign(aVector.get(0)) && isUnsignedVariable(truncateLeft(aVector)));
	}
	public boolean isUnsignedVariable(Vector<Character> aVector) {
		if (aVector.size() == 1) {
			return isLetter(aVector.get(0));
		}
		return isLetter(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));
	}
	public boolean isDigitString(Vector<Character> aVector) {
		if (aVector.size() == 1) {
			return isDigit(aVector.get(0));
		}
		return isDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));
	}
	public boolean isLetterDigitString(Vector<Character> aVector) {
		if (aVector.size() == 1) {
			return isLetterOrDigit(aVector.get(0));
		}
		return isLetterOrDigit(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));
	}
	public boolean isLetterOrDigit(char aChar) {
		return isLetter(aChar) || isDigit(aChar);
	}
	public boolean isSign(char aChar) {
		return aChar == PLUS || aChar == MINUS; 
	}
	public boolean isNonZeroDigit(char aChar) {
		return aChar <= '9' && aChar >= '1';
	}
	public boolean isDigit(char aChar) {
		return Character.isDigit(aChar);
	}
	public boolean isLetter(char aChar) {
		return Character.isLetter(aChar);
	}
	public boolean isComma(char aChar) {
		return aChar == COMMA;
	}
	public boolean isRightParenthesis(char aChar) {
		return aChar == RP;
	}
	public boolean isLeftParenthesis(char aChar) {
		return aChar == LP;
	}
	public boolean isAddOrSub(char aChar) {
		return aChar == PLUS || aChar == MINUS;
	}
	public boolean isMultiOrDiv(char aChar) {
		return aChar == TIMES || aChar == DIVIDES;
	}
	public boolean isCaret(char aChar) {
		return CARET == aChar;
	}
	public Vector<Character> truncate(Vector<Character> aVector, int start, int end){
		Vector<Character> newVector = new Vector<Character>();
		for (int i = start; i < end; i ++) {
			newVector.add(aVector.get(i));
		}
		return newVector;
	}
	public Vector<Character> truncateLeft(Vector<Character> aVector){
		return truncate(aVector, 1, aVector.size());
	}
	public Vector<Character> truncateRight(Vector<Character> aVector){
		return truncate(aVector, 0, aVector.size()-1);
	}
	public Vector<Character> truncateBoth(Vector<Character> aVector){
		return truncate(aVector, 1, aVector.size()-1);
	}
	public int find(Vector<Character> aVector, char aChar, int start) {
		for (int i = start; i < aVector.size(); i ++) {
			if (aVector.get(i) == aChar) {
				return i;
			}
		}
		return -1;
	}
	public boolean compare(Vector<Character> aVector, String aString) {
		if (aVector.size() != aString.length()) {
			return false;
		}
		for (int i = 0; i < aVector.size(); i ++) {
			if (aVector.get(i) != aString.charAt(i)) {
				return false;
			}
		}
		return true;
	}
}
]]></snapshot>
  </Command>
  <Command __id="18" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:30:27 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="264529" />
  <Command __id="19" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:30:28 EDT 2021" docASTNodeCount="121" docActiveCodeLength="632" docExpressionCount="75" docLength="686" projectName="TaskBox" starttimestamp="1619011563329" timestamp="265045">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\ParserMain.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package parser;

import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.JTree;

public class ParserMain{
	public static void main(String[] args) {
		String exp = "pow(1,2)";
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < exp.length(); i ++) {
			rootVector.add(exp.charAt(i));
		}
		// System.out.println(parser.isExpression(rootVector))
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		
		JFrame frame = new JFrame();
		frame.add(treeParser.getTree());
		TexTreeBuilder builder = new TexTreeBuilder();
		builder.build(treeParser.getRoot());
		frame.setVisible(true);
	}
	
}
]]></snapshot>
  </Command>
  <Command __id="20" _type="MoveCaretCommand" caretOffset="394" date="Wed Apr 21 09:30:28 EDT 2021" docOffset="451" starttimestamp="1619011563329" timestamp="265122" />
  <Command __id="22" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:30:32 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="269303" />
  <Command __id="23" _type="SelectTextCommand" caretOffset="3942" date="Wed Apr 21 09:30:41 EDT 2021" end="4671" start="3942" starttimestamp="1619011563329" timestamp="277902" />
  <Command __id="21" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:30:32 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5669" docExpressionCount="666" docLength="5669" projectName="TaskBox" starttimestamp="1619011563329" timestamp="269193">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\TexTreeBuilder.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package parser;

import java.util.Vector;
import javax.swing.tree.DefaultMutableTreeNode;

public class TexTreeBuilder {
	private DefaultMutableTreeNode root;
	private JavaExpressionParser parser = new JavaExpressionParser();
	
	
	public String build(DefaultMutableTreeNode aRoot) {
		root = aRoot;
		String resultString = "";
		for (Character c : getTexVector(root)) {
			resultString += c;
		}
		return resultString;
	}
	
	public Vector<Character> getTexVector(DefaultMutableTreeNode thisNode) {
		Vector<Character> childrenVector = new Vector<Character> ();
		for (int i = 0; i < thisNode.getChildCount(); i ++) {
			DefaultMutableTreeNode child = (DefaultMutableTreeNode) thisNode.getChildAt(i);
			if (child.getChildCount() == 0) {
				if (((Vector<Character>) child.getUserObject()).get(0) == '/') {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('\\');
					fracVector.add('f');
					fracVector.add('r');
					fracVector.add('a');
					fracVector.add('c');
					fracVector.add('{');
					fracVector = concat(fracVector, childrenVector);
					fracVector.add('}');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i ++;
					childrenVector = fracVector;
				}
				else if (((Vector<Character>) child.getUserObject()).get(0) == '^') {
					Vector<Character> powerVector = new Vector<Character> ();
					powerVector = concat(childrenVector, powerVector);
					powerVector.add('^');
					powerVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					if (nextChild.getChildCount() == 0) {
						powerVector = concat(powerVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						powerVector = concat(powerVector, getTexVector(nextChild));
					}
					powerVector.add('}');
					i ++;
					childrenVector = powerVector;
				}
				else if (((Vector<Character>) child.getUserObject()).get(0) == '*') {
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					DefaultMutableTreeNode prevChild = (DefaultMutableTreeNode) thisNode.getChildAt(i - 1);
					Vector<Character> timesVector = new Vector<Character> ();
					timesVector = concat(childrenVector, timesVector);
					if (prevChild.getChildCount() == 0 && nextChild.getChildCount() == 0 
							&& parser.isNumber((Vector<Character>) prevChild.getUserObject()) 
							&& parser.isUnsignedVariable((Vector<Character>) nextChild.getUserObject())) {
					}
					else {
						timesVector.add(' ');
						timesVector.add('\\');
						timesVector.add('t');
						timesVector.add('i');
						timesVector.add('m');
						timesVector.add('e');
						timesVector.add('s');
						timesVector.add(' ');
						childrenVector = timesVector;
					}
				}
				
				else if (isSqrt((Vector<Character>) child.getUserObject()) 
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('\\');
					fracVector.add('s');
					fracVector.add('q');
					fracVector.add('r');
					fracVector.add('t');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				
				else if (isExp((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				
				
				else {
					childrenVector = concat(childrenVector, (Vector<Character>) child.getUserObject());
				}
			}
			else {
				childrenVector = concat(childrenVector, getTexVector(child));
			}
		}
		return childrenVector;	
	}
	
	public Vector<Character> concat(Vector<Character> vectorA, Vector<Character> vectorB){
		Vector<Character> newVector = new Vector<Character> ();
		for (Character c : vectorA) {
			newVector.add(c);
		}
		for (Character c : vectorB) {
			newVector.add(c);
		}
		return newVector;
	}
	
	public boolean isSqrt(Vector<Character> aVector) {
		if (aVector.size() != 4) return false;
		return aVector.get(0) == 's' && aVector.get(1) == 'q' && aVector.get(2) == 'r' && aVector.get(3) == 't';
	}
	
	public boolean isExp(Vector<Character> aVector) {
		if (aVector.size() != 3) return false;
		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="24" _type="CopyCommand" date="Wed Apr 21 09:30:42 EDT 2021" starttimestamp="1619011563329" timestamp="279187" />
  <Command __id="25" _type="MoveCaretCommand" caretOffset="4671" date="Wed Apr 21 09:30:43 EDT 2021" docOffset="4720" starttimestamp="1619011563329" timestamp="279773" />
  <DocumentChange __id="26" _type="Insert" date="Wed Apr 21 09:30:45 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5681" docExpressionCount="666" docLength="5681" length="12" offset="4720" repeat="2" starttimestamp="1619011563329" timestamp="281923" timestamp2="282040">
    <text><![CDATA[
				
				]]></text>
  </DocumentChange>
  <Command __id="27" _type="InsertStringCommand" date="Wed Apr 21 09:30:45 EDT 2021" starttimestamp="1619011563329" timestamp="281937" timestamp2="281937">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="29" _type="InsertStringCommand" date="Wed Apr 21 09:30:45 EDT 2021" starttimestamp="1619011563329" timestamp="282054" timestamp2="282054">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="31" _type="PasteCommand" date="Wed Apr 21 09:30:45 EDT 2021" starttimestamp="1619011563329" timestamp="282256" />
  <Command __id="32" _type="SelectTextCommand" caretOffset="4694" date="Wed Apr 21 09:30:47 EDT 2021" end="4697" start="4694" starttimestamp="1619011563329" timestamp="284355" />
  <Command __id="34" _type="InsertStringCommand" date="Wed Apr 21 09:30:48 EDT 2021" starttimestamp="1619011563329" timestamp="284936" timestamp2="284936">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="36" _type="InsertStringCommand" date="Wed Apr 21 09:30:48 EDT 2021" starttimestamp="1619011563329" timestamp="285157" timestamp2="285157">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="38" _type="InsertStringCommand" date="Wed Apr 21 09:30:48 EDT 2021" starttimestamp="1619011563329" timestamp="285576" timestamp2="285576">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="39" _type="MoveCaretCommand" caretOffset="4994" date="Wed Apr 21 09:30:49 EDT 2021" docOffset="5043" starttimestamp="1619011563329" timestamp="286448" />
  <Command __id="40" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="286798" />
  <Command __id="41" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="286902" />
  <Command __id="42" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="287077" />
  <Command __id="43" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="287081" />
  <Command __id="44" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="287283" />
  <Command __id="45" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="287284" />
  <Command __id="46" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="287434" />
  <Command __id="47" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:50 EDT 2021" starttimestamp="1619011563329" timestamp="287435" />
  <Command __id="48" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:51 EDT 2021" starttimestamp="1619011563329" timestamp="287810" />
  <Command __id="49" _type="SelectTextCommand" caretOffset="4693" date="Wed Apr 21 09:30:52 EDT 2021" end="4697" start="4693" starttimestamp="1619011563329" timestamp="288784" />
  <Command __id="50" _type="MoveCaretCommand" caretOffset="4693" date="Wed Apr 21 09:30:52 EDT 2021" docOffset="4742" starttimestamp="1619011563329" timestamp="289136" />
  <Command __id="51" _type="SelectTextCommand" caretOffset="6171" date="Wed Apr 21 09:30:54 EDT 2021" end="6349" start="6171" starttimestamp="1619011563329" timestamp="291590" />
  <Command __id="52" _type="CopyCommand" date="Wed Apr 21 09:30:55 EDT 2021" starttimestamp="1619011563329" timestamp="291785" />
  <Command __id="53" _type="MoveCaretCommand" caretOffset="6349" date="Wed Apr 21 09:30:55 EDT 2021" docOffset="6398" starttimestamp="1619011563329" timestamp="292158" />
  <Command __id="55" _type="InsertStringCommand" date="Wed Apr 21 09:30:56 EDT 2021" starttimestamp="1619011563329" timestamp="292760" timestamp2="292760">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="57" _type="InsertStringCommand" date="Wed Apr 21 09:30:56 EDT 2021" starttimestamp="1619011563329" timestamp="292893" timestamp2="292893">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="59" _type="PasteCommand" date="Wed Apr 21 09:30:56 EDT 2021" starttimestamp="1619011563329" timestamp="293104" />
  <Command __id="60" _type="SelectTextCommand" caretOffset="6372" date="Wed Apr 21 09:30:58 EDT 2021" end="6375" start="6372" starttimestamp="1619011563329" timestamp="295064" />
  <Command __id="62" _type="InsertStringCommand" date="Wed Apr 21 09:30:58 EDT 2021" starttimestamp="1619011563329" timestamp="295638" timestamp2="295638">
    <data><![CDATA[P]]></data>
  </Command>
  <Command __id="64" _type="InsertStringCommand" date="Wed Apr 21 09:30:59 EDT 2021" starttimestamp="1619011563329" timestamp="295817" timestamp2="295817">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="66" _type="InsertStringCommand" date="Wed Apr 21 09:30:59 EDT 2021" starttimestamp="1619011563329" timestamp="295915" timestamp2="295915">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="67" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:30:59 EDT 2021" starttimestamp="1619011563329" timestamp="296516" />
  <Command __id="68" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:30:59 EDT 2021" starttimestamp="1619011563329" timestamp="296663" />
  <Command __id="69" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:31:00 EDT 2021" starttimestamp="1619011563329" timestamp="296711" />
  <Command __id="70" _type="MoveCaretCommand" caretOffset="6538" date="Wed Apr 21 09:31:00 EDT 2021" docOffset="6587" starttimestamp="1619011563329" timestamp="296993" />
  <Command __id="71" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:31:01 EDT 2021" starttimestamp="1619011563329" timestamp="297735" />
  <Command __id="72" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:31:01 EDT 2021" starttimestamp="1619011563329" timestamp="297742" />
  <Command __id="73" _type="MoveCaretCommand" caretOffset="6477" date="Wed Apr 21 09:31:01 EDT 2021" docOffset="6526" starttimestamp="1619011563329" timestamp="297935" />
  <Command __id="75" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:31:01 EDT 2021" starttimestamp="1619011563329" timestamp="298401" />
  <Command __id="77" _type="InsertStringCommand" date="Wed Apr 21 09:31:02 EDT 2021" starttimestamp="1619011563329" timestamp="298701" timestamp2="298701">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="78" _type="MoveCaretCommand" caretOffset="6503" date="Wed Apr 21 09:31:03 EDT 2021" docOffset="6552" starttimestamp="1619011563329" timestamp="299810" />
  <Command __id="79" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:31:03 EDT 2021" starttimestamp="1619011563329" timestamp="300382" />
  <Command __id="81" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:31:03 EDT 2021" starttimestamp="1619011563329" timestamp="300656" />
  <Command __id="83" _type="InsertStringCommand" date="Wed Apr 21 09:31:04 EDT 2021" starttimestamp="1619011563329" timestamp="300862" timestamp2="300862">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="84" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:31:04 EDT 2021" starttimestamp="1619011563329" timestamp="301338" />
  <Command __id="85" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 09:31:04 EDT 2021" starttimestamp="1619011563329" timestamp="301491" />
  <Command __id="86" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:31:04 EDT 2021" starttimestamp="1619011563329" timestamp="301498" />
  <Command __id="87" _type="MoveCaretCommand" caretOffset="6527" date="Wed Apr 21 09:31:06 EDT 2021" docOffset="6576" starttimestamp="1619011563329" timestamp="303289" />
  <Command __id="89" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:31:07 EDT 2021" starttimestamp="1619011563329" timestamp="303702" />
  <Command __id="91" _type="InsertStringCommand" date="Wed Apr 21 09:31:07 EDT 2021" starttimestamp="1619011563329" timestamp="303798" timestamp2="303798">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="92" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:31:07 EDT 2021" starttimestamp="1619011563329" timestamp="304242" />
  <Command __id="93" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:31:07 EDT 2021" starttimestamp="1619011563329" timestamp="304389" />
  <Command __id="94" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:31:07 EDT 2021" starttimestamp="1619011563329" timestamp="304410" />
  <Command __id="95" _type="MoveCaretCommand" caretOffset="4760" date="Wed Apr 21 09:31:09 EDT 2021" docOffset="4809" starttimestamp="1619011563329" timestamp="306551" />
  <Command __id="96" _type="MoveCaretCommand" caretOffset="4780" date="Wed Apr 21 09:31:10 EDT 2021" docOffset="4829" starttimestamp="1619011563329" timestamp="306902" />
  <Command __id="97" _type="MoveCaretCommand" caretOffset="4726" date="Wed Apr 21 09:31:14 EDT 2021" docOffset="4775" starttimestamp="1619011563329" timestamp="311660" />
  <Command __id="98" _type="MoveCaretCommand" caretOffset="4738" date="Wed Apr 21 09:31:15 EDT 2021" docOffset="4787" starttimestamp="1619011563329" timestamp="312182" />
  <Command __id="99" _type="MoveCaretCommand" caretOffset="4927" date="Wed Apr 21 09:31:15 EDT 2021" docOffset="4976" starttimestamp="1619011563329" timestamp="312489" />
  <Command __id="100" _type="MoveCaretCommand" caretOffset="5256" date="Wed Apr 21 09:31:22 EDT 2021" docOffset="5305" starttimestamp="1619011563329" timestamp="319640" />
  <Command __id="101" _type="SelectTextCommand" caretOffset="4687" date="Wed Apr 21 09:31:23 EDT 2021" end="4688" start="4687" starttimestamp="1619011563329" timestamp="319987" />
  <Command __id="102" _type="MoveCaretCommand" caretOffset="4885" date="Wed Apr 21 09:31:23 EDT 2021" docOffset="4934" starttimestamp="1619011563329" timestamp="320330" />
  <Command __id="103" _type="SelectTextCommand" caretOffset="4949" date="Wed Apr 21 09:31:23 EDT 2021" end="4950" start="4949" starttimestamp="1619011563329" timestamp="320635" />
  <Command __id="104" _type="MoveCaretCommand" caretOffset="4952" date="Wed Apr 21 09:31:24 EDT 2021" docOffset="5001" starttimestamp="1619011563329" timestamp="320959" />
  <Command __id="105" _type="SelectTextCommand" caretOffset="4679" date="Wed Apr 21 09:33:28 EDT 2021" end="5412" start="4679" starttimestamp="1619011563329" timestamp="444760" />
  <Command __id="107" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:28 EDT 2021" starttimestamp="1619011563329" timestamp="445273" />
  <Command __id="109" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:28 EDT 2021" starttimestamp="1619011563329" timestamp="445445" />
  <DocumentChange __id="30" _type="Replace" date="Wed Apr 21 09:30:45 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6410" docExpressionCount="755" docLength="6410" endLine="123" insertionLength="733" int_docASTNodeCount="967" int_docActiveCodeLength="5677" int_docExpressionCount="666" int_docLength="5677" length="4" offset="4728" startLine="123" starttimestamp="1619011563329" timestamp="282243">
    <deletedText><![CDATA[				]]></deletedText>
    <insertedText><![CDATA[				else if (isExp((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="33" _type="Replace" date="Wed Apr 21 09:30:48 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6408" docExpressionCount="755" docLength="6408" endLine="123" insertionLength="1" int_docASTNodeCount="1091" int_docActiveCodeLength="6407" int_docExpressionCount="755" int_docLength="6407" length="3" offset="4743" startLine="123" starttimestamp="1619011563329" timestamp="284929">
    <deletedText><![CDATA[Exp]]></deletedText>
    <insertedText><![CDATA[P]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="35" _type="Insert" date="Wed Apr 21 09:30:48 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6410" docExpressionCount="755" docLength="6410" length="2" offset="4744" repeat="2" starttimestamp="1619011563329" timestamp="285148" timestamp2="285569">
    <text><![CDATA[ow]]></text>
  </DocumentChange>
  <DocumentChange __id="54" _type="Insert" date="Wed Apr 21 09:30:56 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6416" docExpressionCount="755" docLength="6416" length="6" offset="6398" repeat="2" starttimestamp="1619011563329" timestamp="292752" timestamp2="292884">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="58" _type="Replace" date="Wed Apr 21 09:30:56 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" endLine="174" insertionLength="179" int_docASTNodeCount="1091" int_docActiveCodeLength="6415" int_docExpressionCount="755" int_docLength="6415" length="1" offset="6403" startLine="174" starttimestamp="1619011563329" timestamp="293090">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public boolean isExp(Vector<Character> aVector) {
		if (aVector.size() != 3) return false;
		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';
	}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="61" _type="Replace" date="Wed Apr 21 09:30:58 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6592" docExpressionCount="785" docLength="6592" endLine="174" insertionLength="1" int_docASTNodeCount="1132" int_docActiveCodeLength="6591" int_docExpressionCount="785" int_docLength="6591" length="3" offset="6421" startLine="174" starttimestamp="1619011563329" timestamp="295633">
    <deletedText><![CDATA[Exp]]></deletedText>
    <insertedText><![CDATA[P]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="63" _type="Insert" date="Wed Apr 21 09:30:59 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="2" offset="6422" repeat="2" starttimestamp="1619011563329" timestamp="295810" timestamp2="295909">
    <text><![CDATA[ow]]></text>
  </DocumentChange>
  <DocumentChange __id="74" _type="Delete" date="Wed Apr 21 09:31:01 EDT 2021" docASTNodeCount="1103" docActiveCodeLength="6593" docExpressionCount="759" docLength="6593" endLine="176" length="1" offset="6525" startLine="176" starttimestamp="1619011563329" timestamp="298394">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="76" _type="Insert" date="Wed Apr 21 09:31:02 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="1" offset="6525" starttimestamp="1619011563329" timestamp="298696">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="80" _type="Delete" date="Wed Apr 21 09:31:03 EDT 2021" docASTNodeCount="1103" docActiveCodeLength="6593" docExpressionCount="759" docLength="6593" endLine="176" length="1" offset="6550" startLine="176" starttimestamp="1619011563329" timestamp="300653">
    <text><![CDATA[x]]></text>
  </DocumentChange>
  <DocumentChange __id="82" _type="Insert" date="Wed Apr 21 09:31:04 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="1" offset="6550" starttimestamp="1619011563329" timestamp="300859">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="88" _type="Delete" date="Wed Apr 21 09:31:07 EDT 2021" docASTNodeCount="1103" docActiveCodeLength="6593" docExpressionCount="759" docLength="6593" endLine="176" length="1" offset="6575" startLine="176" starttimestamp="1619011563329" timestamp="303699">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="90" _type="Insert" date="Wed Apr 21 09:31:07 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="1" offset="6575" starttimestamp="1619011563329" timestamp="303794">
    <text><![CDATA[w]]></text>
  </DocumentChange>
  <DocumentChange __id="106" _type="Delete" date="Wed Apr 21 09:33:28 EDT 2021" docASTNodeCount="1008" docActiveCodeLength="5859" docExpressionCount="696" docLength="5859" endLine="139" length="735" offset="4726" repeat="2" startLine="122" starttimestamp="1619011563329" timestamp="445258" timestamp2="445439">
    <text><![CDATA[
				else if (isPow((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}]]></text>
  </DocumentChange>
  <Command __id="110" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:33:29 EDT 2021" starttimestamp="1619011563329" timestamp="446477" />
  <Command __id="111" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:33:29 EDT 2021" starttimestamp="1619011563329" timestamp="446575" />
  <Command __id="112" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:33:29 EDT 2021" starttimestamp="1619011563329" timestamp="446594" />
  <Command __id="114" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:32 EDT 2021" starttimestamp="1619011563329" timestamp="449598" />
  <Command __id="116" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:33 EDT 2021" starttimestamp="1619011563329" timestamp="449769" />
  <Command __id="118" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:33 EDT 2021" starttimestamp="1619011563329" timestamp="449974" />
  <Command __id="120" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:33 EDT 2021" starttimestamp="1619011563329" timestamp="450266" />
  <Command __id="122" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:33 EDT 2021" starttimestamp="1619011563329" timestamp="450562" />
  <Command __id="123" _type="MoveCaretCommand" caretOffset="4677" date="Wed Apr 21 09:33:35 EDT 2021" docOffset="4726" starttimestamp="1619011563329" timestamp="452582" />
  <Command __id="125" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:36 EDT 2021" starttimestamp="1619011563329" timestamp="453356" />
  <Command __id="127" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:36 EDT 2021" starttimestamp="1619011563329" timestamp="453509" />
  <Command __id="129" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:36 EDT 2021" starttimestamp="1619011563329" timestamp="453665" />
  <Command __id="131" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:37 EDT 2021" starttimestamp="1619011563329" timestamp="453833" />
  <Command __id="133" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:33:37 EDT 2021" starttimestamp="1619011563329" timestamp="454178" />
  <Command __id="134" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:33:37 EDT 2021" starttimestamp="1619011563329" timestamp="454530" />
  <Command __id="135" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:33:37 EDT 2021" starttimestamp="1619011563329" timestamp="454628" />
  <Command __id="136" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:33:37 EDT 2021" starttimestamp="1619011563329" timestamp="454647" />
  <DocumentChange __id="113" _type="Delete" date="Wed Apr 21 09:33:32 EDT 2021" docASTNodeCount="1008" docActiveCodeLength="5853" docExpressionCount="696" docLength="5853" endLine="122" length="6" offset="4720" repeat="5" startLine="121" starttimestamp="1619011563329" timestamp="449593" timestamp2="450551">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="124" _type="Delete" date="Wed Apr 21 09:33:36 EDT 2021" docASTNodeCount="1008" docActiveCodeLength="5847" docExpressionCount="696" docLength="5847" endLine="122" length="6" offset="4720" repeat="5" startLine="121" starttimestamp="1619011563329" timestamp="453352" timestamp2="454169">
    <text><![CDATA[
				]]></text>
  </DocumentChange>
  <DocumentChange __id="138" _type="Insert" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="747" offset="4720" repeat="3" starttimestamp="1619011563329" timestamp="459715" timestamp2="460192">
    <text><![CDATA[
				
				else if (isPow((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				]]></text>
  </DocumentChange>
  <DocumentChange __id="144" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1103" docActiveCodeLength="6593" docExpressionCount="759" docLength="6593" endLine="176" length="1" offset="6575" startLine="176" starttimestamp="1619011563329" timestamp="460216">
    <text><![CDATA[w]]></text>
  </DocumentChange>
  <DocumentChange __id="146" _type="Insert" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="1" offset="6575" starttimestamp="1619011563329" timestamp="460248">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="148" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1103" docActiveCodeLength="6593" docExpressionCount="759" docLength="6593" endLine="176" length="1" offset="6550" startLine="176" starttimestamp="1619011563329" timestamp="460277">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="150" _type="Insert" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="1" offset="6550" starttimestamp="1619011563329" timestamp="460311">
    <text><![CDATA[x]]></text>
  </DocumentChange>
  <DocumentChange __id="152" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1103" docActiveCodeLength="6593" docExpressionCount="759" docLength="6593" endLine="176" length="1" offset="6525" startLine="176" starttimestamp="1619011563329" timestamp="460341">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="154" _type="Insert" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" length="1" offset="6525" starttimestamp="1619011563329" timestamp="460374">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="156" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6592" docExpressionCount="785" docLength="6592" endLine="174" length="2" offset="6422" startLine="174" starttimestamp="1619011563329" timestamp="460404">
    <text><![CDATA[ow]]></text>
  </DocumentChange>
  <DocumentChange __id="158" _type="Replace" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1132" docActiveCodeLength="6594" docExpressionCount="785" docLength="6594" endLine="174" insertionLength="3" int_docASTNodeCount="1132" int_docActiveCodeLength="6591" int_docExpressionCount="785" int_docLength="6591" length="1" offset="6421" startLine="174" starttimestamp="1619011563329" timestamp="460452">
    <deletedText><![CDATA[P]]></deletedText>
    <insertedText><![CDATA[Exp]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="160" _type="Replace" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6416" docExpressionCount="755" docLength="6416" endLine="177" insertionLength="1" int_docASTNodeCount="1091" int_docActiveCodeLength="6415" int_docExpressionCount="755" int_docLength="6415" length="179" offset="6403" startLine="174" starttimestamp="1619011563329" timestamp="460484">
    <deletedText><![CDATA[	public boolean isExp(Vector<Character> aVector) {
		if (aVector.size() != 3) return false;
		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';
	}]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="162" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6410" docExpressionCount="755" docLength="6410" endLine="174" length="6" offset="6398" startLine="172" starttimestamp="1619011563329" timestamp="460517">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="164" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6408" docExpressionCount="755" docLength="6408" endLine="123" length="2" offset="4744" startLine="123" starttimestamp="1619011563329" timestamp="460547">
    <text><![CDATA[ow]]></text>
  </DocumentChange>
  <DocumentChange __id="166" _type="Replace" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="1091" docActiveCodeLength="6410" docExpressionCount="755" docLength="6410" endLine="123" insertionLength="3" int_docASTNodeCount="1091" int_docActiveCodeLength="6407" int_docExpressionCount="755" int_docLength="6407" length="1" offset="4743" startLine="123" starttimestamp="1619011563329" timestamp="460580">
    <deletedText><![CDATA[P]]></deletedText>
    <insertedText><![CDATA[Exp]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="168" _type="Replace" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5681" docExpressionCount="666" docLength="5681" endLine="139" insertionLength="4" int_docASTNodeCount="967" int_docActiveCodeLength="5677" int_docExpressionCount="666" int_docLength="5677" length="733" offset="4728" startLine="123" starttimestamp="1619011563329" timestamp="460610">
    <deletedText><![CDATA[				else if (isExp((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}]]></deletedText>
    <insertedText><![CDATA[				]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="170" _type="Delete" date="Wed Apr 21 09:33:43 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5669" docExpressionCount="666" docLength="5669" endLine="123" length="12" offset="4720" startLine="121" starttimestamp="1619011563329" timestamp="460644">
    <text><![CDATA[
				
				]]></text>
  </DocumentChange>
  <Command __id="177" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:46 EDT 2021" docASTNodeCount="121" docActiveCodeLength="632" docExpressionCount="75" docLength="686" projectName="TaskBox" starttimestamp="1619011563329" timestamp="463201">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\ParserMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JFrame;¶import javax.swing.JTree;¶¶public class ParserMain{¶	public static void main(String[] args) {¶		String exp = "pow(1,2)";¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < exp.length(); i ++) {¶			rootVector.add(exp.charAt(i));¶		}¶		// System.out.println(parser.isExpression(rootVector))¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		¶		JFrame frame = new JFrame();¶		frame.add(treeParser.getTree());¶		TexTreeBuilder builder = new TexTreeBuilder();¶		builder.build(treeParser.getRoot());¶		frame.setVisible(true);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="137" _type="MoveCaretCommand" caretOffset="1056" date="Wed Apr 21 09:33:42 EDT 2021" docOffset="1105" starttimestamp="1619011563329" timestamp="459028" />
  <Command __id="139" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="459723" />
  <Command __id="141" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460164" />
  <Command __id="143" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460195" />
  <Command __id="145" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460226" />
  <Command __id="147" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460251" />
  <Command __id="149" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460285" />
  <Command __id="151" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460314" />
  <Command __id="153" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460346" />
  <Command __id="155" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460376" />
  <Command __id="157" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460413" />
  <Command __id="159" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460458" />
  <Command __id="161" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460493" />
  <Command __id="163" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460532" />
  <Command __id="165" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460556" />
  <Command __id="167" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460589" />
  <Command __id="169" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460621" />
  <Command __id="171" _type="UndoCommand" date="Wed Apr 21 09:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="460661" />
  <Command __id="172" _type="UndoCommand" date="Wed Apr 21 09:33:44 EDT 2021" starttimestamp="1619011563329" timestamp="460675" />
  <Command __id="173" _type="MoveCaretCommand" caretOffset="4914" date="Wed Apr 21 09:33:44 EDT 2021" docOffset="4963" starttimestamp="1619011563329" timestamp="461558" />
  <Command __id="174" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:33:45 EDT 2021" starttimestamp="1619011563329" timestamp="461858" />
  <Command __id="175" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:33:45 EDT 2021" starttimestamp="1619011563329" timestamp="461982" />
  <Command __id="176" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:33:45 EDT 2021" starttimestamp="1619011563329" timestamp="462031" />
  <Command __id="178" _type="MoveCaretCommand" caretOffset="394" date="Wed Apr 21 09:33:46 EDT 2021" docOffset="451" starttimestamp="1619011563329" timestamp="463251" />
  <Command __id="179" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:47 EDT 2021" docASTNodeCount="1375" docActiveCodeLength="7559" docExpressionCount="897" docLength="7559" projectName="TaskBox" starttimestamp="1619011563329" timestamp="464528">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Arrays;¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶¶public class JavaExpressionParser {¶	public static final char COMMA = ',', PLUS = '+', MINUS = '-', TIMES = '*', DIVIDES = '/', CARET = '^', EQUALS = '=', LP = '(', RP = ')';¶	public enum FunctionName{¶		SQRT ("sqrt"),¶		POW ("pow"),¶		EXP ("exp"),¶		LOG ("log"),¶		SIN ("sin"),¶		COS ("cos"),¶		TAN ("tan"),¶		MIN ("min"),¶		MAX ("max");¶		public String name;¶		FunctionName(String newName){¶			name = newName;¶		}¶	}¶	¶	¶	public JavaExpressionParser(){¶		¶	}¶	¶	public Vector<Character> trim(Vector<Character> aVector){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : aVector) {¶			if (c != ' ') {¶				newVector.add(c);¶			}¶		}¶		return newVector;¶	}¶	¶	public boolean isExpression(Vector<Character> aVector) {¶		System.out.println("Testing Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		return isAtomicExpression(aVector) || isAddSubExpression(aVector) || isMultiDivExpression(aVector) || isExpExpression(aVector) || isFunctionExpression(aVector) || isParenthesisExpression(aVector);¶	}¶	public boolean isAddSubExpression(Vector<Character> aVector) {¶		System.out.println("Testing add-sub Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isAddOrSub(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isMultiDivExpression(Vector<Character> aVector) {¶		System.out.println("Testing multi div Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isMultiOrDiv(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isExpExpression(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isCaret(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isFunctionExpression(Vector<Character> aVector) {¶		System.out.println("Testing function Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (!isFunctionName(truncate(aVector, 0, pt)) && pt < aVector.size()) {¶			pt ++;¶		}¶		if (aVector.size() == pt) return false;¶		return isFunctionParameters(truncate(aVector, pt, aVector.size()));¶	}¶	public boolean isFunctionParameters(Vector<Character> aVector) {¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size()-1)) && isParameters(truncateBoth(aVector));¶	}¶	public boolean isParameters(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		if (isExpression(aVector)) return true;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isComma(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isParameters(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isParenthesisExpression(Vector<Character> aVector) {¶		System.out.println("Testing parenthesis Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		System.out.println("Parenthesis Expression " + truncateBoth(aVector));¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size() - 1)) && isExpression(truncateBoth(aVector));¶	}¶	public boolean isFunctionName(Vector<Character> aVector) {¶		for (FunctionName functionName : FunctionName.values()) {¶			if (compare(aVector, functionName.name)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	public boolean isAtomicExpression(Vector<Character> aVector) {¶		return isNumber(aVector) || isVariable(aVector);¶	}¶	public boolean isNumber(Vector<Character> aVector) {¶		return isUnsignedNumber(aVector) || (isSign(aVector.get(0)) && isUnsignedNumber(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedNumber(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isNonZeroDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isUnsignedVariable(aVector);¶		}¶		return isUnsignedVariable(aVector) || (isSign(aVector.get(0)) && isUnsignedVariable(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetter(aVector.get(0));¶		}¶		return isLetter(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetterOrDigit(aVector.get(0));¶		}¶		return isLetterOrDigit(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterOrDigit(char aChar) {¶		return isLetter(aChar) || isDigit(aChar);¶	}¶	public boolean isSign(char aChar) {¶		return aChar == PLUS || aChar == MINUS; ¶	}¶	public boolean isNonZeroDigit(char aChar) {¶		return aChar <= '9' && aChar >= '1';¶	}¶	public boolean isDigit(char aChar) {¶		return Character.isDigit(aChar);¶	}¶	public boolean isLetter(char aChar) {¶		return Character.isLetter(aChar);¶	}¶	public boolean isComma(char aChar) {¶		return aChar == COMMA;¶	}¶	public boolean isRightParenthesis(char aChar) {¶		return aChar == RP;¶	}¶	public boolean isLeftParenthesis(char aChar) {¶		return aChar == LP;¶	}¶	public boolean isAddOrSub(char aChar) {¶		return aChar == PLUS || aChar == MINUS;¶	}¶	public boolean isMultiOrDiv(char aChar) {¶		return aChar == TIMES || aChar == DIVIDES;¶	}¶	public boolean isCaret(char aChar) {¶		return CARET == aChar;¶	}¶	public Vector<Character> truncate(Vector<Character> aVector, int start, int end){¶		Vector<Character> newVector = new Vector<Character>();¶		for (int i = start; i < end; i ++) {¶			newVector.add(aVector.get(i));¶		}¶		return newVector;¶	}¶	public Vector<Character> truncateLeft(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size());¶	}¶	public Vector<Character> truncateRight(Vector<Character> aVector){¶		return truncate(aVector, 0, aVector.size()-1);¶	}¶	public Vector<Character> truncateBoth(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size()-1);¶	}¶	public int find(Vector<Character> aVector, char aChar, int start) {¶		for (int i = start; i < aVector.size(); i ++) {¶			if (aVector.get(i) == aChar) {¶				return i;¶			}¶		}¶		return -1;¶	}¶	public boolean compare(Vector<Character> aVector, String aString) {¶		if (aVector.size() != aString.length()) {¶			return false;¶		}¶		for (int i = 0; i < aVector.size(); i ++) {¶			if (aVector.get(i) != aString.charAt(i)) {¶				return false;¶			}¶		}¶		return true;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="180" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:33:47 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="464621" />
  <Command __id="181" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:50 EDT 2021" docASTNodeCount="121" docActiveCodeLength="632" docExpressionCount="75" docLength="686" projectName="TaskBox" starttimestamp="1619011563329" timestamp="467575">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\ParserMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JFrame;¶import javax.swing.JTree;¶¶public class ParserMain{¶	public static void main(String[] args) {¶		String exp = "pow(1,2)";¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < exp.length(); i ++) {¶			rootVector.add(exp.charAt(i));¶		}¶		// System.out.println(parser.isExpression(rootVector))¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		¶		JFrame frame = new JFrame();¶		frame.add(treeParser.getTree());¶		TexTreeBuilder builder = new TexTreeBuilder();¶		builder.build(treeParser.getRoot());¶		frame.setVisible(true);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="182" _type="MoveCaretCommand" caretOffset="394" date="Wed Apr 21 09:33:50 EDT 2021" docOffset="451" starttimestamp="1619011563329" timestamp="467625" />
  <Command __id="183" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:51 EDT 2021" docASTNodeCount="1036" docActiveCodeLength="6331" docExpressionCount="709" docLength="6331" projectName="TaskBox" starttimestamp="1619011563329" timestamp="468619">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionTreeParser.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package parser;

import java.util.Vector;

import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;

public class JavaExpressionTreeParser {
	private DefaultMutableTreeNode rootNode;
	private JTree tree;
	private JavaExpressionParser parser = new JavaExpressionParser();
	
	public JavaExpressionTreeParser(Vector<Character> aVector) {
		if (parser.isExpression(aVector)) {
			rootNode = new DefaultMutableTreeNode(aVector);
			tree = new JTree(rootNode);
			parse(rootNode);
		}
	}
	
	public void parse(DefaultMutableTreeNode thisNode) {
		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();
		if (parser.isAtomicExpression(aVector)) {
			return;
		}
		
		if (parser.isAddSubExpression(aVector)) {
			int pt = 0;
			while (pt < aVector.size() && 
					(!parser.isAddOrSub(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {
				pt ++;
			}
			
			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);
			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);
			
			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);
			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);
			
			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());
			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);
			
			thisNode.add(childLeft);
			parse(childLeft);
			thisNode.add(childMid);
			thisNode.add(childRight);
			parse(childRight);
			return;
		}
		
		if (parser.isMultiDivExpression(aVector)) {
			int pt = 0;
			while (pt < aVector.size() && 
					(!parser.isMultiOrDiv(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {
				pt ++;
			}
			
			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);
			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);
			
			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);
			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);
			
			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());
			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);
			
			thisNode.add(childLeft);
			parse(childLeft);
			thisNode.add(childMid);
			thisNode.add(childRight);
			parse(childRight);
			return;
		}
		
		if (parser.isFunctionExpression(aVector)) {
			int pt = 0;
			while (!parser.isFunctionName(parser.truncate(aVector, 0, pt)) && pt < aVector.size()) {
				pt ++;
			}
			
			Vector<Character> vectorFunction = parser.truncate(aVector, 0, pt);
			DefaultMutableTreeNode childFunction = new DefaultMutableTreeNode(vectorFunction);
			
			Vector<Character> vectorLeft = parser.truncate(aVector, pt, pt + 1);
			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);
			
			Vector<Character> vectorMid = parser.truncate(aVector, pt + 1, aVector.size() - 1);
			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);
			
			Vector<Character> vectorRight = parser.truncate(aVector, aVector.size() - 1, aVector.size());
			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);
			
			thisNode.add(childFunction);
			thisNode.add(childLeft);
			thisNode.add(childMid);
			parseParameters(childMid);
			thisNode.add(childRight);
			return;
		}
		
		if (parser.isExpExpression(aVector)) {
			int pt = 0;
			while (pt < aVector.size() && 
					(!parser.isCaret(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {
				pt ++;
			}
			
			
			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);
			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);
			
			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);
			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);
			
			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());
			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);
			
			thisNode.add(childLeft);
			parse(childLeft);
			thisNode.add(childMid);
			thisNode.add(childRight);
			parse(childRight);
			return;
		}
		
		
		if (parser.isParenthesisExpression(aVector)) {
			Vector<Character> vectorLeft = new Vector<Character>();
			vectorLeft.add('(');
			
			Vector<Character> vectorMid = parser.truncateBoth(aVector);
			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);
			
			Vector<Character> vectorRight = new Vector<Character>();
			vectorRight.add(')');
			
			thisNode.add(new DefaultMutableTreeNode(vectorLeft));
			thisNode.add(childMid);
			thisNode.add(new DefaultMutableTreeNode(vectorRight));
			parse(childMid);
			return;
		}
		
		
		
	}
	
	public void parseParameters(DefaultMutableTreeNode thisNode) {
		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();
		if (parser.isExpression(aVector)) {
			parse(thisNode);
			return;
		}
		
		int pt = 0;
		while (pt < aVector.size() && 
				(!parser.isComma(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isParameters(parser.truncate(aVector, pt + 1, aVector.size())))) {
			pt ++;
		}
		
		Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);
		DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);
		
		Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);
		DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);
		
		Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());
		DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);
		
		thisNode.add(childLeft);
		parse(childLeft);
		thisNode.add(childMid);
		thisNode.add(childRight);
		parseParameters(childRight);
		return;
		
	}
	
	public JTree getTree() {
		return tree;
	}
	
	public DefaultMutableTreeNode getRoot() {
		return rootNode;
	}
}
]]></snapshot>
  </Command>
  <Command __id="184" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:33:52 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="468723" />
  <Command __id="185" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:55 EDT 2021" docASTNodeCount="121" docActiveCodeLength="632" docExpressionCount="75" docLength="686" projectName="TaskBox" starttimestamp="1619011563329" timestamp="472535">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\ParserMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JFrame;¶import javax.swing.JTree;¶¶public class ParserMain{¶	public static void main(String[] args) {¶		String exp = "pow(1,2)";¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < exp.length(); i ++) {¶			rootVector.add(exp.charAt(i));¶		}¶		// System.out.println(parser.isExpression(rootVector))¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		¶		JFrame frame = new JFrame();¶		frame.add(treeParser.getTree());¶		TexTreeBuilder builder = new TexTreeBuilder();¶		builder.build(treeParser.getRoot());¶		frame.setVisible(true);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="186" _type="MoveCaretCommand" caretOffset="394" date="Wed Apr 21 09:33:55 EDT 2021" docOffset="451" starttimestamp="1619011563329" timestamp="472583" />
  <Command __id="187" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:56 EDT 2021" docASTNodeCount="1375" docActiveCodeLength="7559" docExpressionCount="897" docLength="7559" projectName="TaskBox" starttimestamp="1619011563329" timestamp="473172">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Arrays;¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶¶public class JavaExpressionParser {¶	public static final char COMMA = ',', PLUS = '+', MINUS = '-', TIMES = '*', DIVIDES = '/', CARET = '^', EQUALS = '=', LP = '(', RP = ')';¶	public enum FunctionName{¶		SQRT ("sqrt"),¶		POW ("pow"),¶		EXP ("exp"),¶		LOG ("log"),¶		SIN ("sin"),¶		COS ("cos"),¶		TAN ("tan"),¶		MIN ("min"),¶		MAX ("max");¶		public String name;¶		FunctionName(String newName){¶			name = newName;¶		}¶	}¶	¶	¶	public JavaExpressionParser(){¶		¶	}¶	¶	public Vector<Character> trim(Vector<Character> aVector){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : aVector) {¶			if (c != ' ') {¶				newVector.add(c);¶			}¶		}¶		return newVector;¶	}¶	¶	public boolean isExpression(Vector<Character> aVector) {¶		System.out.println("Testing Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		return isAtomicExpression(aVector) || isAddSubExpression(aVector) || isMultiDivExpression(aVector) || isExpExpression(aVector) || isFunctionExpression(aVector) || isParenthesisExpression(aVector);¶	}¶	public boolean isAddSubExpression(Vector<Character> aVector) {¶		System.out.println("Testing add-sub Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isAddOrSub(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isMultiDivExpression(Vector<Character> aVector) {¶		System.out.println("Testing multi div Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isMultiOrDiv(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isExpExpression(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isCaret(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isFunctionExpression(Vector<Character> aVector) {¶		System.out.println("Testing function Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (!isFunctionName(truncate(aVector, 0, pt)) && pt < aVector.size()) {¶			pt ++;¶		}¶		if (aVector.size() == pt) return false;¶		return isFunctionParameters(truncate(aVector, pt, aVector.size()));¶	}¶	public boolean isFunctionParameters(Vector<Character> aVector) {¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size()-1)) && isParameters(truncateBoth(aVector));¶	}¶	public boolean isParameters(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		if (isExpression(aVector)) return true;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isComma(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isParameters(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isParenthesisExpression(Vector<Character> aVector) {¶		System.out.println("Testing parenthesis Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		System.out.println("Parenthesis Expression " + truncateBoth(aVector));¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size() - 1)) && isExpression(truncateBoth(aVector));¶	}¶	public boolean isFunctionName(Vector<Character> aVector) {¶		for (FunctionName functionName : FunctionName.values()) {¶			if (compare(aVector, functionName.name)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	public boolean isAtomicExpression(Vector<Character> aVector) {¶		return isNumber(aVector) || isVariable(aVector);¶	}¶	public boolean isNumber(Vector<Character> aVector) {¶		return isUnsignedNumber(aVector) || (isSign(aVector.get(0)) && isUnsignedNumber(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedNumber(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isNonZeroDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isUnsignedVariable(aVector);¶		}¶		return isUnsignedVariable(aVector) || (isSign(aVector.get(0)) && isUnsignedVariable(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetter(aVector.get(0));¶		}¶		return isLetter(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetterOrDigit(aVector.get(0));¶		}¶		return isLetterOrDigit(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterOrDigit(char aChar) {¶		return isLetter(aChar) || isDigit(aChar);¶	}¶	public boolean isSign(char aChar) {¶		return aChar == PLUS || aChar == MINUS; ¶	}¶	public boolean isNonZeroDigit(char aChar) {¶		return aChar <= '9' && aChar >= '1';¶	}¶	public boolean isDigit(char aChar) {¶		return Character.isDigit(aChar);¶	}¶	public boolean isLetter(char aChar) {¶		return Character.isLetter(aChar);¶	}¶	public boolean isComma(char aChar) {¶		return aChar == COMMA;¶	}¶	public boolean isRightParenthesis(char aChar) {¶		return aChar == RP;¶	}¶	public boolean isLeftParenthesis(char aChar) {¶		return aChar == LP;¶	}¶	public boolean isAddOrSub(char aChar) {¶		return aChar == PLUS || aChar == MINUS;¶	}¶	public boolean isMultiOrDiv(char aChar) {¶		return aChar == TIMES || aChar == DIVIDES;¶	}¶	public boolean isCaret(char aChar) {¶		return CARET == aChar;¶	}¶	public Vector<Character> truncate(Vector<Character> aVector, int start, int end){¶		Vector<Character> newVector = new Vector<Character>();¶		for (int i = start; i < end; i ++) {¶			newVector.add(aVector.get(i));¶		}¶		return newVector;¶	}¶	public Vector<Character> truncateLeft(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size());¶	}¶	public Vector<Character> truncateRight(Vector<Character> aVector){¶		return truncate(aVector, 0, aVector.size()-1);¶	}¶	public Vector<Character> truncateBoth(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size()-1);¶	}¶	public int find(Vector<Character> aVector, char aChar, int start) {¶		for (int i = start; i < aVector.size(); i ++) {¶			if (aVector.get(i) == aChar) {¶				return i;¶			}¶		}¶		return -1;¶	}¶	public boolean compare(Vector<Character> aVector, String aString) {¶		if (aVector.size() != aString.length()) {¶			return false;¶		}¶		for (int i = 0; i < aVector.size(); i ++) {¶			if (aVector.get(i) != aString.charAt(i)) {¶				return false;¶			}¶		}¶		return true;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="188" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:33:56 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="473272" />
  <Command __id="189" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:33:57 EDT 2021" docASTNodeCount="121" docActiveCodeLength="632" docExpressionCount="75" docLength="686" projectName="TaskBox" starttimestamp="1619011563329" timestamp="473951">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\ParserMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JFrame;¶import javax.swing.JTree;¶¶public class ParserMain{¶	public static void main(String[] args) {¶		String exp = "pow(1,2)";¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < exp.length(); i ++) {¶			rootVector.add(exp.charAt(i));¶		}¶		// System.out.println(parser.isExpression(rootVector))¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		¶		JFrame frame = new JFrame();¶		frame.add(treeParser.getTree());¶		TexTreeBuilder builder = new TexTreeBuilder();¶		builder.build(treeParser.getRoot());¶		frame.setVisible(true);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="190" _type="MoveCaretCommand" caretOffset="394" date="Wed Apr 21 09:33:57 EDT 2021" docOffset="451" starttimestamp="1619011563329" timestamp="474008" />
  <Command __id="191" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:34:00 EDT 2021" docASTNodeCount="1036" docActiveCodeLength="6331" docExpressionCount="709" docLength="6331" projectName="TaskBox" starttimestamp="1619011563329" timestamp="476728">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionTreeParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶public class JavaExpressionTreeParser {¶	private DefaultMutableTreeNode rootNode;¶	private JTree tree;¶	private JavaExpressionParser parser = new JavaExpressionParser();¶	¶	public JavaExpressionTreeParser(Vector<Character> aVector) {¶		if (parser.isExpression(aVector)) {¶			rootNode = new DefaultMutableTreeNode(aVector);¶			tree = new JTree(rootNode);¶			parse(rootNode);¶		}¶	}¶	¶	public void parse(DefaultMutableTreeNode thisNode) {¶		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();¶		if (parser.isAtomicExpression(aVector)) {¶			return;¶		}¶		¶		if (parser.isAddSubExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isAddOrSub(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		if (parser.isMultiDivExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isMultiOrDiv(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		if (parser.isFunctionExpression(aVector)) {¶			int pt = 0;¶			while (!parser.isFunctionName(parser.truncate(aVector, 0, pt)) && pt < aVector.size()) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorFunction = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childFunction = new DefaultMutableTreeNode(vectorFunction);¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt + 1, aVector.size() - 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, aVector.size() - 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childFunction);¶			thisNode.add(childLeft);¶			thisNode.add(childMid);¶			parseParameters(childMid);¶			thisNode.add(childRight);¶			return;¶		}¶		¶		if (parser.isExpExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isCaret(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		¶		if (parser.isParenthesisExpression(aVector)) {¶			Vector<Character> vectorLeft = new Vector<Character>();¶			vectorLeft.add('(');¶			¶			Vector<Character> vectorMid = parser.truncateBoth(aVector);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = new Vector<Character>();¶			vectorRight.add(')');¶			¶			thisNode.add(new DefaultMutableTreeNode(vectorLeft));¶			thisNode.add(childMid);¶			thisNode.add(new DefaultMutableTreeNode(vectorRight));¶			parse(childMid);¶			return;¶		}¶		¶		¶		¶	}¶	¶	public void parseParameters(DefaultMutableTreeNode thisNode) {¶		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();¶		if (parser.isExpression(aVector)) {¶			parse(thisNode);¶			return;¶		}¶		¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!parser.isComma(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isParameters(parser.truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		¶		Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶		DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶		¶		Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶		DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶		¶		Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶		DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶		¶		thisNode.add(childLeft);¶		parse(childLeft);¶		thisNode.add(childMid);¶		thisNode.add(childRight);¶		parseParameters(childRight);¶		return;¶		¶	}¶	¶	public JTree getTree() {¶		return tree;¶	}¶	¶	public DefaultMutableTreeNode getRoot() {¶		return rootNode;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="192" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:34:00 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="476821" />
  <Command __id="194" _type="MoveCaretCommand" caretOffset="394" date="Wed Apr 21 09:34:03 EDT 2021" docOffset="451" starttimestamp="1619011563329" timestamp="480058" />
  <Command __id="193" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:34:03 EDT 2021" docASTNodeCount="121" docActiveCodeLength="632" docExpressionCount="75" docLength="686" projectName="TaskBox" starttimestamp="1619011563329" timestamp="480008">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\ParserMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JFrame;¶import javax.swing.JTree;¶¶public class ParserMain{¶	public static void main(String[] args) {¶		String exp = "pow(1,2)";¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < exp.length(); i ++) {¶			rootVector.add(exp.charAt(i));¶		}¶		// System.out.println(parser.isExpression(rootVector))¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		¶		JFrame frame = new JFrame();¶		frame.add(treeParser.getTree());¶		TexTreeBuilder builder = new TexTreeBuilder();¶		builder.build(treeParser.getRoot());¶		frame.setVisible(true);¶	}¶	¶}¶")]]]></diff>
  </Command>
  <Command __id="195" _type="MoveCaretCommand" caretOffset="498" date="Wed Apr 21 09:34:08 EDT 2021" docOffset="555" starttimestamp="1619011563329" timestamp="485339" />
  <Command __id="196" _type="MoveCaretCommand" caretOffset="500" date="Wed Apr 21 09:34:08 EDT 2021" docOffset="557" starttimestamp="1619011563329" timestamp="485658" />
  <Command __id="197" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:34:25 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3766" docExpressionCount="354" docLength="3766" projectName="TaskBox" starttimestamp="1619011563329" timestamp="501943">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="198" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:34:25 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="502032" />
  <Command __id="200" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:34:32 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="508698" />
  <Command __id="199" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:34:31 EDT 2021" docASTNodeCount="146" docActiveCodeLength="916" docExpressionCount="108" docLength="916" projectName="TaskBox" starttimestamp="1619011563329" timestamp="508618">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\TaskPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import components.composedGraph.ComposedGraph;¶import components.mainpanel.MainPanel;¶import components.mainpanel.MainPanelInterface;¶import components.page.pages.Page;¶import exporter.Exporter;¶¶public class TaskPanel {¶¶	public static void main(String[] args) {¶		MainPanelInterface panel = new MainPanel();¶		panel.addPage(new Page("Example task I", "", 0));¶		panel.addPage(new Page("Example task II", "", 1));¶		¶		ObjectEditor.setPropertyAttribute(Page.class, "answer", AttributeNames.SCROLLED, true);¶		ObjectEditor.setMethodAttribute(ComposedGraph.class, "addLine", AttributeNames.ICON, "Test");¶		¶		OEFrame frame = ObjectEditor.edit(panel);¶		¶		¶		¶		¶		frame.setSize(700, 1000);¶		frame.setLocation(0, 0);¶		Exporter.export(panel, "example.json");¶¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="201" _type="MoveCaretCommand" caretOffset="526" date="Wed Apr 21 09:34:35 EDT 2021" docOffset="803" starttimestamp="1619011563329" timestamp="512558" />
  <Command __id="223" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:34:40 EDT 2021" starttimestamp="1619011563329" timestamp="517669" />
  <Command __id="224" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:34:41 EDT 2021" starttimestamp="1619011563329" timestamp="517674" />
  <Command __id="226" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:34:41 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="518368" />
  <Command __id="227" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:34:49 EDT 2021" starttimestamp="1619011563329" timestamp="525700" />
  <Command __id="228" _type="RunCommand" date="Wed Apr 21 09:34:49 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="525868" type="Run" />
  <Command __id="229" _type="RunCommand" date="Wed Apr 21 09:34:49 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="525868" type="Run" />
  <Command __id="230" _type="ShellCommand" date="Wed Apr 21 09:34:50 EDT 2021" starttimestamp="1619011563329" timestamp="526753" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="231" _type="ConsoleOutput" date="Wed Apr 21 09:34:50 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="527018" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[null]]></diff>
  </Command>
  <DocumentChange __id="202" _type="Delete" date="Wed Apr 21 09:34:37 EDT 2021" docASTNodeCount="146" docActiveCodeLength="904" docExpressionCount="108" docLength="904" endLine="25" length="12" offset="791" repeat="9" startLine="22" starttimestamp="1619011563329" timestamp="514232" timestamp2="515509">
    <text><![CDATA[
		
		
		]]></text>
  </DocumentChange>
  <Command __id="225" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:34:41 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3766" docExpressionCount="354" docLength="3766" projectName="TaskBox" starttimestamp="1619011563329" timestamp="518283">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="232" _type="ShellCommand" date="Wed Apr 21 09:34:53 EDT 2021" starttimestamp="1619011563329" timestamp="529878" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="233" _type="RunCommand" date="Wed Apr 21 09:34:53 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="530047" type="Run" />
  <Command __id="234" _type="RunCommand" date="Wed Apr 21 09:34:53 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="530047" type="Run" />
  <Command __id="235" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:34:59 EDT 2021" docASTNodeCount="1569" docActiveCodeLength="10456" docExpressionCount="1141" docLength="10456" projectName="TaskBox" starttimestamp="1619011563329" timestamp="536664">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(1)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		render(builder.build(treeParser.getRoot()));
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="236" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:35:00 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="536774" />
  <Command __id="237" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:35:06 EDT 2021" docASTNodeCount="400" docActiveCodeLength="2662" docExpressionCount="272" docLength="2662" projectName="TaskBox" starttimestamp="1619011563329" timestamp="542870">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mainpanel\MainPanel.java]]></filePath>
    <diff><![CDATA[null]]></diff>
    <snapshot><![CDATA[package components.mainpanel;

import java.beans.PropertyChangeEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;

import components.composedGraph.ComposedGraph;
import components.composedGraph.ComposedGraphInterface;
import components.page.pages.PageInterface;
import exporter.Exporter;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Label;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"currentPage"})
@EditablePropertyNames({})
public class MainPanel implements MainPanelInterface{
	
	private List<PageInterface> pages = new ArrayList<PageInterface> ();
	private PageInterface currentPage;
	private int currentPageIndex = 0;
	
	public MainPanel() {
		
	}
	

	@Override
	public List<PageInterface> getPages() {
		return pages;
	}

	@Override
	public void setPages(List<PageInterface> newPages) {
		pages = newPages;
	}
	
	@PreferredWidgetClass(JButton.class)
	@Label(">")
	@Column(2)
	@Row(0)
	@Override
	public void nextPage() {
		if (pages.size() == 0) return;
		if (currentPageIndex == pages.size() - 1) {
			setCurrentPageIndex(0);
		}
		else {
			setCurrentPageIndex(getCurrentPageIndex() + 1);
		}
	}

	@PreferredWidgetClass(JButton.class)
	@Label("<")
	@Column(0)
	@Row(0)
	@Override
	public void prevPage() {
		if (pages.size() == 0) return;
		if (currentPageIndex == 0) {
			setCurrentPageIndex(pages.size() - 1);
		}
		else {
			setCurrentPageIndex(getCurrentPageIndex() - 1);
		}
	}

	@Override
	public int getCurrentPageIndex() {
		return currentPageIndex;
	}

	@Override
	public void setCurrentPageIndex(int newPageIndex) {
		currentPageIndex = newPageIndex;
		setCurrentPage(pages.get(currentPageIndex));
	}

	@Override
	@Column(1)
	@ComponentWidth(200)
	public PageInterface getCurrentPage() {
		return currentPage;
	}

	@Override
	public void setCurrentPage(PageInterface newPage) {
		currentPage = newPage;
	}

	@Override
	public void clearPages() {
		pages.clear();
	}
	
	@Override
	public void addPage(PageInterface newPage) {
		getPages().add(newPage);
		newPage.addPropertyChangeListener(this);
		setCurrentPageIndex(getCurrentPageIndex());
	}

	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		
	}

}
]]></snapshot>
  </Command>
  <Command __id="238" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:35:06 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="542975" />
  <Command __id="239" _type="MoveCaretCommand" caretOffset="601" date="Wed Apr 21 09:35:06 EDT 2021" docOffset="1266" starttimestamp="1619011563329" timestamp="543441" />
  <Command __id="241" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:35:15 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="552275" />
  <Command __id="242" _type="MoveCaretCommand" caretOffset="559" date="Wed Apr 21 09:35:17 EDT 2021" docOffset="1586" starttimestamp="1619011563329" timestamp="554241" />
  <Command __id="243" _type="MoveCaretCommand" caretOffset="559" date="Wed Apr 21 09:35:20 EDT 2021" docOffset="1586" starttimestamp="1619011563329" timestamp="557653" />
  <Command __id="244" _type="MoveCaretCommand" caretOffset="988" date="Wed Apr 21 09:35:21 EDT 2021" docOffset="2015" starttimestamp="1619011563329" timestamp="558177" />
  <Command __id="245" _type="MoveCaretCommand" caretOffset="1342" date="Wed Apr 21 09:35:22 EDT 2021" docOffset="2369" starttimestamp="1619011563329" timestamp="558731" />
  <Command __id="246" _type="MoveCaretCommand" caretOffset="1479" date="Wed Apr 21 09:35:22 EDT 2021" docOffset="2506" starttimestamp="1619011563329" timestamp="559123" />
  <Command __id="247" _type="SelectTextCommand" caretOffset="1535" date="Wed Apr 21 09:35:22 EDT 2021" end="1535" start="1531" starttimestamp="1619011563329" timestamp="559386" />
  <Command __id="248" _type="MoveCaretCommand" caretOffset="1531" date="Wed Apr 21 09:35:23 EDT 2021" docOffset="2558" starttimestamp="1619011563329" timestamp="559826" />
  <Command __id="249" _type="MoveCaretCommand" caretOffset="1531" date="Wed Apr 21 09:35:25 EDT 2021" docOffset="2558" starttimestamp="1619011563329" timestamp="562069" />
  <Command __id="250" _type="MoveCaretCommand" caretOffset="1483" date="Wed Apr 21 09:35:25 EDT 2021" docOffset="2510" starttimestamp="1619011563329" timestamp="562491" />
  <Command __id="251" _type="MoveCaretCommand" caretOffset="1531" date="Wed Apr 21 09:35:26 EDT 2021" docOffset="2558" starttimestamp="1619011563329" timestamp="563052" />
  <Command __id="252" _type="MoveCaretCommand" caretOffset="1531" date="Wed Apr 21 09:35:29 EDT 2021" docOffset="2558" starttimestamp="1619011563329" timestamp="565981" />
  <Command __id="253" _type="MoveCaretCommand" caretOffset="1483" date="Wed Apr 21 09:35:29 EDT 2021" docOffset="2510" starttimestamp="1619011563329" timestamp="566296" />
  <Command __id="254" _type="SelectTextCommand" caretOffset="1487" date="Wed Apr 21 09:35:35 EDT 2021" end="1531" start="1487" starttimestamp="1619011563329" timestamp="572534" />
  <Command __id="255" _type="SelectTextCommand" caretOffset="1487" date="Wed Apr 21 09:35:35 EDT 2021" end="1531" start="1487" starttimestamp="1619011563329" timestamp="572607" />
  <Command __id="256" _type="MoveCaretCommand" caretOffset="1175" date="Wed Apr 21 09:35:36 EDT 2021" docOffset="2202" starttimestamp="1619011563329" timestamp="573410" />
  <Command __id="257" _type="SelectTextCommand" caretOffset="1487" date="Wed Apr 21 09:35:38 EDT 2021" end="1531" start="1487" starttimestamp="1619011563329" timestamp="575613" />
  <Command __id="258" _type="MoveCaretCommand" caretOffset="1558" date="Wed Apr 21 09:35:39 EDT 2021" docOffset="2585" starttimestamp="1619011563329" timestamp="575882" />
  <Command __id="259" _type="SelectTextCommand" caretOffset="1541" date="Wed Apr 21 09:35:44 EDT 2021" end="1650" start="1541" starttimestamp="1619011563329" timestamp="581570" />
  <Command __id="260" _type="MoveCaretCommand" caretOffset="1782" date="Wed Apr 21 09:35:45 EDT 2021" docOffset="2809" starttimestamp="1619011563329" timestamp="582024" />
  <Command __id="240" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:35:15 EDT 2021" docASTNodeCount="1569" docActiveCodeLength="10456" docExpressionCount="1141" docLength="10456" projectName="TaskBox" starttimestamp="1619011563329" timestamp="552190">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(1)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		render(builder.build(treeParser.getRoot()));¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="261" _type="SelectTextCommand" caretOffset="1539" date="Wed Apr 21 09:35:46 EDT 2021" end="1778" start="1539" starttimestamp="1619011563329" timestamp="583337" />
  <Command __id="263" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:35:51 EDT 2021" starttimestamp="1619011563329" timestamp="587798" />
  <Command __id="265" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:35:51 EDT 2021" starttimestamp="1619011563329" timestamp="588086" />
  <Command __id="267" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:35:51 EDT 2021" starttimestamp="1619011563329" timestamp="588303" />
  <Command __id="269" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:35:51 EDT 2021" starttimestamp="1619011563329" timestamp="588559" />
  <Command __id="270" _type="SelectTextCommand" caretOffset="1491" date="Wed Apr 21 09:35:52 EDT 2021" end="1493" start="1491" starttimestamp="1619011563329" timestamp="589489" />
  <Command __id="286" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:35:57 EDT 2021" starttimestamp="1619011563329" timestamp="594361" />
  <Command __id="287" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:35:57 EDT 2021" starttimestamp="1619011563329" timestamp="594368" />
  <Command __id="289" _type="UndoCommand" date="Wed Apr 21 09:35:57 EDT 2021" starttimestamp="1619011563329" timestamp="594556" />
  <Command __id="291" _type="UndoCommand" date="Wed Apr 21 09:35:58 EDT 2021" starttimestamp="1619011563329" timestamp="594929" />
  <Command __id="293" _type="UndoCommand" date="Wed Apr 21 09:35:58 EDT 2021" starttimestamp="1619011563329" timestamp="595479" />
  <Command __id="294" _type="MoveCaretCommand" caretOffset="1492" date="Wed Apr 21 09:35:59 EDT 2021" docOffset="2519" starttimestamp="1619011563329" timestamp="596264" />
  <Command __id="295" _type="SelectTextCommand" caretOffset="1487" date="Wed Apr 21 09:36:00 EDT 2021" end="1493" start="1487" starttimestamp="1619011563329" timestamp="597548" />
  <Command __id="296" _type="SelectTextCommand" caretOffset="1560" date="Wed Apr 21 09:36:02 EDT 2021" end="1576" start="1560" starttimestamp="1619011563329" timestamp="599176" />
  <Command __id="297" _type="CopyCommand" date="Wed Apr 21 09:36:02 EDT 2021" starttimestamp="1619011563329" timestamp="599362" />
  <Command __id="298" _type="SelectTextCommand" caretOffset="1487" date="Wed Apr 21 09:36:03 EDT 2021" end="1493" start="1487" starttimestamp="1619011563329" timestamp="600382" />
  <Command __id="300" _type="PasteCommand" date="Wed Apr 21 09:36:03 EDT 2021" starttimestamp="1619011563329" timestamp="600581" />
  <Command __id="301" _type="MoveCaretCommand" caretOffset="1382" date="Wed Apr 21 09:36:04 EDT 2021" docOffset="2409" starttimestamp="1619011563329" timestamp="600911" />
  <Command __id="302" _type="MoveCaretCommand" caretOffset="1175" date="Wed Apr 21 09:36:04 EDT 2021" docOffset="2202" starttimestamp="1619011563329" timestamp="601173" />
  <Command __id="303" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:36:05 EDT 2021" starttimestamp="1619011563329" timestamp="601814" />
  <Command __id="304" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:36:05 EDT 2021" starttimestamp="1619011563329" timestamp="601910" />
  <Command __id="305" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:36:05 EDT 2021" starttimestamp="1619011563329" timestamp="601937" />
  <Command __id="306" _type="MoveCaretCommand" caretOffset="1545" date="Wed Apr 21 09:36:05 EDT 2021" docOffset="2572" starttimestamp="1619011563329" timestamp="602218" />
  <DocumentChange __id="262" _type="Delete" date="Wed Apr 21 09:35:51 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10213" docExpressionCount="1114" docLength="10213" endLine="86" length="243" offset="2562" repeat="4" startLine="79" starttimestamp="1619011563329" timestamp="587790" timestamp2="588553">
    <text><![CDATA[
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);]]></text>
  </DocumentChange>
  <DocumentChange __id="272" _type="Delete" date="Wed Apr 21 09:35:54 EDT 2021" docASTNodeCount="1533" docActiveCodeLength="10206" docExpressionCount="1112" docLength="10206" endLine="78" length="7" offset="2514" startLine="78" starttimestamp="1619011563329" timestamp="590966">
    <text><![CDATA[render(]]></text>
  </DocumentChange>
  <DocumentChange __id="275" _type="Delete" date="Wed Apr 21 09:35:54 EDT 2021" docASTNodeCount="1533" docActiveCodeLength="10204" docExpressionCount="1112" docLength="10204" endLine="78" length="2" offset="2549" repeat="2" startLine="78" starttimestamp="1619011563329" timestamp="591629" timestamp2="591773">
    <text><![CDATA[);]]></text>
  </DocumentChange>
  <DocumentChange __id="279" _type="Insert" date="Wed Apr 21 09:35:55 EDT 2021" docASTNodeCount="1533" docActiveCodeLength="10209" docExpressionCount="1112" docLength="10209" length="5" offset="2549" repeat="2" starttimestamp="1619011563329" timestamp="592521" timestamp2="593119">
    <text><![CDATA[;
		]]></text>
  </DocumentChange>
  <DocumentChange __id="288" _type="Delete" date="Wed Apr 21 09:35:57 EDT 2021" docASTNodeCount="1533" docActiveCodeLength="10204" docExpressionCount="1112" docLength="10204" endLine="79" length="5" offset="2549" startLine="78" starttimestamp="1619011563329" timestamp="594547">
    <text><![CDATA[;
		]]></text>
  </DocumentChange>
  <DocumentChange __id="290" _type="Insert" date="Wed Apr 21 09:35:58 EDT 2021" docASTNodeCount="1533" docActiveCodeLength="10206" docExpressionCount="1112" docLength="10206" length="2" offset="2549" starttimestamp="1619011563329" timestamp="594926">
    <text><![CDATA[);]]></text>
  </DocumentChange>
  <DocumentChange __id="292" _type="Insert" date="Wed Apr 21 09:35:58 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10213" docExpressionCount="1114" docLength="10213" length="7" offset="2514" starttimestamp="1619011563329" timestamp="595477">
    <text><![CDATA[render(]]></text>
  </DocumentChange>
  <DocumentChange __id="299" _type="Replace" date="Wed Apr 21 09:36:03 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" endLine="78" insertionLength="18" int_docASTNodeCount="1534" int_docActiveCodeLength="10205" int_docExpressionCount="1113" int_docLength="10205" length="8" offset="2512" startLine="78" starttimestamp="1619011563329" timestamp="600574">
    <deletedText><![CDATA[		render]]></deletedText>
    <insertedText><![CDATA[		setTexExpression]]></insertedText>
  </DocumentChange>
  <Command __id="307" _type="MoveCaretCommand" caretOffset="1483" date="Wed Apr 21 09:36:06 EDT 2021" docOffset="2510" starttimestamp="1619011563329" timestamp="603570" />
  <Command __id="309" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:36:09 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="606512" />
  <Command __id="310" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:36:14 EDT 2021" starttimestamp="1619011563329" timestamp="611135" />
  <Command __id="311" _type="RunCommand" date="Wed Apr 21 09:36:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="611245" type="Run" />
  <Command __id="312" _type="RunCommand" date="Wed Apr 21 09:36:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="611245" type="Run" />
  <Command __id="313" _type="ShellCommand" date="Wed Apr 21 09:36:15 EDT 2021" starttimestamp="1619011563329" timestamp="612032" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="314" _type="ConsoleOutput" date="Wed Apr 21 09:36:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="612179" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶"), Diff(DELETE,"W*** Value: null of Root.Image not in range.¶")]]]></diff>
  </Command>
  <Command __id="315" _type="ConsoleOutput" date="Wed Apr 21 09:36:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="612288" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="316" _type="ConsoleOutput" date="Wed Apr 21 09:36:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="617127" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, 1, )]
Testing add-sub Expression [e, x, p, (, 1, )]
Testing multi div Expression [e, x, p, (, 1, )]
Testing function Expression [e, x, p, (, 1, )]
Testing Expression [1]
Testing add-sub Expression [e, x, p, (, 1, )]
Testing multi div Expression [e, x, p, (, 1, )]
Testing function Expression [e, x, p, (, 1, )]
Testing Expression [1]
Testing Expression [1]
Testing Expression [1]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [e, x, p, (, 1, )]¶Testing add-sub Expression [e, x, p, (, 1, )]¶Testing multi div Expression [e, x, p, (, 1, )]¶Testing function Expression [e, x, p, (, 1, )]¶Testing Expression [1]¶Testing add-sub Expression [e, x, p, (, 1, )]¶Testing multi div Expression [e, x, p, (, 1, )]¶Testing function Expression [e, x, p, (, 1, )]¶Testing Expression [1]¶Testing Expression [1]¶Testing Expression [1]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="317" _type="ConsoleOutput" date="Wed Apr 21 09:36:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="617516" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, 1, )]¶Testing add-sub Expression [e, x, p, (, 1, )]¶Testing multi div Expression [e, x, p, (, 1, )]¶Testing function Expression [e, x, p, (, 1, )]¶Testing Expression [1]¶Testing add-sub Expression [e, x, p, (, 1, )]¶Testing multi div Expression [e, x, p, (, 1, )]¶Testing function Expression [e, x, p, (, 1, )]¶Testing Expression [1]¶Testing Expression [1]¶Testing Expression [1]"), Diff(INSERT,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="318" _type="ConsoleOutput" date="Wed Apr 21 09:36:46 EDT 2021" overflow="true" starttimestamp="1619011563329" timestamp="643035" type="ConsoleOutput">
    <outputString><![CDATA[
Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing Expression [(, -, b, +, s, q, r, t, (, b]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]
Testing function Expression [(, -, b, +, s, q, r, t, (, b]
Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]
Parenthesis Expression [-, b, +, s, q, r, t, (]
Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]
Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing Expression [(, -, b, +, s, q, r, t, (, b]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]
Testing function Expression [(, -, b, +, s, q, r, t, (, b]
Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]
Parenthesis Expression [-, b, +, s, q, r, t, (]
Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]
Testing Expression [(, -, b, +, s, q, r, t, (, b]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]
Testing function Expression [(, -, b, +, s, q, r, t, (, b]
Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]
Parenthesis Expression [-, b, +, s, q, r, t, (]
Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]
Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]
Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]
Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing multi div Expression [(, -, b]
Testing function Expression [(, -, b]
Testing parenthesis Expression [(, -, b]
Parenthesis Expression [-]
Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
Parenthesis Expression []
Testing Expression [(, -, b]
Testing add-sub Expression [(, -, b]
Testing Expression [(]
Testing add-sub Expression [(]
Testing multi div Expression [(]
Testing function Expression [(]
Testing parenthesis Expression [(]
	Exceeding 200 lines, infinite loop suspected, output ignored.]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [(, 2, *, a, )]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [(, 2, *, a, )]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [(, 2, *, a, )]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing function Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [b]¶Testing Expression [2]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing Expression [2]¶Testing Expression [a]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="319" _type="ShellCommand" date="Wed Apr 21 09:36:54 EDT 2021" starttimestamp="1619011563329" timestamp="650832" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="320" _type="RunCommand" date="Wed Apr 21 09:36:54 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="651009" type="Run" />
  <Command __id="321" _type="RunCommand" date="Wed Apr 21 09:36:54 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="651009" type="Run" />
  <Command __id="322" _type="MoveCaretCommand" caretOffset="1656" date="Wed Apr 21 09:36:58 EDT 2021" docOffset="2009" starttimestamp="1619011563329" timestamp="655483" />
  <Command __id="323" _type="MoveCaretCommand" caretOffset="1800" date="Wed Apr 21 09:37:01 EDT 2021" docOffset="2153" starttimestamp="1619011563329" timestamp="658574" />
  <Command __id="324" _type="SelectTextCommand" caretOffset="2524" date="Wed Apr 21 09:37:11 EDT 2021" end="2524" start="481" starttimestamp="1619011563329" timestamp="667988" />
  <Command __id="325" _type="MoveCaretCommand" caretOffset="2524" date="Wed Apr 21 09:37:11 EDT 2021" docOffset="2877" starttimestamp="1619011563329" timestamp="668134" />
  <Command __id="326" _type="SelectTextCommand" caretOffset="361" date="Wed Apr 21 09:37:12 EDT 2021" end="2548" start="361" starttimestamp="1619011563329" timestamp="669339" />
  <Command __id="327" _type="MoveCaretCommand" caretOffset="362" date="Wed Apr 21 09:37:12 EDT 2021" docOffset="715" starttimestamp="1619011563329" timestamp="669517" />
  <Command __id="328" _type="SelectTextCommand" caretOffset="2524" date="Wed Apr 21 09:37:14 EDT 2021" end="2524" start="362" starttimestamp="1619011563329" timestamp="670676" />
  <Command __id="329" _type="MoveCaretCommand" caretOffset="2524" date="Wed Apr 21 09:37:14 EDT 2021" docOffset="2877" starttimestamp="1619011563329" timestamp="670832" />
  <Command __id="330" _type="SelectTextCommand" caretOffset="362" date="Wed Apr 21 09:37:15 EDT 2021" end="2548" start="362" starttimestamp="1619011563329" timestamp="672305" />
  <Command __id="331" _type="MoveCaretCommand" caretOffset="363" date="Wed Apr 21 09:37:15 EDT 2021" docOffset="716" starttimestamp="1619011563329" timestamp="672483" />
  <Command __id="332" _type="SelectTextCommand" caretOffset="2524" date="Wed Apr 21 09:37:16 EDT 2021" end="2524" start="362" starttimestamp="1619011563329" timestamp="673670" />
  <Command __id="333" _type="MoveCaretCommand" caretOffset="2524" date="Wed Apr 21 09:37:17 EDT 2021" docOffset="2877" starttimestamp="1619011563329" timestamp="673847" />
  <Command __id="334" _type="SelectTextCommand" caretOffset="362" date="Wed Apr 21 09:37:18 EDT 2021" end="2524" start="362" starttimestamp="1619011563329" timestamp="675451" />
  <Command __id="335" _type="MoveCaretCommand" caretOffset="362" date="Wed Apr 21 09:37:18 EDT 2021" docOffset="715" starttimestamp="1619011563329" timestamp="675615" />
  <Command __id="308" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:36:09 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3766" docExpressionCount="354" docLength="3766" projectName="TaskBox" starttimestamp="1619011563329" timestamp="606424">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="336" _type="SelectTextCommand" caretOffset="2528" date="Wed Apr 21 09:37:20 EDT 2021" end="2528" start="362" starttimestamp="1619011563329" timestamp="676958" />
  <Command __id="337" _type="MoveCaretCommand" caretOffset="2413" date="Wed Apr 21 09:37:20 EDT 2021" docOffset="2766" starttimestamp="1619011563329" timestamp="677334" />
  <Command __id="339" _type="MoveCaretCommand" caretOffset="1483" date="Wed Apr 21 09:37:56 EDT 2021" docOffset="2510" starttimestamp="1619011563329" timestamp="713052" />
  <Command __id="340" _type="MoveCaretCommand" caretOffset="1613" date="Wed Apr 21 09:37:59 EDT 2021" docOffset="2640" starttimestamp="1619011563329" timestamp="715805" />
  <Command __id="341" _type="MoveCaretCommand" caretOffset="1526" date="Wed Apr 21 09:37:59 EDT 2021" docOffset="2553" starttimestamp="1619011563329" timestamp="716176" />
  <Command __id="338" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:37:56 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" projectName="TaskBox" starttimestamp="1619011563329" timestamp="712956">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(1)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		"), Diff(DELETE,"render"), Diff(INSERT,"setTexExpression"), Diff(EQUAL,"(builder.build(treeParser.getRoot()));¶		¶	"), Diff(DELETE,"	if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	"), Diff(EQUAL,"}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(4)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(1)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(4)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="342" _type="MoveCaretCommand" caretOffset="817" date="Wed Apr 21 09:38:03 EDT 2021" docOffset="1844" starttimestamp="1619011563329" timestamp="720278" />
  <DocumentChange __id="343" _type="Delete" date="Wed Apr 21 09:38:20 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="59" length="1" offset="1843" startLine="59" starttimestamp="1619011563329" timestamp="736714">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="344" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:20 EDT 2021" starttimestamp="1619011563329" timestamp="736721" />
  <Command __id="346" _type="InsertStringCommand" date="Wed Apr 21 09:38:20 EDT 2021" starttimestamp="1619011563329" timestamp="736981" timestamp2="736981">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="347" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:20 EDT 2021" starttimestamp="1619011563329" timestamp="737618" />
  <Command __id="348" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:21 EDT 2021" starttimestamp="1619011563329" timestamp="737724" />
  <Command __id="349" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:21 EDT 2021" starttimestamp="1619011563329" timestamp="737766" />
  <Command __id="350" _type="MoveCaretCommand" caretOffset="2658" date="Wed Apr 21 09:38:22 EDT 2021" docOffset="3685" starttimestamp="1619011563329" timestamp="739589" />
  <Command __id="352" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:23 EDT 2021" starttimestamp="1619011563329" timestamp="740046" />
  <Command __id="354" _type="InsertStringCommand" date="Wed Apr 21 09:38:23 EDT 2021" starttimestamp="1619011563329" timestamp="740137" timestamp2="740137">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="355" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:23 EDT 2021" starttimestamp="1619011563329" timestamp="740555" />
  <Command __id="356" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741064" />
  <Command __id="357" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741094" />
  <Command __id="358" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741126" />
  <Command __id="359" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741156" />
  <Command __id="360" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741187" />
  <Command __id="361" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741218" />
  <Command __id="362" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741268" />
  <Command __id="363" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741297" />
  <Command __id="364" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741328" />
  <Command __id="365" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:24 EDT 2021" starttimestamp="1619011563329" timestamp="741360" />
  <Command __id="367" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:25 EDT 2021" starttimestamp="1619011563329" timestamp="741840" />
  <Command __id="369" _type="InsertStringCommand" date="Wed Apr 21 09:38:25 EDT 2021" starttimestamp="1619011563329" timestamp="741921" timestamp2="741921">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="370" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:25 EDT 2021" starttimestamp="1619011563329" timestamp="742498" />
  <Command __id="371" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:25 EDT 2021" starttimestamp="1619011563329" timestamp="742643" />
  <Command __id="372" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:26 EDT 2021" starttimestamp="1619011563329" timestamp="742682" />
  <Command __id="373" _type="MoveCaretCommand" caretOffset="3271" date="Wed Apr 21 09:38:27 EDT 2021" docOffset="4298" starttimestamp="1619011563329" timestamp="743770" />
  <Command __id="375" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:27 EDT 2021" starttimestamp="1619011563329" timestamp="744245" />
  <Command __id="377" _type="InsertStringCommand" date="Wed Apr 21 09:38:27 EDT 2021" starttimestamp="1619011563329" timestamp="744277" timestamp2="744277">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="378" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="744847" />
  <Command __id="379" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="744982" />
  <Command __id="380" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="744992" />
  <Command __id="381" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745029" />
  <Command __id="382" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745492" />
  <Command __id="383" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745524" />
  <Command __id="384" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745559" />
  <Command __id="385" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745587" />
  <Command __id="386" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745617" />
  <Command __id="387" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:28 EDT 2021" starttimestamp="1619011563329" timestamp="745648" />
  <Command __id="388" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:29 EDT 2021" starttimestamp="1619011563329" timestamp="745681" />
  <Command __id="389" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:29 EDT 2021" starttimestamp="1619011563329" timestamp="745727" />
  <Command __id="390" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:29 EDT 2021" starttimestamp="1619011563329" timestamp="745976" />
  <Command __id="391" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 09:38:29 EDT 2021" starttimestamp="1619011563329" timestamp="746171" />
  <Command __id="393" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:29 EDT 2021" starttimestamp="1619011563329" timestamp="746566" />
  <Command __id="395" _type="InsertStringCommand" date="Wed Apr 21 09:38:29 EDT 2021" starttimestamp="1619011563329" timestamp="746657" timestamp2="746657">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="396" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:30 EDT 2021" starttimestamp="1619011563329" timestamp="747192" />
  <Command __id="397" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:30 EDT 2021" starttimestamp="1619011563329" timestamp="747289" />
  <Command __id="398" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:30 EDT 2021" starttimestamp="1619011563329" timestamp="747325" />
  <Command __id="399" _type="MoveCaretCommand" caretOffset="3836" date="Wed Apr 21 09:38:32 EDT 2021" docOffset="4863" starttimestamp="1619011563329" timestamp="748730" />
  <Command __id="401" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:32 EDT 2021" starttimestamp="1619011563329" timestamp="749232" />
  <Command __id="403" _type="InsertStringCommand" date="Wed Apr 21 09:38:32 EDT 2021" starttimestamp="1619011563329" timestamp="749268" timestamp2="749268">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="404" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:33 EDT 2021" starttimestamp="1619011563329" timestamp="749762" />
  <Command __id="405" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:33 EDT 2021" starttimestamp="1619011563329" timestamp="749860" />
  <Command __id="406" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:33 EDT 2021" starttimestamp="1619011563329" timestamp="749905" />
  <Command __id="407" _type="MoveCaretCommand" caretOffset="4116" date="Wed Apr 21 09:38:34 EDT 2021" docOffset="5143" starttimestamp="1619011563329" timestamp="750746" />
  <Command __id="408" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:38:34 EDT 2021" starttimestamp="1619011563329" timestamp="751363" />
  <Command __id="410" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:34 EDT 2021" starttimestamp="1619011563329" timestamp="751635" />
  <Command __id="412" _type="InsertStringCommand" date="Wed Apr 21 09:38:35 EDT 2021" starttimestamp="1619011563329" timestamp="751712" timestamp2="751712">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="413" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:35 EDT 2021" starttimestamp="1619011563329" timestamp="752177" />
  <Command __id="414" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:35 EDT 2021" starttimestamp="1619011563329" timestamp="752273" />
  <Command __id="415" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:35 EDT 2021" starttimestamp="1619011563329" timestamp="752310" />
  <Command __id="416" _type="MoveCaretCommand" caretOffset="4394" date="Wed Apr 21 09:38:36 EDT 2021" docOffset="5421" starttimestamp="1619011563329" timestamp="753664" />
  <Command __id="418" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:37 EDT 2021" starttimestamp="1619011563329" timestamp="754144" />
  <Command __id="420" _type="InsertStringCommand" date="Wed Apr 21 09:38:37 EDT 2021" starttimestamp="1619011563329" timestamp="754206" timestamp2="754206">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="421" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:37 EDT 2021" starttimestamp="1619011563329" timestamp="754648" />
  <Command __id="422" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:38 EDT 2021" starttimestamp="1619011563329" timestamp="754744" />
  <Command __id="423" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:38 EDT 2021" starttimestamp="1619011563329" timestamp="754778" />
  <Command __id="424" _type="MoveCaretCommand" caretOffset="4686" date="Wed Apr 21 09:38:39 EDT 2021" docOffset="5713" starttimestamp="1619011563329" timestamp="755966" />
  <Command __id="426" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:39 EDT 2021" starttimestamp="1619011563329" timestamp="756411" />
  <Command __id="428" _type="InsertStringCommand" date="Wed Apr 21 09:38:39 EDT 2021" starttimestamp="1619011563329" timestamp="756464" timestamp2="756464">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="429" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:40 EDT 2021" starttimestamp="1619011563329" timestamp="756921" />
  <Command __id="430" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:40 EDT 2021" starttimestamp="1619011563329" timestamp="757018" />
  <Command __id="431" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:40 EDT 2021" starttimestamp="1619011563329" timestamp="757056" />
  <Command __id="432" _type="MoveCaretCommand" caretOffset="4967" date="Wed Apr 21 09:38:41 EDT 2021" docOffset="5994" starttimestamp="1619011563329" timestamp="757758" />
  <Command __id="434" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:41 EDT 2021" starttimestamp="1619011563329" timestamp="758189" />
  <Command __id="436" _type="InsertStringCommand" date="Wed Apr 21 09:38:41 EDT 2021" starttimestamp="1619011563329" timestamp="758240" timestamp2="758240">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="437" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:42 EDT 2021" starttimestamp="1619011563329" timestamp="758739" />
  <Command __id="438" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:42 EDT 2021" starttimestamp="1619011563329" timestamp="758835" />
  <Command __id="439" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:42 EDT 2021" starttimestamp="1619011563329" timestamp="758870" />
  <Command __id="440" _type="MoveCaretCommand" caretOffset="5250" date="Wed Apr 21 09:38:43 EDT 2021" docOffset="6277" starttimestamp="1619011563329" timestamp="760052" />
  <Command __id="442" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:43 EDT 2021" starttimestamp="1619011563329" timestamp="760513" />
  <Command __id="444" _type="InsertStringCommand" date="Wed Apr 21 09:38:43 EDT 2021" starttimestamp="1619011563329" timestamp="760555" timestamp2="760555">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="445" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:44 EDT 2021" starttimestamp="1619011563329" timestamp="761042" />
  <Command __id="446" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:44 EDT 2021" starttimestamp="1619011563329" timestamp="761139" />
  <Command __id="447" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:44 EDT 2021" starttimestamp="1619011563329" timestamp="761181" />
  <Command __id="448" _type="MoveCaretCommand" caretOffset="5529" date="Wed Apr 21 09:38:45 EDT 2021" docOffset="6556" starttimestamp="1619011563329" timestamp="761909" />
  <Command __id="450" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:45 EDT 2021" starttimestamp="1619011563329" timestamp="762336" />
  <Command __id="452" _type="InsertStringCommand" date="Wed Apr 21 09:38:45 EDT 2021" starttimestamp="1619011563329" timestamp="762399" timestamp2="762399">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="453" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:46 EDT 2021" starttimestamp="1619011563329" timestamp="762841" />
  <Command __id="454" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:46 EDT 2021" starttimestamp="1619011563329" timestamp="762938" />
  <Command __id="455" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:46 EDT 2021" starttimestamp="1619011563329" timestamp="762971" />
  <DocumentChange __id="345" _type="Insert" date="Wed Apr 21 09:38:20 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="1843" starttimestamp="1619011563329" timestamp="736975">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="351" _type="Delete" date="Wed Apr 21 09:38:23 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="117" length="1" offset="3684" startLine="117" starttimestamp="1619011563329" timestamp="740036">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="353" _type="Insert" date="Wed Apr 21 09:38:23 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="3684" starttimestamp="1619011563329" timestamp="740132">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="366" _type="Delete" date="Wed Apr 21 09:38:25 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="128" length="1" offset="3973" startLine="128" starttimestamp="1619011563329" timestamp="741835">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="368" _type="Insert" date="Wed Apr 21 09:38:25 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="3973" starttimestamp="1619011563329" timestamp="741915">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="374" _type="Delete" date="Wed Apr 21 09:38:27 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="140" length="1" offset="4297" startLine="140" starttimestamp="1619011563329" timestamp="744238">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="376" _type="Insert" date="Wed Apr 21 09:38:27 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="4297" starttimestamp="1619011563329" timestamp="744272">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="392" _type="Delete" date="Wed Apr 21 09:38:29 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="151" length="1" offset="4581" startLine="151" starttimestamp="1619011563329" timestamp="746560">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="394" _type="Insert" date="Wed Apr 21 09:38:29 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="4581" starttimestamp="1619011563329" timestamp="746652">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="400" _type="Delete" date="Wed Apr 21 09:38:32 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="162" length="1" offset="4862" startLine="162" starttimestamp="1619011563329" timestamp="749226">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="402" _type="Insert" date="Wed Apr 21 09:38:32 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="4862" starttimestamp="1619011563329" timestamp="749260">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="409" _type="Delete" date="Wed Apr 21 09:38:34 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="173" length="1" offset="5141" startLine="173" starttimestamp="1619011563329" timestamp="751627">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="411" _type="Insert" date="Wed Apr 21 09:38:35 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="5141" starttimestamp="1619011563329" timestamp="751707">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="417" _type="Delete" date="Wed Apr 21 09:38:37 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="184" length="1" offset="5420" startLine="184" starttimestamp="1619011563329" timestamp="754138">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="419" _type="Insert" date="Wed Apr 21 09:38:37 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="5420" starttimestamp="1619011563329" timestamp="754200">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="425" _type="Delete" date="Wed Apr 21 09:38:39 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="195" length="1" offset="5712" startLine="195" starttimestamp="1619011563329" timestamp="756404">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="427" _type="Insert" date="Wed Apr 21 09:38:39 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="5712" starttimestamp="1619011563329" timestamp="756455">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="433" _type="Delete" date="Wed Apr 21 09:38:41 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="206" length="1" offset="5993" startLine="206" starttimestamp="1619011563329" timestamp="758183">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="435" _type="Insert" date="Wed Apr 21 09:38:41 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="5993" starttimestamp="1619011563329" timestamp="758236">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="441" _type="Delete" date="Wed Apr 21 09:38:43 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="217" length="1" offset="6276" startLine="217" starttimestamp="1619011563329" timestamp="760504">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="443" _type="Insert" date="Wed Apr 21 09:38:43 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="6276" starttimestamp="1619011563329" timestamp="760550">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <DocumentChange __id="449" _type="Delete" date="Wed Apr 21 09:38:45 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="228" length="1" offset="6555" startLine="228" starttimestamp="1619011563329" timestamp="762330">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="451" _type="Insert" date="Wed Apr 21 09:38:45 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="6555" starttimestamp="1619011563329" timestamp="762390">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="457" _type="Delete" date="Wed Apr 21 09:38:47 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="239" length="1" offset="6839" startLine="239" starttimestamp="1619011563329" timestamp="764440">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <Command __id="456" _type="MoveCaretCommand" caretOffset="5813" date="Wed Apr 21 09:38:47 EDT 2021" docOffset="6840" starttimestamp="1619011563329" timestamp="764049" />
  <Command __id="458" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:47 EDT 2021" starttimestamp="1619011563329" timestamp="764449" />
  <Command __id="460" _type="InsertStringCommand" date="Wed Apr 21 09:38:47 EDT 2021" starttimestamp="1619011563329" timestamp="764507" timestamp2="764507">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="461" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:48 EDT 2021" starttimestamp="1619011563329" timestamp="764927" />
  <Command __id="462" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:48 EDT 2021" starttimestamp="1619011563329" timestamp="765026" />
  <Command __id="463" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:48 EDT 2021" starttimestamp="1619011563329" timestamp="765060" />
  <Command __id="464" _type="MoveCaretCommand" caretOffset="6099" date="Wed Apr 21 09:38:49 EDT 2021" docOffset="7126" starttimestamp="1619011563329" timestamp="766139" />
  <Command __id="466" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:49 EDT 2021" starttimestamp="1619011563329" timestamp="766552" />
  <Command __id="468" _type="InsertStringCommand" date="Wed Apr 21 09:38:49 EDT 2021" starttimestamp="1619011563329" timestamp="766622" timestamp2="766622">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="469" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:50 EDT 2021" starttimestamp="1619011563329" timestamp="767013" />
  <Command __id="470" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:50 EDT 2021" starttimestamp="1619011563329" timestamp="767115" />
  <Command __id="471" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:50 EDT 2021" starttimestamp="1619011563329" timestamp="767149" />
  <Command __id="472" _type="MoveCaretCommand" caretOffset="6387" date="Wed Apr 21 09:38:51 EDT 2021" docOffset="7414" starttimestamp="1619011563329" timestamp="768267" />
  <Command __id="474" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:52 EDT 2021" starttimestamp="1619011563329" timestamp="768723" />
  <Command __id="476" _type="InsertStringCommand" date="Wed Apr 21 09:38:52 EDT 2021" starttimestamp="1619011563329" timestamp="768796" timestamp2="768796">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="477" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:52 EDT 2021" starttimestamp="1619011563329" timestamp="769172" />
  <Command __id="478" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:52 EDT 2021" starttimestamp="1619011563329" timestamp="769269" />
  <Command __id="479" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:52 EDT 2021" starttimestamp="1619011563329" timestamp="769303" />
  <Command __id="480" _type="MoveCaretCommand" caretOffset="6673" date="Wed Apr 21 09:38:53 EDT 2021" docOffset="7700" starttimestamp="1619011563329" timestamp="770104" />
  <Command __id="482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:53 EDT 2021" starttimestamp="1619011563329" timestamp="770510" />
  <Command __id="484" _type="InsertStringCommand" date="Wed Apr 21 09:38:53 EDT 2021" starttimestamp="1619011563329" timestamp="770574" timestamp2="770574">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="485" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:54 EDT 2021" starttimestamp="1619011563329" timestamp="771041" />
  <Command __id="486" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:54 EDT 2021" starttimestamp="1619011563329" timestamp="771138" />
  <Command __id="487" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:54 EDT 2021" starttimestamp="1619011563329" timestamp="771175" />
  <Command __id="488" _type="MoveCaretCommand" caretOffset="7252" date="Wed Apr 21 09:38:55 EDT 2021" docOffset="8279" starttimestamp="1619011563329" timestamp="772627" />
  <Command __id="490" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:56 EDT 2021" starttimestamp="1619011563329" timestamp="773143" />
  <Command __id="492" _type="InsertStringCommand" date="Wed Apr 21 09:38:57 EDT 2021" starttimestamp="1619011563329" timestamp="773924" timestamp2="773924">
    <data><![CDATA[4]]></data>
  </Command>
  <Command __id="494" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:38:57 EDT 2021" starttimestamp="1619011563329" timestamp="774478" />
  <Command __id="496" _type="InsertStringCommand" date="Wed Apr 21 09:38:57 EDT 2021" starttimestamp="1619011563329" timestamp="774565" timestamp2="774565">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="497" _type="EclipseCommand" commandID="org.eclipse.ui.edit.selectAll" date="Wed Apr 21 09:38:58 EDT 2021" starttimestamp="1619011563329" timestamp="775023" />
  <Command __id="498" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:38:58 EDT 2021" starttimestamp="1619011563329" timestamp="775040" />
  <Command __id="499" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:58 EDT 2021" starttimestamp="1619011563329" timestamp="775138" />
  <Command __id="500" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:38:58 EDT 2021" starttimestamp="1619011563329" timestamp="775171" />
  <Command __id="501" _type="MoveCaretCommand" caretOffset="7201" date="Wed Apr 21 09:38:59 EDT 2021" docOffset="8228" starttimestamp="1619011563329" timestamp="775671" />
  <Command __id="502" _type="MoveCaretCommand" caretOffset="7549" date="Wed Apr 21 09:39:00 EDT 2021" docOffset="8576" starttimestamp="1619011563329" timestamp="777353" />
  <Command __id="504" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:39:01 EDT 2021" starttimestamp="1619011563329" timestamp="777760" />
  <Command __id="506" _type="InsertStringCommand" date="Wed Apr 21 09:39:01 EDT 2021" starttimestamp="1619011563329" timestamp="777865" timestamp2="777865">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="507" _type="MoveCaretCommand" caretOffset="7843" date="Wed Apr 21 09:39:02 EDT 2021" docOffset="8870" starttimestamp="1619011563329" timestamp="779270" />
  <Command __id="509" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:39:03 EDT 2021" starttimestamp="1619011563329" timestamp="779712" />
  <Command __id="511" _type="InsertStringCommand" date="Wed Apr 21 09:39:03 EDT 2021" starttimestamp="1619011563329" timestamp="779775" timestamp2="779775">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="512" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:39:03 EDT 2021" starttimestamp="1619011563329" timestamp="780291" />
  <Command __id="513" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:03 EDT 2021" starttimestamp="1619011563329" timestamp="780388" />
  <Command __id="514" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:03 EDT 2021" starttimestamp="1619011563329" timestamp="780423" />
  <DocumentChange __id="459" _type="Insert" date="Wed Apr 21 09:38:47 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="6839" starttimestamp="1619011563329" timestamp="764501">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="465" _type="Delete" date="Wed Apr 21 09:38:49 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="250" length="1" offset="7125" startLine="250" starttimestamp="1619011563329" timestamp="766543">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="467" _type="Insert" date="Wed Apr 21 09:38:49 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="7125" starttimestamp="1619011563329" timestamp="766616">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="473" _type="Delete" date="Wed Apr 21 09:38:52 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="261" length="1" offset="7413" startLine="261" starttimestamp="1619011563329" timestamp="768715">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="475" _type="Insert" date="Wed Apr 21 09:38:52 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="7413" starttimestamp="1619011563329" timestamp="768791">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="481" _type="Delete" date="Wed Apr 21 09:38:53 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="272" length="1" offset="7699" startLine="272" starttimestamp="1619011563329" timestamp="770504">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="483" _type="Insert" date="Wed Apr 21 09:38:53 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="7699" starttimestamp="1619011563329" timestamp="770568">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="489" _type="Delete" date="Wed Apr 21 09:38:56 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="294" length="1" offset="8278" startLine="294" starttimestamp="1619011563329" timestamp="773136">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="491" _type="Insert" date="Wed Apr 21 09:38:57 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="8278" starttimestamp="1619011563329" timestamp="773918">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="493" _type="Delete" date="Wed Apr 21 09:38:57 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="294" length="1" offset="8278" startLine="294" starttimestamp="1619011563329" timestamp="774474">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="495" _type="Insert" date="Wed Apr 21 09:38:57 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="8278" starttimestamp="1619011563329" timestamp="774557">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="503" _type="Delete" date="Wed Apr 21 09:39:01 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="305" length="1" offset="8575" startLine="305" starttimestamp="1619011563329" timestamp="777752">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="505" _type="Insert" date="Wed Apr 21 09:39:01 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="8575" starttimestamp="1619011563329" timestamp="777858">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="508" _type="Delete" date="Wed Apr 21 09:39:03 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="316" length="1" offset="8869" startLine="316" starttimestamp="1619011563329" timestamp="779706">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="510" _type="Insert" date="Wed Apr 21 09:39:03 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="8869" starttimestamp="1619011563329" timestamp="779767">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="516" _type="Delete" date="Wed Apr 21 09:39:05 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="327" length="1" offset="9163" startLine="327" starttimestamp="1619011563329" timestamp="782169">
    <text><![CDATA[4]]></text>
  </DocumentChange>
  <DocumentChange __id="518" _type="Insert" date="Wed Apr 21 09:39:05 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="9163" starttimestamp="1619011563329" timestamp="782223">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <Command __id="515" _type="MoveCaretCommand" caretOffset="8137" date="Wed Apr 21 09:39:05 EDT 2021" docOffset="9164" starttimestamp="1619011563329" timestamp="781731" />
  <Command __id="517" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:39:05 EDT 2021" starttimestamp="1619011563329" timestamp="782177" />
  <Command __id="519" _type="InsertStringCommand" date="Wed Apr 21 09:39:05 EDT 2021" starttimestamp="1619011563329" timestamp="782228" timestamp2="782228">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="520" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:39:06 EDT 2021" starttimestamp="1619011563329" timestamp="782673" />
  <Command __id="521" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:06 EDT 2021" starttimestamp="1619011563329" timestamp="782770" />
  <Command __id="522" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:06 EDT 2021" starttimestamp="1619011563329" timestamp="782804" />
  <Command __id="524" _type="MoveCaretCommand" caretOffset="2413" date="Wed Apr 21 09:39:10 EDT 2021" docOffset="2766" starttimestamp="1619011563329" timestamp="787444" />
  <Command __id="525" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:39:13 EDT 2021" starttimestamp="1619011563329" timestamp="790051" />
  <Command __id="526" _type="RunCommand" date="Wed Apr 21 09:39:13 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="790120" type="Run" />
  <Command __id="527" _type="RunCommand" date="Wed Apr 21 09:39:13 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="790120" type="Run" />
  <Command __id="528" _type="ShellCommand" date="Wed Apr 21 09:39:14 EDT 2021" starttimestamp="1619011563329" timestamp="790915" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="529" _type="ConsoleOutput" date="Wed Apr 21 09:39:14 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="791376" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [(, 2, *, a, )]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), ), /, (, 2, *, a, )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [(, 2, *, a, )]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [(, 2, *, a, )]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Testing Expression [(, -, b, +, s, q, r, t, (, b]¶Testing add-sub Expression [(, -, b, +, s, q, r, t, (, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing Expression [(, -, b]¶Testing add-sub Expression [(, -, b]¶Testing Expression [(]¶Testing add-sub Expression [(]¶Testing multi div Expression [(]¶Testing function Expression [(]¶Testing parenthesis Expression [(]¶Parenthesis Expression []¶Testing multi div Expression [(, -, b]¶Testing function Expression [(, -, b]¶Testing parenthesis Expression [(, -, b]¶Parenthesis Expression [-]¶Testing multi div Expression [(, -, b, +, s, q, r, t, (, b]¶Testing function Expression [(, -, b, +, s, q, r, t, (, b]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b]¶Parenthesis Expression [-, b, +, s, q, r, t, (]¶Testing parenthesis Expression [(, -, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, ), )]¶Parenthesis Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [-, b, +, s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression []¶Testing Expression [-, b]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b, ^, 2]¶Testing add-sub Expression [s, q, r, t, (, b, ^, 2]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2]¶Parenthesis Expression [q, r, t, (, b, ^]¶Testing multi div Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -]¶Testing Expression [s, q, r, t, (, b]¶Testing add-sub Expression [s, q, r, t, (, b]¶Testing multi div Expression [s, q, r, t, (, b]¶Testing function Expression [s, q, r, t, (, b]¶Testing parenthesis Expression [s, q, r, t, (, b]¶Parenthesis Expression [q, r, t, (]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Testing parenthesis Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a]¶Parenthesis Expression [q, r, t, (, b, ^, 2, -, 4, *]¶Testing function Expression [s, q, r, t, (, b, ^, 2, -, 4, *, a, *, c, )]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing function Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [b]¶Testing Expression [2]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]¶Testing Expression [a]¶Testing Expression [c]¶Testing add-sub Expression [(, 2, *, a, )]¶Testing multi div Expression [(, 2, *, a, )]¶Testing Expression [(, 2]¶Testing add-sub Expression [(, 2]¶Testing multi div Expression [(, 2]¶Testing function Expression [(, 2]¶Testing parenthesis Expression [(, 2]¶Parenthesis Expression []¶Testing function Expression [(, 2, *, a, )]¶Testing parenthesis Expression [(, 2, *, a, )]¶Parenthesis Expression [2, *, a]¶Testing Expression [2, *, a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing add-sub Expression [2, *, a]¶Testing multi div Expression [2, *, a]¶Testing Expression [2]¶Testing Expression [a]¶Testing Expression [2]¶Testing Expression [a]¶Testing Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing add-sub Expression [b, ^, 2, -, 4, *, a, *, c]¶Testing Expression [b, ^, 2]¶Testing add-sub Expression [b, ^, 2]¶Testing multi div Expression [b, ^, 2]¶Testing Expression [b]¶Testing Expression [2]¶Testing Expression [4, *, a, *, c]¶Testing add-sub Expression [4, *, a, *, c]¶Testing multi div Expression [4, *, a, *, c]¶Testing Expression [4]¶Testing Expression [a, *, c]¶Testing add-sub Expression [a, *, c]¶Testing multi div Expression [a, *, c]¶Testing Expression [a]¶Testing Expression [c]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="530" _type="ConsoleOutput" date="Wed Apr 21 09:39:14 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="791527" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="531" _type="ShellCommand" date="Wed Apr 21 09:39:19 EDT 2021" starttimestamp="1619011563329" timestamp="795964" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="532" _type="RunCommand" date="Wed Apr 21 09:39:19 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="796142" type="Run" />
  <Command __id="533" _type="RunCommand" date="Wed Apr 21 09:39:19 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="796142" type="Run" />
  <Command __id="534" _type="MoveCaretCommand" caretOffset="1672" date="Wed Apr 21 09:39:21 EDT 2021" docOffset="2025" starttimestamp="1619011563329" timestamp="797880" />
  <Command __id="536" _type="ShellCommand" date="Wed Apr 21 09:39:21 EDT 2021" starttimestamp="1619011563329" timestamp="798586" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="537" _type="ShellCommand" date="Wed Apr 21 09:39:24 EDT 2021" starttimestamp="1619011563329" timestamp="801444" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="539" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:39:25 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="802280" />
  <Command __id="541" _type="MoveCaretCommand" caretOffset="8137" date="Wed Apr 21 09:39:26 EDT 2021" docOffset="9164" starttimestamp="1619011563329" timestamp="803055" />
  <Command __id="542" _type="MoveCaretCommand" caretOffset="7880" date="Wed Apr 21 09:39:26 EDT 2021" docOffset="8907" starttimestamp="1619011563329" timestamp="803470" />
  <Command __id="544" _type="ShellCommand" date="Wed Apr 21 09:39:27 EDT 2021" starttimestamp="1619011563329" timestamp="804647" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="545" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 09:39:29 EDT 2021" forward="true" matchWord="false" offset="8907" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="806651" wrapSearch="false">
    <searchString><![CDATA[sqrt]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="546" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 09:39:30 EDT 2021" forward="true" matchWord="false" offset="8907" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="807016" wrapSearch="false">
    <searchString><![CDATA[sqrt]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="547" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 09:39:30 EDT 2021" forward="true" matchWord="false" offset="8907" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="807183" wrapSearch="false">
    <searchString><![CDATA[sqrt]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="548" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 09:39:30 EDT 2021" forward="true" matchWord="false" offset="8907" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="807377" wrapSearch="false">
    <searchString><![CDATA[sqrt]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="549" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 09:39:32 EDT 2021" forward="false" matchWord="false" offset="8907" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="808917" wrapSearch="false">
    <searchString><![CDATA[sqrt]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="550" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 09:39:33 EDT 2021" forward="false" matchWord="false" offset="8178" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="809827" wrapSearch="false">
    <searchString><![CDATA[sqrt]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="551" _type="ShellCommand" date="Wed Apr 21 09:39:34 EDT 2021" starttimestamp="1619011563329" timestamp="811082" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="552" _type="MoveCaretCommand" caretOffset="6966" date="Wed Apr 21 09:39:37 EDT 2021" docOffset="7993" starttimestamp="1619011563329" timestamp="814066" />
  <Command __id="554" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:39:38 EDT 2021" starttimestamp="1619011563329" timestamp="815034" />
  <Command __id="556" _type="InsertStringCommand" date="Wed Apr 21 09:39:38 EDT 2021" starttimestamp="1619011563329" timestamp="815109" timestamp2="815109">
    <data><![CDATA[1]]></data>
  </Command>
  <Command __id="557" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:39:38 EDT 2021" starttimestamp="1619011563329" timestamp="815670" />
  <Command __id="558" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:39 EDT 2021" starttimestamp="1619011563329" timestamp="815766" />
  <Command __id="559" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:39 EDT 2021" starttimestamp="1619011563329" timestamp="815803" />
  <Command __id="560" _type="MoveCaretCommand" caretOffset="7025" date="Wed Apr 21 09:39:39 EDT 2021" docOffset="8052" starttimestamp="1619011563329" timestamp="816018" />
  <Command __id="561" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:39:45 EDT 2021" starttimestamp="1619011563329" timestamp="822208" />
  <Command __id="562" _type="RunCommand" date="Wed Apr 21 09:39:45 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="822307" type="Run" />
  <Command __id="563" _type="RunCommand" date="Wed Apr 21 09:39:45 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="822307" type="Run" />
  <Command __id="564" _type="ShellCommand" date="Wed Apr 21 09:39:46 EDT 2021" starttimestamp="1619011563329" timestamp="823113" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="565" _type="ConsoleOutput" date="Wed Apr 21 09:39:46 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="823258" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="566" _type="ConsoleOutput" date="Wed Apr 21 09:39:46 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="823361" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="523" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:39:10 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3766" docExpressionCount="354" docLength="3766" projectName="TaskBox" starttimestamp="1619011563329" timestamp="787334">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="538" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:39:25 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="802195">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"/*¶ * Simple Java LaTex example¶ * http://www.heatonresearch.com/¶ * ¶ * Copyright 2013 Heaton Research, Inc.¶ *¶ * Licensed under the Apache License, Version 2.0 (the "License");¶ * you may not use this file except in compliance with the License.¶ * You may obtain a copy of the License at¶ *¶ *     http://www.apache.org/licenses/LICENSE-2.0¶ *¶ * Unless required by applicable law or agreed to in writing, software¶ * distributed under the License is distributed on an "AS IS" BASIS,¶ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.¶ * See the License for the specific language governing permissions and¶ * limitations under the License.¶ *   ¶ * For more information on Heaton Research copyrights, licenses ¶ * and trademarks visit:¶ * http://www.heatonresearch.com/copyright¶ */¶¶package components.mathEditor;¶¶import java.awt.BorderLayout;¶import java.awt.Color;¶import java.awt.Container;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.GridLayout;¶import java.awt.Insets;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.image.BufferedImage;¶import java.io.File;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JOptionPane;¶import javax.swing.JPanel;¶import javax.swing.JScrollPane;¶import javax.swing.JTextArea;¶¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶¶public class LatexExample extends JFrame implements ActionListener {¶	¶	private JTextArea latexSource;¶	private JButton btnRender;¶	private JPanel drawingArea;¶¶	public LatexExample() {¶		this.setTitle("JLatexMath Example");¶		this.setSize(500, 500);¶		Container content = this.getContentPane();¶		content.setLayout(new GridLayout(2, 1));¶		this.latexSource = new JTextArea();¶		¶		JPanel editorArea = new JPanel();¶		editorArea.setLayout(new BorderLayout());¶		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);¶		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		¶		¶		content.add(editorArea);¶		content.add(this.drawingArea = new JPanel());		¶		this.btnRender.addActionListener(this);¶		¶		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");¶	}¶¶	public void render() {¶		try {¶			// get the text¶			String latex = this.latexSource.getText();¶			¶			// create a formula¶			TeXFormula formula = new TeXFormula(latex);¶			¶			¶			// render the formla to an icon of the same size as the formula.¶			TeXIcon icon = formula¶					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶			¶			// insert a border ¶			icon.setInsets(new Insets(5, 5, 5, 5));¶¶			// now create an actual image of the rendered equation¶			BufferedImage image = new BufferedImage(icon.getIconWidth(),¶					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶			Graphics2D g2 = image.createGraphics();¶			g2.setColor(Color.white);¶			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶			JLabel jl = new JLabel();¶			jl.setForeground(new Color(0, 0, 0));¶			icon.paintIcon(jl, g2, 0, 0);¶			// at this point the image is created, you could also save it with ImageIO¶			¶			File outputfile = new File("image.png");¶			ImageIO.write(image, "png", outputfile);¶			¶			// now draw it to the screen			¶			Graphics g = this.drawingArea.getGraphics();¶			g.drawImage(image,0,0,null);¶		} catch (Exception ex) {¶			ex.printStackTrace();¶			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",¶					JOptionPane.INFORMATION_MESSAGE);		¶		}¶¶	}¶¶	public static void main(String[] args) {¶		LatexExample frame = new LatexExample();		¶		frame.setVisible(true);¶	}¶¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if( e.getSource() == this.btnRender ) {¶			render();¶		}¶		¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="540" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:39:26 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" projectName="TaskBox" starttimestamp="1619011563329" timestamp="802970">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row("), Diff(DELETE,"1"), Diff(INSERT,"4"), Diff(EQUAL,")¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"2"), Diff(INSERT,"1"), Diff(EQUAL,")¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"4"), Diff(INSERT,"3"), Diff(EQUAL,")¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="553" _type="Delete" date="Wed Apr 21 09:39:38 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="283" length="1" offset="7992" startLine="283" starttimestamp="1619011563329" timestamp="815026">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="555" _type="Insert" date="Wed Apr 21 09:39:38 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="7992" starttimestamp="1619011563329" timestamp="815100">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="567" _type="ShellCommand" date="Wed Apr 21 09:39:50 EDT 2021" starttimestamp="1619011563329" timestamp="827294" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="568" _type="RunCommand" date="Wed Apr 21 09:39:50 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="827463" type="Run" />
  <Command __id="569" _type="RunCommand" date="Wed Apr 21 09:39:50 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="827463" type="Run" />
  <Command __id="570" _type="MoveCaretCommand" caretOffset="7176" date="Wed Apr 21 09:39:51 EDT 2021" docOffset="8203" starttimestamp="1619011563329" timestamp="828086" />
  <Command __id="571" _type="MoveCaretCommand" caretOffset="6993" date="Wed Apr 21 09:39:51 EDT 2021" docOffset="8020" starttimestamp="1619011563329" timestamp="828375" />
  <Command __id="572" _type="MoveCaretCommand" caretOffset="7266" date="Wed Apr 21 09:39:52 EDT 2021" docOffset="8293" starttimestamp="1619011563329" timestamp="829171" />
  <Command __id="573" _type="MoveCaretCommand" caretOffset="7253" date="Wed Apr 21 09:39:52 EDT 2021" docOffset="8280" starttimestamp="1619011563329" timestamp="829574" />
  <Command __id="574" _type="MoveCaretCommand" caretOffset="7252" date="Wed Apr 21 09:39:53 EDT 2021" docOffset="8279" starttimestamp="1619011563329" timestamp="830205" />
  <DocumentChange __id="575" _type="Delete" date="Wed Apr 21 09:39:54 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="283" length="1" offset="7992" startLine="283" starttimestamp="1619011563329" timestamp="831431">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="576" _type="UndoCommand" date="Wed Apr 21 09:39:54 EDT 2021" starttimestamp="1619011563329" timestamp="831443" />
  <Command __id="578" _type="UndoCommand" date="Wed Apr 21 09:39:55 EDT 2021" starttimestamp="1619011563329" timestamp="831884" />
  <Command __id="579" _type="MoveCaretCommand" caretOffset="7266" date="Wed Apr 21 09:39:55 EDT 2021" docOffset="8293" starttimestamp="1619011563329" timestamp="832486" />
  <Command __id="580" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:39:56 EDT 2021" starttimestamp="1619011563329" timestamp="832735" />
  <Command __id="581" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:56 EDT 2021" starttimestamp="1619011563329" timestamp="832832" />
  <Command __id="582" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:39:56 EDT 2021" starttimestamp="1619011563329" timestamp="832865" />
  <Command __id="583" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:39:59 EDT 2021" starttimestamp="1619011563329" timestamp="835779" />
  <Command __id="584" _type="RunCommand" date="Wed Apr 21 09:39:59 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="835887" type="Run" />
  <Command __id="585" _type="RunCommand" date="Wed Apr 21 09:39:59 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="835888" type="Run" />
  <Command __id="586" _type="ShellCommand" date="Wed Apr 21 09:40:00 EDT 2021" starttimestamp="1619011563329" timestamp="836671" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="587" _type="ConsoleOutput" date="Wed Apr 21 09:40:00 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="836812" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="588" _type="ConsoleOutput" date="Wed Apr 21 09:40:00 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="836916" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="589" _type="ShellCommand" date="Wed Apr 21 09:40:05 EDT 2021" starttimestamp="1619011563329" timestamp="841798" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="590" _type="RunCommand" date="Wed Apr 21 09:40:05 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="841969" type="Run" />
  <Command __id="591" _type="RunCommand" date="Wed Apr 21 09:40:05 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="841969" type="Run" />
  <Command __id="592" _type="MoveCaretCommand" caretOffset="6966" date="Wed Apr 21 09:40:06 EDT 2021" docOffset="7993" starttimestamp="1619011563329" timestamp="843641" />
  <Command __id="594" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:40:07 EDT 2021" starttimestamp="1619011563329" timestamp="844352" />
  <Command __id="596" _type="InsertStringCommand" date="Wed Apr 21 09:40:07 EDT 2021" starttimestamp="1619011563329" timestamp="844412" timestamp2="844412">
    <data><![CDATA[2]]></data>
  </Command>
  <Command __id="597" _type="MoveCaretCommand" caretOffset="7253" date="Wed Apr 21 09:40:08 EDT 2021" docOffset="8280" starttimestamp="1619011563329" timestamp="845102" />
  <Command __id="598" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:40:08 EDT 2021" starttimestamp="1619011563329" timestamp="845282" />
  <Command __id="599" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:40:08 EDT 2021" starttimestamp="1619011563329" timestamp="845379" />
  <Command __id="600" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:40:08 EDT 2021" starttimestamp="1619011563329" timestamp="845413" />
  <Command __id="601" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:40:12 EDT 2021" starttimestamp="1619011563329" timestamp="849346" />
  <Command __id="602" _type="RunCommand" date="Wed Apr 21 09:40:12 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="849448" type="Run" />
  <Command __id="603" _type="RunCommand" date="Wed Apr 21 09:40:12 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="849448" type="Run" />
  <Command __id="604" _type="ShellCommand" date="Wed Apr 21 09:40:13 EDT 2021" starttimestamp="1619011563329" timestamp="850237" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="605" _type="ConsoleOutput" date="Wed Apr 21 09:40:13 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="850377" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="606" _type="ConsoleOutput" date="Wed Apr 21 09:40:13 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="850480" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="607" _type="ShellCommand" date="Wed Apr 21 09:40:17 EDT 2021" starttimestamp="1619011563329" timestamp="854516" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="608" _type="RunCommand" date="Wed Apr 21 09:40:18 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="854688" type="Run" />
  <Command __id="609" _type="RunCommand" date="Wed Apr 21 09:40:18 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="854688" type="Run" />
  <Command __id="610" _type="MoveCaretCommand" caretOffset="8042" date="Wed Apr 21 09:40:18 EDT 2021" docOffset="9069" starttimestamp="1619011563329" timestamp="854984" />
  <DocumentChange __id="577" _type="Insert" date="Wed Apr 21 09:39:55 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="7992" starttimestamp="1619011563329" timestamp="831881">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="593" _type="Delete" date="Wed Apr 21 09:40:07 EDT 2021" docASTNodeCount="1534" docActiveCodeLength="10222" docExpressionCount="1113" docLength="10222" endLine="283" length="1" offset="7992" startLine="283" starttimestamp="1619011563329" timestamp="844344">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="595" _type="Insert" date="Wed Apr 21 09:40:07 EDT 2021" docASTNodeCount="1535" docActiveCodeLength="10223" docExpressionCount="1114" docLength="10223" length="1" offset="7992" starttimestamp="1619011563329" timestamp="844408">
    <text><![CDATA[2]]></text>
  </DocumentChange>
  <DocumentChange __id="612" _type="Insert" date="Wed Apr 21 09:40:21 EDT 2021" docASTNodeCount="1536" docActiveCodeLength="10244" docExpressionCount="1114" docLength="10244" length="21" offset="9402" repeat="15" starttimestamp="1619011563329" timestamp="858148" timestamp2="860293">
    <text><![CDATA[
	
	
	public void ]]></text>
  </DocumentChange>
  <Command __id="611" _type="MoveCaretCommand" caretOffset="8375" date="Wed Apr 21 09:40:20 EDT 2021" docOffset="9402" starttimestamp="1619011563329" timestamp="857472" />
  <Command __id="613" _type="InsertStringCommand" date="Wed Apr 21 09:40:21 EDT 2021" starttimestamp="1619011563329" timestamp="858163" timestamp2="858163">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="615" _type="InsertStringCommand" date="Wed Apr 21 09:40:21 EDT 2021" starttimestamp="1619011563329" timestamp="858315" timestamp2="858315">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="617" _type="InsertStringCommand" date="Wed Apr 21 09:40:22 EDT 2021" starttimestamp="1619011563329" timestamp="858713" timestamp2="858713">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="619" _type="InsertStringCommand" date="Wed Apr 21 09:40:22 EDT 2021" starttimestamp="1619011563329" timestamp="859019" timestamp2="859019">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="621" _type="InsertStringCommand" date="Wed Apr 21 09:40:22 EDT 2021" starttimestamp="1619011563329" timestamp="859236" timestamp2="859236">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="623" _type="InsertStringCommand" date="Wed Apr 21 09:40:22 EDT 2021" starttimestamp="1619011563329" timestamp="859387" timestamp2="859387">
    <data><![CDATA[b]]></data>
  </Command>
  <Command __id="625" _type="InsertStringCommand" date="Wed Apr 21 09:40:22 EDT 2021" starttimestamp="1619011563329" timestamp="859559" timestamp2="859559">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="627" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="859740" timestamp2="859740">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="629" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="859814" timestamp2="859814">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="631" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="859908" timestamp2="859908">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="633" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="860059" timestamp2="860059">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="635" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="860109" timestamp2="860109">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="637" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="860156" timestamp2="860156">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="639" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="860291" timestamp2="860291">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="641" _type="InsertStringCommand" date="Wed Apr 21 09:40:23 EDT 2021" starttimestamp="1619011563329" timestamp="860296" timestamp2="860296">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="643" _type="InsertStringCommand" date="Wed Apr 21 09:40:29 EDT 2021" starttimestamp="1619011563329" timestamp="866156" timestamp2="866156">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="645" _type="InsertStringCommand" date="Wed Apr 21 09:40:29 EDT 2021" starttimestamp="1619011563329" timestamp="866273" timestamp2="866273">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="647" _type="InsertStringCommand" date="Wed Apr 21 09:40:29 EDT 2021" starttimestamp="1619011563329" timestamp="866452" timestamp2="866452">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="649" _type="InsertStringCommand" date="Wed Apr 21 09:40:29 EDT 2021" starttimestamp="1619011563329" timestamp="866565" timestamp2="866565">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="651" _type="InsertStringCommand" date="Wed Apr 21 09:40:30 EDT 2021" starttimestamp="1619011563329" timestamp="867087" timestamp2="867087">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="653" _type="InsertStringCommand" date="Wed Apr 21 09:40:30 EDT 2021" starttimestamp="1619011563329" timestamp="867303" timestamp2="867303">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="655" _type="InsertStringCommand" date="Wed Apr 21 09:40:30 EDT 2021" starttimestamp="1619011563329" timestamp="867452" timestamp2="867452">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="657" _type="InsertStringCommand" date="Wed Apr 21 09:40:31 EDT 2021" starttimestamp="1619011563329" timestamp="868401" timestamp2="868401">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="658" _type="InsertStringCommand" date="Wed Apr 21 09:40:31 EDT 2021" starttimestamp="1619011563329" timestamp="868467" timestamp2="868467">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="660" _type="InsertStringCommand" date="Wed Apr 21 09:40:33 EDT 2021" starttimestamp="1619011563329" timestamp="869733" timestamp2="869733">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="662" _type="InsertStringCommand" date="Wed Apr 21 09:40:33 EDT 2021" starttimestamp="1619011563329" timestamp="869797" timestamp2="869797">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="663" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:40:33 EDT 2021" starttimestamp="1619011563329" timestamp="870171" />
  <Command __id="665" _type="InsertStringCommand" date="Wed Apr 21 09:40:33 EDT 2021" starttimestamp="1619011563329" timestamp="870429" timestamp2="870429">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="666" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:40:34 EDT 2021" starttimestamp="1619011563329" timestamp="870672" />
  <Command __id="667" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:40:34 EDT 2021" starttimestamp="1619011563329" timestamp="870817" />
  <Command __id="668" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:40:34 EDT 2021" starttimestamp="1619011563329" timestamp="870855" />
  <Command __id="669" _type="SelectTextCommand" caretOffset="8222" date="Wed Apr 21 09:40:43 EDT 2021" end="8371" start="8222" starttimestamp="1619011563329" timestamp="879789" />
  <Command __id="670" _type="CopyCommand" date="Wed Apr 21 09:40:43 EDT 2021" starttimestamp="1619011563329" timestamp="879983" />
  <Command __id="671" _type="MoveCaretCommand" caretOffset="8411" date="Wed Apr 21 09:40:43 EDT 2021" docOffset="9438" starttimestamp="1619011563329" timestamp="880473" />
  <Command __id="673" _type="PasteCommand" date="Wed Apr 21 09:40:43 EDT 2021" starttimestamp="1619011563329" timestamp="880644" />
  <Command __id="674" _type="MoveCaretCommand" caretOffset="8520" date="Wed Apr 21 09:40:44 EDT 2021" docOffset="9547" starttimestamp="1619011563329" timestamp="881294" />
  <Command __id="675" _type="SelectTextCommand" caretOffset="8504" date="Wed Apr 21 09:40:46 EDT 2021" end="8517" start="8504" starttimestamp="1619011563329" timestamp="883082" />
  <Command __id="677" _type="InsertStringCommand" date="Wed Apr 21 09:40:47 EDT 2021" starttimestamp="1619011563329" timestamp="884067" timestamp2="884067">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="679" _type="InsertStringCommand" date="Wed Apr 21 09:40:47 EDT 2021" starttimestamp="1619011563329" timestamp="884283" timestamp2="884283">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="681" _type="InsertStringCommand" date="Wed Apr 21 09:40:48 EDT 2021" starttimestamp="1619011563329" timestamp="885140" timestamp2="885140">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="683" _type="InsertStringCommand" date="Wed Apr 21 09:40:48 EDT 2021" starttimestamp="1619011563329" timestamp="885494" timestamp2="885494">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="685" _type="InsertStringCommand" date="Wed Apr 21 09:40:48 EDT 2021" starttimestamp="1619011563329" timestamp="885567" timestamp2="885567">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="686" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:40:49 EDT 2021" starttimestamp="1619011563329" timestamp="886561" />
  <Command __id="687" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:40:49 EDT 2021" starttimestamp="1619011563329" timestamp="886657" />
  <Command __id="688" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:40:50 EDT 2021" starttimestamp="1619011563329" timestamp="886679" />
  <Command __id="689" _type="MoveCaretCommand" caretOffset="8495" date="Wed Apr 21 09:40:50 EDT 2021" docOffset="9522" starttimestamp="1619011563329" timestamp="887339" />
  <Command __id="690" _type="MoveCaretCommand" caretOffset="8556" date="Wed Apr 21 09:40:51 EDT 2021" docOffset="9583" starttimestamp="1619011563329" timestamp="887688" />
  <Command __id="691" _type="SelectTextCommand" caretOffset="8384" date="Wed Apr 21 09:40:52 EDT 2021" end="8556" start="8384" starttimestamp="1619011563329" timestamp="888899" />
  <Command __id="692" _type="MoveCaretCommand" caretOffset="8384" date="Wed Apr 21 09:40:52 EDT 2021" docOffset="9411" starttimestamp="1619011563329" timestamp="889104" />
  <Command __id="693" _type="SelectTextCommand" caretOffset="8556" date="Wed Apr 21 09:40:53 EDT 2021" end="8556" start="8384" starttimestamp="1619011563329" timestamp="889905" />
  <Command __id="694" _type="MoveCaretCommand" caretOffset="8556" date="Wed Apr 21 09:40:53 EDT 2021" docOffset="9583" starttimestamp="1619011563329" timestamp="890060" />
  <DocumentChange __id="642" _type="Insert" date="Wed Apr 21 09:40:29 EDT 2021" docASTNodeCount="1540" docActiveCodeLength="10263" docExpressionCount="1115" docLength="10263" length="19" offset="9423" repeat="11" starttimestamp="1619011563329" timestamp="866152" timestamp2="870421">
    <text><![CDATA[javaExp() {
		
	}]]></text>
  </DocumentChange>
  <DocumentChange __id="672" _type="Replace" date="Wed Apr 21 09:40:43 EDT 2021" docASTNodeCount="1562" docActiveCodeLength="10412" docExpressionCount="1131" docLength="10412" endLine="339" insertionLength="151" int_docASTNodeCount="1540" int_docActiveCodeLength="10261" int_docExpressionCount="1115" int_docLength="10261" length="2" offset="9436" startLine="339" starttimestamp="1619011563329" timestamp="880633">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="676" _type="Replace" date="Wed Apr 21 09:40:47 EDT 2021" docASTNodeCount="1562" docActiveCodeLength="10400" docExpressionCount="1131" docLength="10400" endLine="340" insertionLength="1" int_docASTNodeCount="1562" int_docActiveCodeLength="10399" int_docExpressionCount="1131" int_docLength="10399" length="13" offset="9531" startLine="340" starttimestamp="1619011563329" timestamp="884063">
    <deletedText><![CDATA[\\sum^{b}_{a}]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="678" _type="Insert" date="Wed Apr 21 09:40:47 EDT 2021" docASTNodeCount="1562" docActiveCodeLength="10404" docExpressionCount="1131" docLength="10404" length="4" offset="9532" repeat="4" starttimestamp="1619011563329" timestamp="884280" timestamp2="885563">
    <text><![CDATA[xp()]]></text>
  </DocumentChange>
  <DocumentChange __id="697" _type="Insert" date="Wed Apr 21 09:40:55 EDT 2021" docASTNodeCount="1562" docActiveCodeLength="10410" docExpressionCount="1131" docLength="10410" length="6" offset="9583" repeat="2" starttimestamp="1619011563329" timestamp="892280" timestamp2="892443">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="701" _type="Replace" date="Wed Apr 21 09:40:57 EDT 2021" docASTNodeCount="1575" docActiveCodeLength="10557" docExpressionCount="1138" docLength="10557" endLine="344" insertionLength="148" int_docASTNodeCount="1562" int_docActiveCodeLength="10409" int_docExpressionCount="1131" int_docLength="10409" length="1" offset="9588" startLine="344" starttimestamp="1619011563329" timestamp="893783">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	StringBuffer buffer = new StringBuffer(getTexExpression());
	buffer.insert(caretPosition, "\\sum^{b}_{a}");
	setTexExpression(buffer.toString());]]></insertedText>
  </DocumentChange>
  <Command __id="695" _type="SelectTextCommand" caretOffset="8384" date="Wed Apr 21 09:40:54 EDT 2021" end="8556" start="8384" starttimestamp="1619011563329" timestamp="891095" />
  <Command __id="696" _type="MoveCaretCommand" caretOffset="8556" date="Wed Apr 21 09:40:55 EDT 2021" docOffset="9583" starttimestamp="1619011563329" timestamp="891695" />
  <Command __id="698" _type="InsertStringCommand" date="Wed Apr 21 09:40:55 EDT 2021" starttimestamp="1619011563329" timestamp="892289" timestamp2="892289">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="700" _type="InsertStringCommand" date="Wed Apr 21 09:40:55 EDT 2021" starttimestamp="1619011563329" timestamp="892450" timestamp2="892450">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="702" _type="PasteCommand" date="Wed Apr 21 09:40:57 EDT 2021" starttimestamp="1619011563329" timestamp="893792" />
  <Command __id="704" _type="UndoCommand" date="Wed Apr 21 09:40:58 EDT 2021" starttimestamp="1619011563329" timestamp="894840" />
  <Command __id="705" _type="SelectTextCommand" caretOffset="8384" date="Wed Apr 21 09:40:59 EDT 2021" end="8556" start="8384" starttimestamp="1619011563329" timestamp="895805" />
  <Command __id="706" _type="CopyCommand" date="Wed Apr 21 09:40:59 EDT 2021" starttimestamp="1619011563329" timestamp="896002" />
  <Command __id="707" _type="MoveCaretCommand" caretOffset="8556" date="Wed Apr 21 09:40:59 EDT 2021" docOffset="9583" starttimestamp="1619011563329" timestamp="896486" />
  <Command __id="709" _type="InsertStringCommand" date="Wed Apr 21 09:41:00 EDT 2021" starttimestamp="1619011563329" timestamp="896990" timestamp2="896990">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="711" _type="InsertStringCommand" date="Wed Apr 21 09:41:00 EDT 2021" starttimestamp="1619011563329" timestamp="897137" timestamp2="897137">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="713" _type="PasteCommand" date="Wed Apr 21 09:41:00 EDT 2021" starttimestamp="1619011563329" timestamp="897426" />
  <DocumentChange __id="703" _type="Replace" date="Wed Apr 21 09:40:58 EDT 2021" docASTNodeCount="1562" docActiveCodeLength="10410" docExpressionCount="1131" docLength="10410" endLine="346" insertionLength="1" int_docASTNodeCount="1562" int_docActiveCodeLength="10409" int_docExpressionCount="1131" int_docLength="10409" length="148" offset="9588" startLine="344" starttimestamp="1619011563329" timestamp="894828">
    <deletedText><![CDATA[	StringBuffer buffer = new StringBuffer(getTexExpression());
	buffer.insert(caretPosition, "\\sum^{b}_{a}");
	setTexExpression(buffer.toString());]]></deletedText>
    <insertedText><![CDATA[	]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="708" _type="Insert" date="Wed Apr 21 09:41:00 EDT 2021" docASTNodeCount="1562" docActiveCodeLength="10416" docExpressionCount="1131" docLength="10416" length="6" offset="9583" repeat="2" starttimestamp="1619011563329" timestamp="896980" timestamp2="897131">
    <text><![CDATA[
	
	]]></text>
  </DocumentChange>
  <DocumentChange __id="712" _type="Replace" date="Wed Apr 21 09:41:00 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10588" docExpressionCount="1148" docLength="10588" endLine="344" insertionLength="173" int_docASTNodeCount="1562" int_docActiveCodeLength="10415" int_docExpressionCount="1131" int_docLength="10415" length="1" offset="9588" startLine="344" starttimestamp="1619011563329" timestamp="897416">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp()");
		setTexExpression(buffer.toString());
	}]]></insertedText>
  </DocumentChange>
  <Command __id="714" _type="SelectTextCommand" caretOffset="8578" date="Wed Apr 21 09:41:02 EDT 2021" end="8581" start="8578" starttimestamp="1619011563329" timestamp="899512" />
  <DocumentChange __id="715" _type="Replace" date="Wed Apr 21 09:41:10 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10586" docExpressionCount="1148" docLength="10586" endLine="344" insertionLength="1" int_docASTNodeCount="1589" int_docActiveCodeLength="10585" int_docExpressionCount="1148" int_docLength="10585" length="3" offset="9605" startLine="344" starttimestamp="1619011563329" timestamp="906743">
    <deletedText><![CDATA[Exp]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <Command __id="716" _type="InsertStringCommand" date="Wed Apr 21 09:41:10 EDT 2021" starttimestamp="1619011563329" timestamp="906750" timestamp2="906750">
    <data><![CDATA[s]]></data>
  </Command>
  <DocumentChange __id="717" _type="Insert" date="Wed Apr 21 09:41:10 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10587" docExpressionCount="1148" docLength="10587" length="1" offset="9606" starttimestamp="1619011563329" timestamp="907014">
    <text><![CDATA[q]]></text>
  </DocumentChange>
  <Command __id="718" _type="InsertStringCommand" date="Wed Apr 21 09:41:10 EDT 2021" starttimestamp="1619011563329" timestamp="907021" timestamp2="907021">
    <data><![CDATA[q]]></data>
  </Command>
  <DocumentChange __id="719" _type="Delete" date="Wed Apr 21 09:41:10 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10585" docExpressionCount="1148" docLength="10585" endLine="344" length="2" offset="9605" repeat="2" startLine="344" starttimestamp="1619011563329" timestamp="907533" timestamp2="907692">
    <text><![CDATA[sq]]></text>
  </DocumentChange>
  <Command __id="720" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:41:10 EDT 2021" starttimestamp="1619011563329" timestamp="907535" />
  <Command __id="722" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:41:11 EDT 2021" starttimestamp="1619011563329" timestamp="907694" />
  <DocumentChange __id="723" _type="Insert" date="Wed Apr 21 09:41:11 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10587" docExpressionCount="1148" docLength="10587" length="2" offset="9605" repeat="2" starttimestamp="1619011563329" timestamp="908055" timestamp2="908066">
    <text><![CDATA[SD]]></text>
  </DocumentChange>
  <Command __id="724" _type="InsertStringCommand" date="Wed Apr 21 09:41:11 EDT 2021" starttimestamp="1619011563329" timestamp="908064" timestamp2="908064">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="726" _type="InsertStringCommand" date="Wed Apr 21 09:41:11 EDT 2021" starttimestamp="1619011563329" timestamp="908073" timestamp2="908073">
    <data><![CDATA[D]]></data>
  </Command>
  <DocumentChange __id="727" _type="Delete" date="Wed Apr 21 09:41:12 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10585" docExpressionCount="1148" docLength="10585" endLine="344" length="2" offset="9605" repeat="2" startLine="344" starttimestamp="1619011563329" timestamp="908866" timestamp2="909058">
    <text><![CDATA[SD]]></text>
  </DocumentChange>
  <Command __id="728" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:41:12 EDT 2021" starttimestamp="1619011563329" timestamp="908868" />
  <Command __id="730" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:41:12 EDT 2021" starttimestamp="1619011563329" timestamp="909060" />
  <Command __id="732" _type="InsertStringCommand" date="Wed Apr 21 09:41:12 EDT 2021" starttimestamp="1619011563329" timestamp="909459" timestamp2="909459">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="734" _type="InsertStringCommand" date="Wed Apr 21 09:41:13 EDT 2021" starttimestamp="1619011563329" timestamp="909726" timestamp2="909726">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="736" _type="InsertStringCommand" date="Wed Apr 21 09:41:13 EDT 2021" starttimestamp="1619011563329" timestamp="909891" timestamp2="909891">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="738" _type="InsertStringCommand" date="Wed Apr 21 09:41:13 EDT 2021" starttimestamp="1619011563329" timestamp="910123" timestamp2="910123">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="739" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:41:14 EDT 2021" starttimestamp="1619011563329" timestamp="910796" />
  <Command __id="740" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:41:14 EDT 2021" starttimestamp="1619011563329" timestamp="910893" />
  <Command __id="741" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:41:14 EDT 2021" starttimestamp="1619011563329" timestamp="910931" />
  <Command __id="742" _type="MoveCaretCommand" caretOffset="8556" date="Wed Apr 21 09:41:14 EDT 2021" docOffset="9583" starttimestamp="1619011563329" timestamp="911297" />
  <Command __id="743" _type="SelectTextCommand" caretOffset="8683" date="Wed Apr 21 09:41:43 EDT 2021" end="8686" start="8683" starttimestamp="1619011563329" timestamp="939997" />
  <Command __id="745" _type="InsertStringCommand" date="Wed Apr 21 09:41:43 EDT 2021" starttimestamp="1619011563329" timestamp="940648" timestamp2="940648">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="747" _type="InsertStringCommand" date="Wed Apr 21 09:41:44 EDT 2021" starttimestamp="1619011563329" timestamp="940846" timestamp2="940846">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="749" _type="InsertStringCommand" date="Wed Apr 21 09:41:44 EDT 2021" starttimestamp="1619011563329" timestamp="941039" timestamp2="941039">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="751" _type="InsertStringCommand" date="Wed Apr 21 09:41:44 EDT 2021" starttimestamp="1619011563329" timestamp="941254" timestamp2="941254">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="752" _type="MoveCaretCommand" caretOffset="8586" date="Wed Apr 21 09:41:44 EDT 2021" docOffset="9613" starttimestamp="1619011563329" timestamp="941561" />
  <Command __id="753" _type="SelectTextCommand" caretOffset="8732" date="Wed Apr 21 09:41:45 EDT 2021" end="8732" start="8502" starttimestamp="1619011563329" timestamp="942037" />
  <Command __id="754" _type="MoveCaretCommand" caretOffset="8736" date="Wed Apr 21 09:41:45 EDT 2021" docOffset="9763" starttimestamp="1619011563329" timestamp="942208" />
  <Command __id="755" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:41:45 EDT 2021" starttimestamp="1619011563329" timestamp="942446" />
  <Command __id="756" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:41:45 EDT 2021" starttimestamp="1619011563329" timestamp="942592" />
  <Command __id="757" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:41:45 EDT 2021" starttimestamp="1619011563329" timestamp="942611" />
  <Command __id="758" _type="SelectTextCommand" caretOffset="8562" date="Wed Apr 21 09:41:46 EDT 2021" end="8736" start="8562" starttimestamp="1619011563329" timestamp="943485" />
  <Command __id="759" _type="MoveCaretCommand" caretOffset="8590" date="Wed Apr 21 09:41:47 EDT 2021" docOffset="9617" starttimestamp="1619011563329" timestamp="943696" />
  <Command __id="760" _type="MoveCaretCommand" caretOffset="8688" date="Wed Apr 21 09:41:48 EDT 2021" docOffset="9715" starttimestamp="1619011563329" timestamp="945202" />
  <Command __id="761" _type="SelectTextCommand" caretOffset="8562" date="Wed Apr 21 09:41:50 EDT 2021" end="8736" start="8562" starttimestamp="1619011563329" timestamp="946948" />
  <Command __id="762" _type="MoveCaretCommand" caretOffset="8562" date="Wed Apr 21 09:41:50 EDT 2021" docOffset="9589" starttimestamp="1619011563329" timestamp="947117" />
  <Command __id="763" _type="MoveCaretCommand" caretOffset="8600" date="Wed Apr 21 09:41:51 EDT 2021" docOffset="9627" starttimestamp="1619011563329" timestamp="947925" />
  <Command __id="764" _type="MoveCaretCommand" caretOffset="8381" date="Wed Apr 21 09:42:03 EDT 2021" docOffset="9408" starttimestamp="1619011563329" timestamp="960278" />
  <Command __id="765" _type="SelectTextCommand" caretOffset="8137" date="Wed Apr 21 09:42:05 EDT 2021" end="8174" start="8137" starttimestamp="1619011563329" timestamp="961871" />
  <Command __id="766" _type="MoveCaretCommand" caretOffset="8196" date="Wed Apr 21 09:42:05 EDT 2021" docOffset="9223" starttimestamp="1619011563329" timestamp="962139" />
  <DocumentChange __id="731" _type="Insert" date="Wed Apr 21 09:41:12 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10589" docExpressionCount="1148" docLength="10589" length="4" offset="9605" repeat="4" starttimestamp="1619011563329" timestamp="909452" timestamp2="910116">
    <text><![CDATA[Sqrt]]></text>
  </DocumentChange>
  <DocumentChange __id="744" _type="Replace" date="Wed Apr 21 09:41:43 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10587" docExpressionCount="1148" docLength="10587" endLine="346" insertionLength="1" int_docASTNodeCount="1589" int_docActiveCodeLength="10586" int_docExpressionCount="1148" int_docLength="10586" length="3" offset="9710" startLine="346" starttimestamp="1619011563329" timestamp="940641">
    <deletedText><![CDATA[exp]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="746" _type="Insert" date="Wed Apr 21 09:41:44 EDT 2021" docASTNodeCount="1589" docActiveCodeLength="10590" docExpressionCount="1148" docLength="10590" length="3" offset="9711" repeat="3" starttimestamp="1619011563329" timestamp="940840" timestamp2="941246">
    <text><![CDATA[qrt]]></text>
  </DocumentChange>
  <DocumentChange __id="771" _type="Replace" date="Wed Apr 21 09:42:07 EDT 2021" docASTNodeCount="1606" docActiveCodeLength="10694" docExpressionCount="1164" docLength="10694" endLine="337" insertionLength="105" int_docASTNodeCount="1589" int_docActiveCodeLength="10589" int_docExpressionCount="1148" int_docLength="10589" length="1" offset="9407" startLine="337" starttimestamp="1619011563329" timestamp="964297">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="774" _type="Replace" date="Wed Apr 21 09:42:08 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10798" docExpressionCount="1180" docLength="10798" endLine="347" insertionLength="105" int_docASTNodeCount="1606" int_docActiveCodeLength="10693" int_docExpressionCount="1164" int_docLength="10693" length="1" offset="9689" startLine="347" starttimestamp="1619011563329" timestamp="965192">
    <deletedText><![CDATA[	]]></deletedText>
    <insertedText><![CDATA[	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="777" _type="Insert" date="Wed Apr 21 09:42:09 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10801" docExpressionCount="1180" docLength="10801" length="3" offset="9687" starttimestamp="1619011563329" timestamp="966399">
    <text><![CDATA[
	]]></text>
  </DocumentChange>
  <Command __id="767" _type="SelectTextCommand" caretOffset="8092" date="Wed Apr 21 09:42:06 EDT 2021" end="8196" start="8092" starttimestamp="1619011563329" timestamp="963197" />
  <Command __id="768" _type="CopyCommand" date="Wed Apr 21 09:42:06 EDT 2021" starttimestamp="1619011563329" timestamp="963386" />
  <Command __id="769" _type="MoveCaretCommand" caretOffset="8394" date="Wed Apr 21 09:42:07 EDT 2021" docOffset="9421" starttimestamp="1619011563329" timestamp="963800" />
  <Command __id="770" _type="MoveCaretCommand" caretOffset="8381" date="Wed Apr 21 09:42:07 EDT 2021" docOffset="9408" starttimestamp="1619011563329" timestamp="964096" />
  <Command __id="772" _type="PasteCommand" date="Wed Apr 21 09:42:07 EDT 2021" starttimestamp="1619011563329" timestamp="964309" />
  <Command __id="773" _type="MoveCaretCommand" caretOffset="8663" date="Wed Apr 21 09:42:08 EDT 2021" docOffset="9690" starttimestamp="1619011563329" timestamp="965028" />
  <Command __id="775" _type="PasteCommand" date="Wed Apr 21 09:42:08 EDT 2021" starttimestamp="1619011563329" timestamp="965205" />
  <Command __id="776" _type="MoveCaretCommand" caretOffset="8660" date="Wed Apr 21 09:42:09 EDT 2021" docOffset="9687" starttimestamp="1619011563329" timestamp="965752" />
  <Command __id="778" _type="InsertStringCommand" date="Wed Apr 21 09:42:09 EDT 2021" starttimestamp="1619011563329" timestamp="966409" timestamp2="966409">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="779" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:42:09 EDT 2021" starttimestamp="1619011563329" timestamp="966629" />
  <Command __id="780" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:42:10 EDT 2021" starttimestamp="1619011563329" timestamp="966726" />
  <Command __id="781" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:42:10 EDT 2021" starttimestamp="1619011563329" timestamp="966763" />
  <Command __id="782" _type="MoveCaretCommand" caretOffset="8485" date="Wed Apr 21 09:42:10 EDT 2021" docOffset="9512" starttimestamp="1619011563329" timestamp="967488" />
  <Command __id="783" _type="MoveCaretCommand" caretOffset="8463" date="Wed Apr 21 09:42:11 EDT 2021" docOffset="9490" starttimestamp="1619011563329" timestamp="967897" />
  <Command __id="784" _type="MoveCaretCommand" caretOffset="8427" date="Wed Apr 21 09:42:12 EDT 2021" docOffset="9454" starttimestamp="1619011563329" timestamp="968810" />
  <Command __id="785" _type="MoveCaretCommand" caretOffset="8425" date="Wed Apr 21 09:42:12 EDT 2021" docOffset="9452" starttimestamp="1619011563329" timestamp="969237" />
  <Command __id="786" _type="MoveCaretCommand" caretOffset="8426" date="Wed Apr 21 09:42:12 EDT 2021" docOffset="9453" starttimestamp="1619011563329" timestamp="969605" />
  <Command __id="788" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:16 EDT 2021" starttimestamp="1619011563329" timestamp="973013" />
  <Command __id="790" _type="InsertStringCommand" date="Wed Apr 21 09:42:16 EDT 2021" starttimestamp="1619011563329" timestamp="973367" timestamp2="973367">
    <data><![CDATA[5]]></data>
  </Command>
  <DocumentChange __id="787" _type="Delete" date="Wed Apr 21 09:42:16 EDT 2021" docASTNodeCount="1622" docActiveCodeLength="10800" docExpressionCount="1179" docLength="10800" endLine="338" length="1" offset="9452" startLine="338" starttimestamp="1619011563329" timestamp="973004">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="789" _type="Insert" date="Wed Apr 21 09:42:16 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10801" docExpressionCount="1180" docLength="10801" length="1" offset="9452" starttimestamp="1619011563329" timestamp="973360">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <Command __id="791" _type="MoveCaretCommand" caretOffset="8439" date="Wed Apr 21 09:42:19 EDT 2021" docOffset="9466" starttimestamp="1619011563329" timestamp="975694" />
  <DocumentChange __id="792" _type="Delete" date="Wed Apr 21 09:42:25 EDT 2021" docASTNodeCount="1622" docActiveCodeLength="10800" docExpressionCount="1179" docLength="10800" endLine="339" length="1" offset="9465" startLine="339" starttimestamp="1619011563329" timestamp="982641">
    <text><![CDATA[1]]></text>
  </DocumentChange>
  <Command __id="793" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:25 EDT 2021" starttimestamp="1619011563329" timestamp="982648" />
  <Command __id="795" _type="InsertStringCommand" date="Wed Apr 21 09:42:26 EDT 2021" starttimestamp="1619011563329" timestamp="983016" timestamp2="983016">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="796" _type="MoveCaretCommand" caretOffset="8711" date="Wed Apr 21 09:42:28 EDT 2021" docOffset="9738" starttimestamp="1619011563329" timestamp="984874" />
  <Command __id="798" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:28 EDT 2021" starttimestamp="1619011563329" timestamp="985329" />
  <Command __id="800" _type="InsertStringCommand" date="Wed Apr 21 09:42:28 EDT 2021" starttimestamp="1619011563329" timestamp="985453" timestamp2="985453">
    <data><![CDATA[5]]></data>
  </Command>
  <Command __id="801" _type="MoveCaretCommand" caretOffset="8691" date="Wed Apr 21 09:42:29 EDT 2021" docOffset="9718" starttimestamp="1619011563329" timestamp="986248" />
  <Command __id="802" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:42:29 EDT 2021" starttimestamp="1619011563329" timestamp="986514" />
  <Command __id="803" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:42:29 EDT 2021" starttimestamp="1619011563329" timestamp="986611" />
  <Command __id="804" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:42:29 EDT 2021" starttimestamp="1619011563329" timestamp="986644" />
  <Command __id="805" _type="SelectTextCommand" caretOffset="8940" date="Wed Apr 21 09:42:30 EDT 2021" end="8940" start="8829" starttimestamp="1619011563329" timestamp="987081" />
  <Command __id="806" _type="MoveCaretCommand" caretOffset="8947" date="Wed Apr 21 09:42:30 EDT 2021" docOffset="9974" starttimestamp="1619011563329" timestamp="987267" />
  <Command __id="807" _type="SelectTextCommand" caretOffset="8515" date="Wed Apr 21 09:42:32 EDT 2021" end="8656" start="8515" starttimestamp="1619011563329" timestamp="989180" />
  <Command __id="808" _type="MoveCaretCommand" caretOffset="8631" date="Wed Apr 21 09:42:32 EDT 2021" docOffset="9658" starttimestamp="1619011563329" timestamp="989384" />
  <Command __id="809" _type="MoveCaretCommand" caretOffset="8903" date="Wed Apr 21 09:42:32 EDT 2021" docOffset="9930" starttimestamp="1619011563329" timestamp="989666" />
  <Command __id="810" _type="MoveCaretCommand" caretOffset="8943" date="Wed Apr 21 09:42:33 EDT 2021" docOffset="9970" starttimestamp="1619011563329" timestamp="989982" />
  <DocumentChange __id="794" _type="Insert" date="Wed Apr 21 09:42:26 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10801" docExpressionCount="1180" docLength="10801" length="1" offset="9465" starttimestamp="1619011563329" timestamp="983010">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="797" _type="Delete" date="Wed Apr 21 09:42:28 EDT 2021" docASTNodeCount="1622" docActiveCodeLength="10800" docExpressionCount="1179" docLength="10800" endLine="349" length="1" offset="9737" startLine="349" starttimestamp="1619011563329" timestamp="985322">
    <text><![CDATA[3]]></text>
  </DocumentChange>
  <DocumentChange __id="799" _type="Insert" date="Wed Apr 21 09:42:28 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10801" docExpressionCount="1180" docLength="10801" length="1" offset="9737" starttimestamp="1619011563329" timestamp="985448">
    <text><![CDATA[5]]></text>
  </DocumentChange>
  <DocumentChange __id="813" _type="Delete" date="Wed Apr 21 09:42:35 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10792" docExpressionCount="1180" docLength="10792" endLine="361" length="9" offset="9977" repeat="6" startLine="358" starttimestamp="1619011563329" timestamp="991932" timestamp2="992821">
    <text><![CDATA[
	
	
	]]></text>
  </DocumentChange>
  <Command __id="829" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:42:41 EDT 2021" docASTNodeCount="400" docActiveCodeLength="2662" docExpressionCount="272" docLength="2662" projectName="TaskBox" starttimestamp="1619011563329" timestamp="998381">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mainpanel\MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.beans.PropertyChangeEvent;¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶¶import components.composedGraph.ComposedGraph;¶import components.composedGraph.ComposedGraphInterface;¶import components.page.pages.PageInterface;¶import exporter.Exporter;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"currentPage"})¶@EditablePropertyNames({})¶public class MainPanel implements MainPanelInterface{¶	¶	private List<PageInterface> pages = new ArrayList<PageInterface> ();¶	private PageInterface currentPage;¶	private int currentPageIndex = 0;¶	¶	public MainPanel() {¶		¶	}¶	¶¶	@Override¶	public List<PageInterface> getPages() {¶		return pages;¶	}¶¶	@Override¶	public void setPages(List<PageInterface> newPages) {¶		pages = newPages;¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Label(">")¶	@Column(2)¶	@Row(0)¶	@Override¶	public void nextPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == pages.size() - 1) {¶			setCurrentPageIndex(0);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() + 1);¶		}¶	}¶¶	@PreferredWidgetClass(JButton.class)¶	@Label("<")¶	@Column(0)¶	@Row(0)¶	@Override¶	public void prevPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == 0) {¶			setCurrentPageIndex(pages.size() - 1);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() - 1);¶		}¶	}¶¶	@Override¶	public int getCurrentPageIndex() {¶		return currentPageIndex;¶	}¶¶	@Override¶	public void setCurrentPageIndex(int newPageIndex) {¶		currentPageIndex = newPageIndex;¶		setCurrentPage(pages.get(currentPageIndex));¶	}¶¶	@Override¶	@Column(1)¶	@ComponentWidth(200)¶	public PageInterface getCurrentPage() {¶		return currentPage;¶	}¶¶	@Override¶	public void setCurrentPage(PageInterface newPage) {¶		currentPage = newPage;¶	}¶¶	@Override¶	public void clearPages() {¶		pages.clear();¶	}¶	¶	@Override¶	public void addPage(PageInterface newPage) {¶		getPages().add(newPage);¶		newPage.addPropertyChangeListener(this);¶		setCurrentPageIndex(getCurrentPageIndex());¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="831" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:42:43 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="999898">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"/*¶ * Simple Java LaTex example¶ * http://www.heatonresearch.com/¶ * ¶ * Copyright 2013 Heaton Research, Inc.¶ *¶ * Licensed under the Apache License, Version 2.0 (the "License");¶ * you may not use this file except in compliance with the License.¶ * You may obtain a copy of the License at¶ *¶ *     http://www.apache.org/licenses/LICENSE-2.0¶ *¶ * Unless required by applicable law or agreed to in writing, software¶ * distributed under the License is distributed on an "AS IS" BASIS,¶ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.¶ * See the License for the specific language governing permissions and¶ * limitations under the License.¶ *   ¶ * For more information on Heaton Research copyrights, licenses ¶ * and trademarks visit:¶ * http://www.heatonresearch.com/copyright¶ */¶¶package components.mathEditor;¶¶import java.awt.BorderLayout;¶import java.awt.Color;¶import java.awt.Container;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.GridLayout;¶import java.awt.Insets;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.image.BufferedImage;¶import java.io.File;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JOptionPane;¶import javax.swing.JPanel;¶import javax.swing.JScrollPane;¶import javax.swing.JTextArea;¶¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶¶public class LatexExample extends JFrame implements ActionListener {¶	¶	private JTextArea latexSource;¶	private JButton btnRender;¶	private JPanel drawingArea;¶¶	public LatexExample() {¶		this.setTitle("JLatexMath Example");¶		this.setSize(500, 500);¶		Container content = this.getContentPane();¶		content.setLayout(new GridLayout(2, 1));¶		this.latexSource = new JTextArea();¶		¶		JPanel editorArea = new JPanel();¶		editorArea.setLayout(new BorderLayout());¶		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);¶		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		¶		¶		content.add(editorArea);¶		content.add(this.drawingArea = new JPanel());		¶		this.btnRender.addActionListener(this);¶		¶		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");¶	}¶¶	public void render() {¶		try {¶			// get the text¶			String latex = this.latexSource.getText();¶			¶			// create a formula¶			TeXFormula formula = new TeXFormula(latex);¶			¶			¶			// render the formla to an icon of the same size as the formula.¶			TeXIcon icon = formula¶					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶			¶			// insert a border ¶			icon.setInsets(new Insets(5, 5, 5, 5));¶¶			// now create an actual image of the rendered equation¶			BufferedImage image = new BufferedImage(icon.getIconWidth(),¶					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶			Graphics2D g2 = image.createGraphics();¶			g2.setColor(Color.white);¶			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶			JLabel jl = new JLabel();¶			jl.setForeground(new Color(0, 0, 0));¶			icon.paintIcon(jl, g2, 0, 0);¶			// at this point the image is created, you could also save it with ImageIO¶			¶			File outputfile = new File("image.png");¶			ImageIO.write(image, "png", outputfile);¶			¶			// now draw it to the screen			¶			Graphics g = this.drawingArea.getGraphics();¶			g.drawImage(image,0,0,null);¶		} catch (Exception ex) {¶			ex.printStackTrace();¶			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",¶					JOptionPane.INFORMATION_MESSAGE);		¶		}¶¶	}¶¶	public static void main(String[] args) {¶		LatexExample frame = new LatexExample();		¶		frame.setVisible(true);¶	}¶¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if( e.getSource() == this.btnRender ) {¶			render();¶		}¶		¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="811" _type="MoveCaretCommand" caretOffset="8956" date="Wed Apr 21 09:42:34 EDT 2021" docOffset="9983" starttimestamp="1619011563329" timestamp="991082" />
  <Command __id="812" _type="MoveCaretCommand" caretOffset="8959" date="Wed Apr 21 09:42:34 EDT 2021" docOffset="9986" starttimestamp="1619011563329" timestamp="991406" />
  <Command __id="814" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:35 EDT 2021" starttimestamp="1619011563329" timestamp="991935" />
  <Command __id="816" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:35 EDT 2021" starttimestamp="1619011563329" timestamp="992108" />
  <Command __id="818" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:35 EDT 2021" starttimestamp="1619011563329" timestamp="992241" />
  <Command __id="820" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:35 EDT 2021" starttimestamp="1619011563329" timestamp="992382" />
  <Command __id="822" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:35 EDT 2021" starttimestamp="1619011563329" timestamp="992515" />
  <Command __id="824" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:36 EDT 2021" starttimestamp="1619011563329" timestamp="992829" />
  <Command __id="825" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:42:36 EDT 2021" starttimestamp="1619011563329" timestamp="993268" />
  <Command __id="826" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:42:36 EDT 2021" starttimestamp="1619011563329" timestamp="993379" />
  <Command __id="827" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:42:36 EDT 2021" starttimestamp="1619011563329" timestamp="993398" />
  <Command __id="828" _type="MoveCaretCommand" caretOffset="8089" date="Wed Apr 21 09:42:37 EDT 2021" docOffset="9116" starttimestamp="1619011563329" timestamp="994094" />
  <Command __id="830" _type="MoveCaretCommand" caretOffset="601" date="Wed Apr 21 09:42:41 EDT 2021" docOffset="1266" starttimestamp="1619011563329" timestamp="998481" />
  <Command __id="832" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:42:43 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="999982" />
  <Command __id="834" _type="MoveCaretCommand" caretOffset="1672" date="Wed Apr 21 09:42:45 EDT 2021" docOffset="2025" starttimestamp="1619011563329" timestamp="1001920" />
  <Command __id="835" _type="MoveCaretCommand" caretOffset="1424" date="Wed Apr 21 09:42:46 EDT 2021" docOffset="1777" starttimestamp="1619011563329" timestamp="1002900" />
  <Command __id="836" _type="SelectTextCommand" caretOffset="2310" date="Wed Apr 21 09:42:47 EDT 2021" end="2524" start="2310" starttimestamp="1619011563329" timestamp="1004609" />
  <Command __id="837" _type="CopyCommand" date="Wed Apr 21 09:42:48 EDT 2021" starttimestamp="1619011563329" timestamp="1004791" />
  <Command __id="838" _type="MoveCaretCommand" caretOffset="2524" date="Wed Apr 21 09:42:48 EDT 2021" docOffset="2877" starttimestamp="1619011563329" timestamp="1005368" />
  <Command __id="840" _type="InsertStringCommand" date="Wed Apr 21 09:42:49 EDT 2021" starttimestamp="1619011563329" timestamp="1005977" timestamp2="1005977">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="842" _type="PasteCommand" date="Wed Apr 21 09:42:49 EDT 2021" starttimestamp="1619011563329" timestamp="1006343" />
  <Command __id="833" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:42:45 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3766" docExpressionCount="354" docLength="3766" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1001829">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <DocumentChange __id="839" _type="Insert" date="Wed Apr 21 09:42:49 EDT 2021" docASTNodeCount="476" docActiveCodeLength="3770" docExpressionCount="354" docLength="3770" length="4" offset="2877" starttimestamp="1619011563329" timestamp="1005960">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="841" _type="Replace" date="Wed Apr 21 09:42:49 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" endLine="46" insertionLength="216" int_docASTNodeCount="476" int_docActiveCodeLength="3768" int_docExpressionCount="354" int_docLength="3768" length="2" offset="2879" startLine="46" starttimestamp="1619011563329" timestamp="1006332">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="844" _type="Replace" date="Wed Apr 21 09:42:52 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3977" docExpressionCount="374" docLength="3977" endLine="46" insertionLength="1" int_docASTNodeCount="500" int_docActiveCodeLength="3976" int_docExpressionCount="374" int_docLength="3976" length="8" offset="2937" startLine="46" starttimestamp="1619011563329" timestamp="1009092">
    <deletedText><![CDATA[Integral]]></deletedText>
    <insertedText><![CDATA[J]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="846" _type="Insert" date="Wed Apr 21 09:42:52 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3978" docExpressionCount="374" docLength="3978" length="1" offset="2938" starttimestamp="1619011563329" timestamp="1009543">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <DocumentChange __id="848" _type="Delete" date="Wed Apr 21 09:42:53 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3977" docExpressionCount="374" docLength="3977" endLine="46" length="1" offset="2938" startLine="46" starttimestamp="1619011563329" timestamp="1009993">
    <text><![CDATA[v]]></text>
  </DocumentChange>
  <Command __id="843" _type="SelectTextCommand" caretOffset="2584" date="Wed Apr 21 09:42:51 EDT 2021" end="2592" start="2584" starttimestamp="1619011563329" timestamp="1008503" />
  <Command __id="845" _type="InsertStringCommand" date="Wed Apr 21 09:42:52 EDT 2021" starttimestamp="1619011563329" timestamp="1009096" timestamp2="1009096">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="847" _type="InsertStringCommand" date="Wed Apr 21 09:42:52 EDT 2021" starttimestamp="1619011563329" timestamp="1009547" timestamp2="1009547">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="849" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:42:53 EDT 2021" starttimestamp="1619011563329" timestamp="1009995" />
  <Command __id="851" _type="InsertStringCommand" date="Wed Apr 21 09:42:53 EDT 2021" starttimestamp="1619011563329" timestamp="1010124" timestamp2="1010124">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="853" _type="InsertStringCommand" date="Wed Apr 21 09:42:53 EDT 2021" starttimestamp="1619011563329" timestamp="1010221" timestamp2="1010221">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="855" _type="InsertStringCommand" date="Wed Apr 21 09:42:53 EDT 2021" starttimestamp="1619011563329" timestamp="1010318" timestamp2="1010318">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="857" _type="InsertStringCommand" date="Wed Apr 21 09:42:54 EDT 2021" starttimestamp="1619011563329" timestamp="1011376" timestamp2="1011376">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="859" _type="InsertStringCommand" date="Wed Apr 21 09:42:54 EDT 2021" starttimestamp="1619011563329" timestamp="1011570" timestamp2="1011570">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="861" _type="InsertStringCommand" date="Wed Apr 21 09:42:55 EDT 2021" starttimestamp="1619011563329" timestamp="1011690" timestamp2="1011690">
    <data><![CDATA[p]]></data>
  </Command>
  <DocumentChange __id="850" _type="Insert" date="Wed Apr 21 09:42:53 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3983" docExpressionCount="374" docLength="3983" length="6" offset="2938" repeat="6" starttimestamp="1619011563329" timestamp="1010122" timestamp2="1011687">
    <text><![CDATA[avaExp]]></text>
  </DocumentChange>
  <DocumentChange __id="863" _type="Replace" date="Wed Apr 21 09:42:57 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3981" docExpressionCount="374" docLength="3981" endLine="47" insertionLength="1" int_docASTNodeCount="500" int_docActiveCodeLength="3980" int_docExpressionCount="374" int_docLength="3980" length="3" offset="3050" startLine="47" starttimestamp="1619011563329" timestamp="1014088">
    <deletedText><![CDATA[Sum]]></deletedText>
    <insertedText><![CDATA[J]]></insertedText>
  </DocumentChange>
  <Command __id="862" _type="SelectTextCommand" caretOffset="2697" date="Wed Apr 21 09:42:56 EDT 2021" end="2700" start="2697" starttimestamp="1619011563329" timestamp="1013566" />
  <Command __id="864" _type="InsertStringCommand" date="Wed Apr 21 09:42:57 EDT 2021" starttimestamp="1619011563329" timestamp="1014093" timestamp2="1014093">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="866" _type="InsertStringCommand" date="Wed Apr 21 09:42:57 EDT 2021" starttimestamp="1619011563329" timestamp="1014290" timestamp2="1014290">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="868" _type="InsertStringCommand" date="Wed Apr 21 09:42:57 EDT 2021" starttimestamp="1619011563329" timestamp="1014524" timestamp2="1014524">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="870" _type="InsertStringCommand" date="Wed Apr 21 09:42:57 EDT 2021" starttimestamp="1619011563329" timestamp="1014603" timestamp2="1014603">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="872" _type="InsertStringCommand" date="Wed Apr 21 09:42:59 EDT 2021" starttimestamp="1619011563329" timestamp="1015689" timestamp2="1015689">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="874" _type="InsertStringCommand" date="Wed Apr 21 09:42:59 EDT 2021" starttimestamp="1619011563329" timestamp="1015955" timestamp2="1015955">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="876" _type="InsertStringCommand" date="Wed Apr 21 09:42:59 EDT 2021" starttimestamp="1619011563329" timestamp="1016157" timestamp2="1016157">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="878" _type="InsertStringCommand" date="Wed Apr 21 09:42:59 EDT 2021" starttimestamp="1619011563329" timestamp="1016337" timestamp2="1016337">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="879" _type="MoveCaretCommand" caretOffset="2598" date="Wed Apr 21 09:43:00 EDT 2021" docOffset="2951" starttimestamp="1619011563329" timestamp="1017224" />
  <Command __id="880" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:43:00 EDT 2021" starttimestamp="1619011563329" timestamp="1017486" />
  <Command __id="881" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:43:00 EDT 2021" starttimestamp="1619011563329" timestamp="1017583" />
  <Command __id="882" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:43:00 EDT 2021" starttimestamp="1619011563329" timestamp="1017604" />
  <Command __id="883" _type="SelectTextCommand" caretOffset="2622" date="Wed Apr 21 09:43:03 EDT 2021" end="2630" start="2622" starttimestamp="1619011563329" timestamp="1019671" />
  <Command __id="885" _type="InsertStringCommand" date="Wed Apr 21 09:43:03 EDT 2021" starttimestamp="1619011563329" timestamp="1020288" timestamp2="1020288">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="887" _type="InsertStringCommand" date="Wed Apr 21 09:43:03 EDT 2021" starttimestamp="1619011563329" timestamp="1020537" timestamp2="1020537">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="889" _type="InsertStringCommand" date="Wed Apr 21 09:43:04 EDT 2021" starttimestamp="1619011563329" timestamp="1021130" timestamp2="1021130">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="891" _type="InsertStringCommand" date="Wed Apr 21 09:43:04 EDT 2021" starttimestamp="1619011563329" timestamp="1021328" timestamp2="1021328">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="892" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:43:06 EDT 2021" starttimestamp="1619011563329" timestamp="1023417" />
  <Command __id="893" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:43:06 EDT 2021" starttimestamp="1619011563329" timestamp="1023505" />
  <Command __id="894" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:43:06 EDT 2021" starttimestamp="1619011563329" timestamp="1023528" />
  <Command __id="895" _type="SelectTextCommand" caretOffset="2732" date="Wed Apr 21 09:43:08 EDT 2021" end="2735" start="2732" starttimestamp="1619011563329" timestamp="1025340" />
  <Command __id="896" _type="SelectTextCommand" caretOffset="2622" date="Wed Apr 21 09:43:10 EDT 2021" end="2626" start="2622" starttimestamp="1619011563329" timestamp="1027271" />
  <Command __id="898" _type="InsertStringCommand" date="Wed Apr 21 09:43:10 EDT 2021" starttimestamp="1619011563329" timestamp="1027405" timestamp2="1027405">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="900" _type="InsertStringCommand" date="Wed Apr 21 09:43:10 EDT 2021" starttimestamp="1619011563329" timestamp="1027604" timestamp2="1027604">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="902" _type="InsertStringCommand" date="Wed Apr 21 09:43:11 EDT 2021" starttimestamp="1619011563329" timestamp="1028351" timestamp2="1028351">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="903" _type="SelectTextCommand" caretOffset="2731" date="Wed Apr 21 09:43:12 EDT 2021" end="2734" start="2731" starttimestamp="1619011563329" timestamp="1029610" />
  <Command __id="905" _type="InsertStringCommand" date="Wed Apr 21 09:43:13 EDT 2021" starttimestamp="1619011563329" timestamp="1030004" timestamp2="1030004">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="907" _type="InsertStringCommand" date="Wed Apr 21 09:43:13 EDT 2021" starttimestamp="1619011563329" timestamp="1030238" timestamp2="1030238">
    <data><![CDATA[q]]></data>
  </Command>
  <Command __id="909" _type="InsertStringCommand" date="Wed Apr 21 09:43:13 EDT 2021" starttimestamp="1619011563329" timestamp="1030448" timestamp2="1030448">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="911" _type="InsertStringCommand" date="Wed Apr 21 09:43:13 EDT 2021" starttimestamp="1619011563329" timestamp="1030638" timestamp2="1030638">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="912" _type="MoveCaretCommand" caretOffset="2854" date="Wed Apr 21 09:43:14 EDT 2021" docOffset="3207" starttimestamp="1619011563329" timestamp="1030915" />
  <Command __id="913" _type="SelectTextCommand" caretOffset="2750" date="Wed Apr 21 09:43:14 EDT 2021" end="2750" start="1627" starttimestamp="1619011563329" timestamp="1031349" />
  <Command __id="914" _type="MoveCaretCommand" caretOffset="2861" date="Wed Apr 21 09:43:14 EDT 2021" docOffset="3214" starttimestamp="1619011563329" timestamp="1031512" />
  <Command __id="915" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:43:14 EDT 2021" starttimestamp="1619011563329" timestamp="1031657" />
  <Command __id="916" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:43:15 EDT 2021" starttimestamp="1619011563329" timestamp="1031755" />
  <Command __id="917" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:43:15 EDT 2021" starttimestamp="1619011563329" timestamp="1031778" />
  <Command __id="918" _type="SelectTextCommand" caretOffset="2746" date="Wed Apr 21 09:43:15 EDT 2021" end="2746" start="2398" starttimestamp="1619011563329" timestamp="1032234" />
  <Command __id="919" _type="MoveCaretCommand" caretOffset="2746" date="Wed Apr 21 09:43:15 EDT 2021" docOffset="3099" starttimestamp="1619011563329" timestamp="1032394" />
  <Command __id="920" _type="MoveCaretCommand" caretOffset="2389" date="Wed Apr 21 09:43:17 EDT 2021" docOffset="2742" starttimestamp="1619011563329" timestamp="1034034" />
  <Command __id="921" _type="SelectTextCommand" caretOffset="2725" date="Wed Apr 21 09:43:17 EDT 2021" end="2725" start="1935" starttimestamp="1619011563329" timestamp="1034539" />
  <Command __id="922" _type="MoveCaretCommand" caretOffset="2728" date="Wed Apr 21 09:43:18 EDT 2021" docOffset="3081" starttimestamp="1619011563329" timestamp="1034771" />
  <Command __id="923" _type="MoveCaretCommand" caretOffset="2737" date="Wed Apr 21 09:43:18 EDT 2021" docOffset="3090" starttimestamp="1619011563329" timestamp="1035104" />
  <Command __id="924" _type="MoveCaretCommand" caretOffset="1151" date="Wed Apr 21 09:43:20 EDT 2021" docOffset="1504" starttimestamp="1619011563329" timestamp="1037156" />
  <Command __id="925" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:43:23 EDT 2021" starttimestamp="1619011563329" timestamp="1039747" />
  <Command __id="926" _type="RunCommand" date="Wed Apr 21 09:43:23 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1039850" type="Run" />
  <Command __id="927" _type="RunCommand" date="Wed Apr 21 09:43:23 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1039850" type="Run" />
  <Command __id="928" _type="ShellCommand" date="Wed Apr 21 09:43:23 EDT 2021" starttimestamp="1619011563329" timestamp="1040642" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="929" _type="ConsoleOutput" date="Wed Apr 21 09:43:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1040784" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="930" _type="ConsoleOutput" date="Wed Apr 21 09:43:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1040887" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="931" _type="ShellCommand" date="Wed Apr 21 09:43:27 EDT 2021" starttimestamp="1619011563329" timestamp="1044025" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="932" _type="RunCommand" date="Wed Apr 21 09:43:27 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1044207" type="Run" />
  <Command __id="933" _type="RunCommand" date="Wed Apr 21 09:43:27 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1044207" type="Run" />
  <Command __id="934" _type="MoveCaretCommand" caretOffset="2732" date="Wed Apr 21 09:43:28 EDT 2021" docOffset="3085" starttimestamp="1619011563329" timestamp="1045408" />
  <Command __id="935" _type="MoveCaretCommand" caretOffset="2625" date="Wed Apr 21 09:43:29 EDT 2021" docOffset="2978" starttimestamp="1619011563329" timestamp="1045792" />
  <Command __id="936" _type="MoveCaretCommand" caretOffset="2625" date="Wed Apr 21 09:43:36 EDT 2021" docOffset="2978" starttimestamp="1619011563329" timestamp="1052836" />
  <Command __id="937" _type="MoveCaretCommand" caretOffset="2290" date="Wed Apr 21 09:43:36 EDT 2021" docOffset="2643" starttimestamp="1619011563329" timestamp="1053438" />
  <Command __id="938" _type="SelectTextCommand" caretOffset="2524" date="Wed Apr 21 09:43:37 EDT 2021" end="2524" start="1849" starttimestamp="1619011563329" timestamp="1054376" />
  <Command __id="939" _type="MoveCaretCommand" caretOffset="2524" date="Wed Apr 21 09:43:37 EDT 2021" docOffset="2877" starttimestamp="1619011563329" timestamp="1054535" />
  <DocumentChange __id="865" _type="Insert" date="Wed Apr 21 09:42:57 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3988" docExpressionCount="374" docLength="3988" length="7" offset="3051" repeat="7" starttimestamp="1619011563329" timestamp="1014287" timestamp2="1016334">
    <text><![CDATA[avaSqrt]]></text>
  </DocumentChange>
  <DocumentChange __id="884" _type="Replace" date="Wed Apr 21 09:43:03 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3981" docExpressionCount="374" docLength="3981" endLine="46" insertionLength="1" int_docASTNodeCount="500" int_docActiveCodeLength="3980" int_docExpressionCount="374" int_docLength="3980" length="8" offset="2975" startLine="46" starttimestamp="1619011563329" timestamp="1020283">
    <deletedText><![CDATA[integral]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="886" _type="Insert" date="Wed Apr 21 09:43:03 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" length="3" offset="2976" repeat="3" starttimestamp="1619011563329" timestamp="1020534" timestamp2="1021326">
    <text><![CDATA[qrt]]></text>
  </DocumentChange>
  <DocumentChange __id="897" _type="Replace" date="Wed Apr 21 09:43:10 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3981" docExpressionCount="374" docLength="3981" endLine="46" insertionLength="1" int_docASTNodeCount="500" int_docActiveCodeLength="3980" int_docExpressionCount="374" int_docLength="3980" length="4" offset="2975" startLine="46" starttimestamp="1619011563329" timestamp="1027400">
    <deletedText><![CDATA[sqrt]]></deletedText>
    <insertedText><![CDATA[e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="899" _type="Insert" date="Wed Apr 21 09:43:10 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3983" docExpressionCount="374" docLength="3983" length="2" offset="2976" repeat="2" starttimestamp="1619011563329" timestamp="1027602" timestamp2="1028348">
    <text><![CDATA[xp]]></text>
  </DocumentChange>
  <DocumentChange __id="904" _type="Replace" date="Wed Apr 21 09:43:13 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3981" docExpressionCount="374" docLength="3981" endLine="47" insertionLength="1" int_docASTNodeCount="500" int_docActiveCodeLength="3980" int_docExpressionCount="374" int_docLength="3980" length="3" offset="3084" startLine="47" starttimestamp="1619011563329" timestamp="1030000">
    <deletedText><![CDATA[sum]]></deletedText>
    <insertedText><![CDATA[s]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="906" _type="Insert" date="Wed Apr 21 09:43:13 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" length="3" offset="3085" repeat="3" starttimestamp="1619011563329" timestamp="1030235" timestamp2="1030635">
    <text><![CDATA[qrt]]></text>
  </DocumentChange>
  <Command __id="940" _type="SelectTextCommand" caretOffset="407" date="Wed Apr 21 09:43:39 EDT 2021" end="2524" start="407" starttimestamp="1619011563329" timestamp="1056294" />
  <Command __id="941" _type="SelectTextCommand" caretOffset="406" date="Wed Apr 21 09:43:39 EDT 2021" end="407" start="406" starttimestamp="1619011563329" timestamp="1056468" />
  <Command __id="943" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:43:44 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="1061611" />
  <Command __id="944" _type="MoveCaretCommand" caretOffset="1016" date="Wed Apr 21 09:43:53 EDT 2021" docOffset="1300" starttimestamp="1619011563329" timestamp="1069932" />
  <Command __id="945" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:43:57 EDT 2021" starttimestamp="1619011563329" timestamp="1074396" />
  <Command __id="946" _type="RunCommand" date="Wed Apr 21 09:43:57 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1074507" type="Run" />
  <Command __id="947" _type="RunCommand" date="Wed Apr 21 09:43:57 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1074507" type="Run" />
  <Command __id="948" _type="ShellCommand" date="Wed Apr 21 09:43:58 EDT 2021" starttimestamp="1619011563329" timestamp="1075287" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="949" _type="ConsoleOutput" date="Wed Apr 21 09:43:58 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1075378" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="950" _type="ConsoleOutput" date="Wed Apr 21 09:43:58 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1075557" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="951" _type="ConsoleOutput" date="Wed Apr 21 09:44:04 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1080718" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"W*** "), Diff(DELETE,"Value: null of Root.Image not in range."), Diff(INSERT,"public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="952" _type="ShellCommand" date="Wed Apr 21 09:44:26 EDT 2021" starttimestamp="1619011563329" timestamp="1102857" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="953" _type="RunCommand" date="Wed Apr 21 09:44:26 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1103040" type="Run" />
  <Command __id="954" _type="RunCommand" date="Wed Apr 21 09:44:26 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1103040" type="Run" />
  <Command __id="955" _type="MoveCaretCommand" caretOffset="1016" date="Wed Apr 21 09:44:26 EDT 2021" docOffset="1300" starttimestamp="1619011563329" timestamp="1103335" />
  <Command __id="956" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:44:31 EDT 2021" starttimestamp="1619011563329" timestamp="1107774" />
  <Command __id="957" _type="RunCommand" date="Wed Apr 21 09:44:31 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1107872" type="Run" />
  <Command __id="958" _type="RunCommand" date="Wed Apr 21 09:44:31 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1107872" type="Run" />
  <Command __id="959" _type="ShellCommand" date="Wed Apr 21 09:44:31 EDT 2021" starttimestamp="1619011563329" timestamp="1108669" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="960" _type="ConsoleOutput" date="Wed Apr 21 09:44:32 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1108810" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶"), Diff(EQUAL,"W*** public void components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL,".addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit"), Diff(DELETE,"ly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable"), Diff(INSERT," property caretPosition of  MathEditorPanel ignored"), Diff(EQUAL," as it is not in "), Diff(DELETE,"editable "), Diff(EQUAL,"property names list. ¶"), Diff(DELETE,"¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as "), Diff(INSERT," Associate annotation @Visible(false) w"), Diff(EQUAL,"it"), Diff(INSERT,"h"), Diff(EQUAL," i"), Diff(DELETE,"s not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x"), Diff(INSERT,"ts getter.¶W*** Implicitly editable property: caretPosition"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: "), Diff(DELETE,"y"), Diff(INSERT,"image"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="961" _type="ConsoleOutput" date="Wed Apr 21 09:44:32 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1108913" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="942" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:43:44 EDT 2021" docASTNodeCount="348" docActiveCodeLength="2432" docExpressionCount="210" docLength="2432" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1061512">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathExpressionImage.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import components.listenersupport.PropertyListenerSupport;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.IMAGE_PATTERN)¶@PropertyNames({"x", "y", "width", "height", "imageFileName"})¶@EditablePropertyNames({})¶public class MathExpressionImage implements MathExpressionImageInterface{¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private int x, y, height, width;¶	private String imageFileName;¶¶	public MathExpressionImage(int newX, int newY, int h, int w, String name) {¶		setX(newX);¶		setY(newY);¶		setHeight(h);¶		setWidth(w);¶		setImageFileName(name);¶	}¶	¶	@Override¶    public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public int getWidth() {¶		return width;¶	}¶¶	@Override¶	public void setWidth(int newWidth) {¶		int oldWidth = width;¶		width = newWidth;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶¶	@Override¶	public int getHeight() {¶		return height;¶	}¶¶	@Override¶	public void setHeight(int newHeight) {¶		int oldHeight = height;¶		height = newHeight;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public String getImageFileName() {¶		return imageFileName;¶	}¶¶	@Override¶	public void setImageFileName(String newName) {¶		String oldName = imageFileName;¶		imageFileName = newName;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "imageFileName", oldName, imageFileName));¶	}¶}¶	¶")]]]></diff>
  </Command>
  <Command __id="962" _type="ShellCommand" date="Wed Apr 21 09:44:38 EDT 2021" starttimestamp="1619011563329" timestamp="1114701" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="963" _type="RunCommand" date="Wed Apr 21 09:44:38 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1114870" type="Run" />
  <Command __id="964" _type="RunCommand" date="Wed Apr 21 09:44:38 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1114870" type="Run" />
  <Command __id="966" _type="MoveCaretCommand" caretOffset="8089" date="Wed Apr 21 09:44:42 EDT 2021" docOffset="9116" starttimestamp="1619011563329" timestamp="1119339" />
  <Command __id="967" _type="SelectTextCommand" caretOffset="8745" date="Wed Apr 21 09:44:45 EDT 2021" end="8747" start="8745" starttimestamp="1619011563329" timestamp="1121760" />
  <Command __id="969" _type="InsertStringCommand" date="Wed Apr 21 09:44:45 EDT 2021" starttimestamp="1619011563329" timestamp="1122327" timestamp2="1122327">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="971" _type="InsertStringCommand" date="Wed Apr 21 09:44:45 EDT 2021" starttimestamp="1619011563329" timestamp="1122431" timestamp2="1122431">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="972" _type="MoveCaretCommand" caretOffset="8461" date="Wed Apr 21 09:44:47 EDT 2021" docOffset="9488" starttimestamp="1619011563329" timestamp="1123884" />
  <Command __id="973" _type="MoveCaretCommand" caretOffset="8461" date="Wed Apr 21 09:44:47 EDT 2021" docOffset="9488" starttimestamp="1619011563329" timestamp="1124503" />
  <Command __id="974" _type="SelectTextCommand" caretOffset="8460" date="Wed Apr 21 09:44:48 EDT 2021" end="8462" start="8460" starttimestamp="1619011563329" timestamp="1125270" />
  <Command __id="976" _type="InsertStringCommand" date="Wed Apr 21 09:44:48 EDT 2021" starttimestamp="1619011563329" timestamp="1125607" timestamp2="1125607">
    <data><![CDATA[3]]></data>
  </Command>
  <Command __id="978" _type="InsertStringCommand" date="Wed Apr 21 09:44:49 EDT 2021" starttimestamp="1619011563329" timestamp="1125897" timestamp2="1125897">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="979" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:44:49 EDT 2021" starttimestamp="1619011563329" timestamp="1126232" />
  <Command __id="980" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:44:49 EDT 2021" starttimestamp="1619011563329" timestamp="1126329" />
  <Command __id="981" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:44:49 EDT 2021" starttimestamp="1619011563329" timestamp="1126363" />
  <Command __id="982" _type="MoveCaretCommand" caretOffset="8511" date="Wed Apr 21 09:44:50 EDT 2021" docOffset="9538" starttimestamp="1619011563329" timestamp="1126730" />
  <Command __id="983" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:44:53 EDT 2021" starttimestamp="1619011563329" timestamp="1130315" />
  <Command __id="984" _type="RunCommand" date="Wed Apr 21 09:44:53 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1130415" type="Run" />
  <Command __id="985" _type="RunCommand" date="Wed Apr 21 09:44:53 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1130416" type="Run" />
  <Command __id="986" _type="ShellCommand" date="Wed Apr 21 09:44:54 EDT 2021" starttimestamp="1619011563329" timestamp="1131208" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="987" _type="ConsoleOutput" date="Wed Apr 21 09:44:54 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1131349" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="988" _type="ConsoleOutput" date="Wed Apr 21 09:44:54 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1131453" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="989" _type="ShellCommand" date="Wed Apr 21 09:45:08 EDT 2021" starttimestamp="1619011563329" timestamp="1145480" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="990" _type="RunCommand" date="Wed Apr 21 09:45:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1145646" type="Run" />
  <Command __id="991" _type="RunCommand" date="Wed Apr 21 09:45:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1145646" type="Run" />
  <Command __id="965" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:44:42 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10792" docExpressionCount="1180" docLength="10792" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1119238">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row("), Diff(DELETE,"3"), Diff(INSERT,"2"), Diff(EQUAL,")¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	"), Diff(INSERT,"@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp()");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt()");¶		setTexExpression(buffer.toString());¶	}¶	"), Diff(EQUAL,"¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp()");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "sqrt()");
		setTexExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="968" _type="Replace" date="Wed Apr 21 09:44:45 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10791" docExpressionCount="1180" docLength="10791" endLine="351" insertionLength="1" int_docASTNodeCount="1622" int_docActiveCodeLength="10790" int_docExpressionCount="1179" int_docLength="10790" length="2" offset="9772" startLine="351" starttimestamp="1619011563329" timestamp="1122320">
    <deletedText><![CDATA[60]]></deletedText>
    <insertedText><![CDATA[3]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="970" _type="Insert" date="Wed Apr 21 09:44:45 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10792" docExpressionCount="1180" docLength="10792" length="1" offset="9773" starttimestamp="1619011563329" timestamp="1122429">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <DocumentChange __id="975" _type="Replace" date="Wed Apr 21 09:44:48 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10791" docExpressionCount="1180" docLength="10791" endLine="340" insertionLength="1" int_docASTNodeCount="1622" int_docActiveCodeLength="10790" int_docExpressionCount="1179" int_docLength="10790" length="2" offset="9487" startLine="340" starttimestamp="1619011563329" timestamp="1125600">
    <deletedText><![CDATA[60]]></deletedText>
    <insertedText><![CDATA[3]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="977" _type="Insert" date="Wed Apr 21 09:44:49 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10792" docExpressionCount="1180" docLength="10792" length="1" offset="9488" starttimestamp="1619011563329" timestamp="1125894">
    <text><![CDATA[0]]></text>
  </DocumentChange>
  <Command __id="994" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:45:11 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1148237">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		"), Diff(INSERT,"ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaExp", AttributeNames.ICON, "image/exp.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaSqrt", AttributeNames.ICON, "image/sqrt.png");¶		"), Diff(EQUAL,"¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import java.util.Vector;
import javax.swing.text.JTextComponent;
import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.uiFrame;
import bus.uigen.attributes.AttributeNames;
import bus.uigen.oadapters.ClassAdapter;
import bus.uigen.oadapters.ObjectAdapter;
import components.caret.MathPanelCaretListener;
import components.mathEditor.MathEditorPanel;

public class MathMain {
	public static MathEditorPanel panel;
	public static OEFrame frame;
	
	public static void main(String[] args) {
		panel = new MathEditorPanel();
		frame = ObjectEditor.edit(panel);
		
		setCaretPositionListener();
		setButtonImage();
	}
	
	public static void setButtonImage() {
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaExp", AttributeNames.ICON, "image/exp.png");
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaSqrt", AttributeNames.ICON, "image/sqrt.png");
		
		
		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");
	}
	
	public static void setCaretPositionListener() {
		uiFrame aUIFrame = (uiFrame) frame;
		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();
		Vector<ObjectAdapter> children = adapter.getChildrenVector();
		
		ObjectAdapter observableAdapter = null;
		
		for (ObjectAdapter child : children) {
			if (child.getComponentName().equals("mathExpression")) {
				observableAdapter = child;
				break;
			}
		}
		
		MathPanelCaretListener listener = new MathPanelCaretListener(panel);
		
		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {
			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);
		}
	}

}
]]></snapshot>
  </Command>
  <Command __id="992" _type="MoveCaretCommand" caretOffset="9202" date="Wed Apr 21 09:45:10 EDT 2021" docOffset="10229" starttimestamp="1619011563329" timestamp="1146847" />
  <Command __id="993" _type="MoveCaretCommand" caretOffset="8725" date="Wed Apr 21 09:45:10 EDT 2021" docOffset="9752" starttimestamp="1619011563329" timestamp="1147343" />
  <Command __id="995" _type="SelectTextCommand" caretOffset="406" date="Wed Apr 21 09:45:11 EDT 2021" end="407" start="406" starttimestamp="1619011563329" timestamp="1148354" />
  <Command __id="997" _type="MoveCaretCommand" caretOffset="8725" date="Wed Apr 21 09:45:15 EDT 2021" docOffset="9752" starttimestamp="1619011563329" timestamp="1151801" />
  <Command __id="998" _type="SelectTextCommand" caretOffset="8910" date="Wed Apr 21 09:45:21 EDT 2021" end="8913" start="8910" starttimestamp="1619011563329" timestamp="1158367" />
  <Command __id="1000" _type="InsertStringCommand" date="Wed Apr 21 09:45:22 EDT 2021" starttimestamp="1619011563329" timestamp="1159093" timestamp2="1159093">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="1002" _type="InsertStringCommand" date="Wed Apr 21 09:45:22 EDT 2021" starttimestamp="1619011563329" timestamp="1159279" timestamp2="1159279">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1004" _type="InsertStringCommand" date="Wed Apr 21 09:45:22 EDT 2021" starttimestamp="1619011563329" timestamp="1159475" timestamp2="1159475">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1006" _type="InsertStringCommand" date="Wed Apr 21 09:45:22 EDT 2021" starttimestamp="1619011563329" timestamp="1159548" timestamp2="1159548">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1007" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:45:23 EDT 2021" starttimestamp="1619011563329" timestamp="1160087" />
  <Command __id="1008" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:45:23 EDT 2021" starttimestamp="1619011563329" timestamp="1160185" />
  <Command __id="1009" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:45:23 EDT 2021" starttimestamp="1619011563329" timestamp="1160204" />
  <Command __id="1010" _type="SelectTextCommand" caretOffset="8623" date="Wed Apr 21 09:45:24 EDT 2021" end="8626" start="8623" starttimestamp="1619011563329" timestamp="1161661" />
  <Command __id="1012" _type="InsertStringCommand" date="Wed Apr 21 09:45:25 EDT 2021" starttimestamp="1619011563329" timestamp="1162176" timestamp2="1162176">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="1014" _type="InsertStringCommand" date="Wed Apr 21 09:45:25 EDT 2021" starttimestamp="1619011563329" timestamp="1162335" timestamp2="1162335">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1016" _type="InsertStringCommand" date="Wed Apr 21 09:45:25 EDT 2021" starttimestamp="1619011563329" timestamp="1162484" timestamp2="1162484">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="1018" _type="InsertStringCommand" date="Wed Apr 21 09:45:25 EDT 2021" starttimestamp="1619011563329" timestamp="1162561" timestamp2="1162561">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1019" _type="MoveCaretCommand" caretOffset="8636" date="Wed Apr 21 09:45:26 EDT 2021" docOffset="9663" starttimestamp="1619011563329" timestamp="1163216" />
  <Command __id="1020" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:45:26 EDT 2021" starttimestamp="1619011563329" timestamp="1163426" />
  <Command __id="1021" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:45:26 EDT 2021" starttimestamp="1619011563329" timestamp="1163523" />
  <Command __id="1022" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:45:26 EDT 2021" starttimestamp="1619011563329" timestamp="1163542" />
  <Command __id="1023" _type="MoveCaretCommand" caretOffset="8923" date="Wed Apr 21 09:45:30 EDT 2021" docOffset="9950" starttimestamp="1619011563329" timestamp="1166934" />
  <Command __id="1024" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:45:35 EDT 2021" starttimestamp="1619011563329" timestamp="1172641" />
  <Command __id="1025" _type="RunCommand" date="Wed Apr 21 09:45:36 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1172744" type="Run" />
  <Command __id="1026" _type="RunCommand" date="Wed Apr 21 09:45:36 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1172745" type="Run" />
  <Command __id="1027" _type="ShellCommand" date="Wed Apr 21 09:45:36 EDT 2021" starttimestamp="1619011563329" timestamp="1173552" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1028" _type="ConsoleOutput" date="Wed Apr 21 09:45:37 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1173691" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1029" _type="ConsoleOutput" date="Wed Apr 21 09:45:37 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1173793" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1030" _type="ExceptionCommand" date="Wed Apr 21 09:45:40 EDT 2021" starttimestamp="1619011563329" timestamp="1176908" type="Exception">
    <exceptionString><![CDATA[Testing Expression [e, x, p, (, )]
Testing add-sub Expression [e, x, p, (, )]
Testing multi div Expression [e, x, p, (, )]
Testing function Expression [e, x, p, (, )]
Testing parenthesis Expression [e, x, p, (, )]
Parenthesis Expression [x, p, (]
class java.lang.NullPointerException
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:346)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1031" _type="ExceptionCommand" date="Wed Apr 21 09:45:41 EDT 2021" starttimestamp="1619011563329" timestamp="1178255" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:346)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1032" _type="ExceptionCommand" date="Wed Apr 21 09:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="1179602" type="Exception">
    <exceptionString><![CDATA[Testing Expression [s, q, r, t, (, )]
Testing add-sub Expression [s, q, r, t, (, )]
class java.lang.NullPointerException
Testing multi div Expression [s, q, r, t, (, )]
Testing function Expression [s, q, r, t, (, )]
Testing parenthesis Expression [s, q, r, t, (, )]
Parenthesis Expression [q, r, t, (]
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaSqrt(MathEditorPanel.java:357)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1033" _type="ExceptionCommand" date="Wed Apr 21 09:45:46 EDT 2021" starttimestamp="1619011563329" timestamp="1183043" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaSqrt(MathEditorPanel.java:357)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1034" _type="ShellCommand" date="Wed Apr 21 09:45:46 EDT 2021" starttimestamp="1619011563329" timestamp="1183666" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1035" _type="RunCommand" date="Wed Apr 21 09:45:47 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1183833" type="Run" />
  <Command __id="1036" _type="RunCommand" date="Wed Apr 21 09:45:47 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1183834" type="Run" />
  <Command __id="1037" _type="MoveCaretCommand" caretOffset="8949" date="Wed Apr 21 09:45:47 EDT 2021" docOffset="9976" starttimestamp="1619011563329" timestamp="1184525" />
  <Command __id="1038" _type="MoveCaretCommand" caretOffset="8941" date="Wed Apr 21 09:45:48 EDT 2021" docOffset="9968" starttimestamp="1619011563329" timestamp="1184870" />
  <Command __id="1039" _type="MoveCaretCommand" caretOffset="8945" date="Wed Apr 21 09:45:51 EDT 2021" docOffset="9972" starttimestamp="1619011563329" timestamp="1188356" />
  <Command __id="1040" _type="SelectTextCommand" caretOffset="8743" date="Wed Apr 21 09:45:52 EDT 2021" end="8945" start="8743" starttimestamp="1619011563329" timestamp="1188998" />
  <Command __id="1041" _type="MoveCaretCommand" caretOffset="9023" date="Wed Apr 21 09:45:52 EDT 2021" docOffset="10050" starttimestamp="1619011563329" timestamp="1189193" />
  <Command __id="1042" _type="MoveCaretCommand" caretOffset="8661" date="Wed Apr 21 09:45:56 EDT 2021" docOffset="9688" starttimestamp="1619011563329" timestamp="1193178" />
  <Command __id="1043" _type="MoveCaretCommand" caretOffset="8996" date="Wed Apr 21 09:45:57 EDT 2021" docOffset="10023" starttimestamp="1619011563329" timestamp="1193685" />
  <Command __id="1044" _type="SelectTextCommand" caretOffset="1541" date="Wed Apr 21 09:46:05 EDT 2021" end="1541" start="1064" starttimestamp="1619011563329" timestamp="1202003" />
  <Command __id="1045" _type="MoveCaretCommand" caretOffset="1541" date="Wed Apr 21 09:46:05 EDT 2021" docOffset="2568" starttimestamp="1619011563329" timestamp="1202175" />
  <Command __id="1046" _type="SelectTextCommand" caretOffset="1350" date="Wed Apr 21 09:46:07 EDT 2021" end="1541" start="1350" starttimestamp="1619011563329" timestamp="1204524" />
  <Command __id="1047" _type="MoveCaretCommand" caretOffset="1350" date="Wed Apr 21 09:46:08 EDT 2021" docOffset="2377" starttimestamp="1619011563329" timestamp="1204711" />
  <Command __id="1048" _type="SelectTextCommand" caretOffset="1481" date="Wed Apr 21 09:46:10 EDT 2021" end="1481" start="1350" starttimestamp="1619011563329" timestamp="1207091" />
  <Command __id="1049" _type="MoveCaretCommand" caretOffset="1479" date="Wed Apr 21 09:46:10 EDT 2021" docOffset="2506" starttimestamp="1619011563329" timestamp="1207259" />
  <Command __id="1050" _type="SelectTextCommand" caretOffset="1350" date="Wed Apr 21 09:46:12 EDT 2021" end="1479" start="1350" starttimestamp="1619011563329" timestamp="1208925" />
  <Command __id="1051" _type="MoveCaretCommand" caretOffset="1350" date="Wed Apr 21 09:46:12 EDT 2021" docOffset="2377" starttimestamp="1619011563329" timestamp="1209084" />
  <Command __id="1052" _type="SelectTextCommand" caretOffset="1479" date="Wed Apr 21 09:46:13 EDT 2021" end="1479" start="1350" starttimestamp="1619011563329" timestamp="1210258" />
  <Command __id="1053" _type="MoveCaretCommand" caretOffset="1479" date="Wed Apr 21 09:46:13 EDT 2021" docOffset="2506" starttimestamp="1619011563329" timestamp="1210402" />
  <Command __id="1054" _type="SelectTextCommand" caretOffset="1350" date="Wed Apr 21 09:46:14 EDT 2021" end="1479" start="1350" starttimestamp="1619011563329" timestamp="1211469" />
  <Command __id="1055" _type="MoveCaretCommand" caretOffset="1350" date="Wed Apr 21 09:46:14 EDT 2021" docOffset="2377" starttimestamp="1619011563329" timestamp="1211625" />
  <Command __id="1056" _type="SelectTextCommand" caretOffset="1479" date="Wed Apr 21 09:46:15 EDT 2021" end="1479" start="1350" starttimestamp="1619011563329" timestamp="1212343" />
  <Command __id="1057" _type="MoveCaretCommand" caretOffset="1479" date="Wed Apr 21 09:46:15 EDT 2021" docOffset="2506" starttimestamp="1619011563329" timestamp="1212512" />
  <Command __id="1058" _type="SelectTextCommand" caretOffset="1349" date="Wed Apr 21 09:46:16 EDT 2021" end="1402" start="1349" starttimestamp="1619011563329" timestamp="1213087" />
  <Command __id="1059" _type="MoveCaretCommand" caretOffset="1349" date="Wed Apr 21 09:46:16 EDT 2021" docOffset="2376" starttimestamp="1619011563329" timestamp="1213289" />
  <Command __id="1060" _type="SelectTextCommand" caretOffset="1479" date="Wed Apr 21 09:46:18 EDT 2021" end="1479" start="1350" starttimestamp="1619011563329" timestamp="1214790" />
  <Command __id="1061" _type="MoveCaretCommand" caretOffset="1479" date="Wed Apr 21 09:46:18 EDT 2021" docOffset="2506" starttimestamp="1619011563329" timestamp="1214942" />
  <Command __id="1062" _type="SelectTextCommand" caretOffset="1350" date="Wed Apr 21 09:46:19 EDT 2021" end="1479" start="1350" starttimestamp="1619011563329" timestamp="1216151" />
  <Command __id="1063" _type="MoveCaretCommand" caretOffset="1350" date="Wed Apr 21 09:46:19 EDT 2021" docOffset="2377" starttimestamp="1619011563329" timestamp="1216298" />
  <Command __id="1064" _type="MoveCaretCommand" caretOffset="8612" date="Wed Apr 21 09:46:42 EDT 2021" docOffset="9639" starttimestamp="1619011563329" timestamp="1239441" />
  <Command __id="1066" _type="InsertStringCommand" date="Wed Apr 21 09:46:43 EDT 2021" starttimestamp="1619011563329" timestamp="1240058" timestamp2="1240058">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="1067" _type="MoveCaretCommand" caretOffset="8901" date="Wed Apr 21 09:46:44 EDT 2021" docOffset="9928" starttimestamp="1619011563329" timestamp="1240934" />
  <Command __id="1069" _type="InsertStringCommand" date="Wed Apr 21 09:46:44 EDT 2021" starttimestamp="1619011563329" timestamp="1241483" timestamp2="1241483">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="1070" _type="MoveCaretCommand" caretOffset="8772" date="Wed Apr 21 09:46:45 EDT 2021" docOffset="9799" starttimestamp="1619011563329" timestamp="1241905" />
  <Command __id="1071" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:46:45 EDT 2021" starttimestamp="1619011563329" timestamp="1242182" />
  <Command __id="1072" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:46:45 EDT 2021" starttimestamp="1619011563329" timestamp="1242278" />
  <Command __id="1073" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:46:45 EDT 2021" starttimestamp="1619011563329" timestamp="1242297" />
  <Command __id="1074" _type="MoveCaretCommand" caretOffset="8511" date="Wed Apr 21 09:46:45 EDT 2021" docOffset="9538" starttimestamp="1619011563329" timestamp="1242574" />
  <Command __id="1075" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:46:49 EDT 2021" starttimestamp="1619011563329" timestamp="1246065" />
  <Command __id="1076" _type="RunCommand" date="Wed Apr 21 09:46:49 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1246190" type="Run" />
  <Command __id="1077" _type="RunCommand" date="Wed Apr 21 09:46:49 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1246190" type="Run" />
  <Command __id="1078" _type="ShellCommand" date="Wed Apr 21 09:46:50 EDT 2021" starttimestamp="1619011563329" timestamp="1246986" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1079" _type="ConsoleOutput" date="Wed Apr 21 09:46:50 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1247130" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1080" _type="ConsoleOutput" date="Wed Apr 21 09:46:50 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1247233" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1081" _type="ConsoleOutput" date="Wed Apr 21 09:46:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1249518" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1082" _type="ShellCommand" date="Wed Apr 21 09:47:06 EDT 2021" starttimestamp="1619011563329" timestamp="1263482" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1083" _type="RunCommand" date="Wed Apr 21 09:47:06 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1263647" type="Run" />
  <Command __id="1084" _type="RunCommand" date="Wed Apr 21 09:47:06 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1263648" type="Run" />
  <Command __id="1085" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:47:12 EDT 2021" starttimestamp="1619011563329" timestamp="1268964" />
  <Command __id="1086" _type="RunCommand" date="Wed Apr 21 09:47:12 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1269094" type="Run" />
  <Command __id="1087" _type="RunCommand" date="Wed Apr 21 09:47:12 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1269094" type="Run" />
  <Command __id="1088" _type="ShellCommand" date="Wed Apr 21 09:47:13 EDT 2021" starttimestamp="1619011563329" timestamp="1269887" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1089" _type="ConsoleOutput" date="Wed Apr 21 09:47:13 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1270036" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1090" _type="ConsoleOutput" date="Wed Apr 21 09:47:13 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1270140" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1091" _type="ConsoleOutput" date="Wed Apr 21 09:47:17 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1273820" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1092" _type="ConsoleOutput" date="Wed Apr 21 09:47:17 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1273985" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]"), Diff(INSERT,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1093" _type="ConsoleOutput" date="Wed Apr 21 09:47:31 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1287840" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [1]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [1]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1094" _type="ConsoleOutput" date="Wed Apr 21 09:47:32 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1289110" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [1]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [1]¶")]]]></diff>
  </Command>
  <Command __id="1095" _type="ConsoleOutput" date="Wed Apr 21 09:47:32 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1289321" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [1]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [1]¶")]]]></diff>
  </Command>
  <Command __id="1096" _type="ShellCommand" date="Wed Apr 21 09:47:33 EDT 2021" starttimestamp="1619011563329" timestamp="1290111" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1097" _type="RunCommand" date="Wed Apr 21 09:47:33 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1290280" type="Run" />
  <Command __id="1098" _type="RunCommand" date="Wed Apr 21 09:47:33 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1290280" type="Run" />
  <Command __id="1099" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:47:41 EDT 2021" starttimestamp="1619011563329" timestamp="1297825" />
  <Command __id="1100" _type="RunCommand" date="Wed Apr 21 09:47:41 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1297949" type="Run" />
  <Command __id="1101" _type="RunCommand" date="Wed Apr 21 09:47:41 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1297949" type="Run" />
  <Command __id="1102" _type="ShellCommand" date="Wed Apr 21 09:47:42 EDT 2021" starttimestamp="1619011563329" timestamp="1298745" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1103" _type="ConsoleOutput" date="Wed Apr 21 09:47:42 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1298885" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [1]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1104" _type="ConsoleOutput" date="Wed Apr 21 09:47:42 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1298990" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1105" _type="ConsoleOutput" date="Wed Apr 21 09:47:48 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1304875" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, ^, x]
Testing add-sub Expression [e, ^, x]
Testing multi div Expression [e, ^, x]
Testing Expression [e]
Testing Expression [x]
Testing add-sub Expression [e, ^, x]
Testing multi div Expression [e, ^, x]
Testing function Expression [e, ^, x]
Testing Expression [e]
Testing Expression [x]
Testing Expression [e]
Testing Expression [x]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [e, ^, x]¶Testing add-sub Expression [e, ^, x]¶Testing multi div Expression [e, ^, x]¶Testing Expression [e]¶Testing Expression [x]¶Testing add-sub Expression [e, ^, x]¶Testing multi div Expression [e, ^, x]¶Testing function Expression [e, ^, x]¶Testing Expression [e]¶Testing Expression [x]¶Testing Expression [e]¶Testing Expression [x]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1106" _type="ConsoleOutput" date="Wed Apr 21 09:47:48 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1305165" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, ^, x]¶Testing add-sub Expression [e, ^, x]¶Testing multi div Expression [e, ^, x]¶Testing Expression [e]¶Testing Expression [x]¶Testing add-sub Expression [e, ^, x]¶Testing multi div Expression [e, ^, x]¶Testing function Expression [e, ^, x]¶Testing Expression [e]¶Testing Expression [x]¶Testing Expression [e]¶Testing Expression [x]"), Diff(INSERT,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1107" _type="ConsoleOutput" date="Wed Apr 21 09:48:01 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1317896" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1108" _type="ShellCommand" date="Wed Apr 21 09:48:07 EDT 2021" starttimestamp="1619011563329" timestamp="1323782" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1109" _type="ShellCommand" date="Wed Apr 21 09:48:08 EDT 2021" starttimestamp="1619011563329" timestamp="1325144" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1110" _type="ConsoleOutput" date="Wed Apr 21 09:48:11 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1327956" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, b]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"a, b"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="996" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:45:15 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10792" docExpressionCount="1180" docLength="10792" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1151713">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight("), Diff(DELETE,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp()");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight("), Diff(DELETE,"6"), Diff(INSERT,"3"), Diff(EQUAL,"0)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt()");¶		setTexExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp()");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "sqrt()");
		setTexExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <DocumentChange __id="999" _type="Replace" date="Wed Apr 21 09:45:22 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10790" docExpressionCount="1180" docLength="10790" endLine="356" insertionLength="1" int_docASTNodeCount="1623" int_docActiveCodeLength="10789" int_docExpressionCount="1180" int_docLength="10789" length="3" offset="9937" startLine="356" starttimestamp="1619011563329" timestamp="1159086">
    <deletedText><![CDATA[Tex]]></deletedText>
    <insertedText><![CDATA[J]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1001" _type="Insert" date="Wed Apr 21 09:45:22 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10793" docExpressionCount="1180" docLength="10793" length="3" offset="9938" repeat="3" starttimestamp="1619011563329" timestamp="1159276" timestamp2="1159545">
    <text><![CDATA[ava]]></text>
  </DocumentChange>
  <DocumentChange __id="1011" _type="Replace" date="Wed Apr 21 09:45:25 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10791" docExpressionCount="1180" docLength="10791" endLine="345" insertionLength="1" int_docASTNodeCount="1623" int_docActiveCodeLength="10790" int_docExpressionCount="1180" int_docLength="10790" length="3" offset="9650" startLine="345" starttimestamp="1619011563329" timestamp="1162170">
    <deletedText><![CDATA[Tex]]></deletedText>
    <insertedText><![CDATA[J]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1013" _type="Insert" date="Wed Apr 21 09:45:25 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10794" docExpressionCount="1180" docLength="10794" length="3" offset="9651" repeat="3" starttimestamp="1619011563329" timestamp="1162333" timestamp2="1162558">
    <text><![CDATA[ava]]></text>
  </DocumentChange>
  <DocumentChange __id="1065" _type="Insert" date="Wed Apr 21 09:46:43 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10795" docExpressionCount="1180" docLength="10795" length="1" offset="9639" starttimestamp="1619011563329" timestamp="1240053">
    <text><![CDATA[x]]></text>
  </DocumentChange>
  <DocumentChange __id="1068" _type="Insert" date="Wed Apr 21 09:46:44 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10796" docExpressionCount="1180" docLength="10796" length="1" offset="9928" starttimestamp="1619011563329" timestamp="1241477">
    <text><![CDATA[a]]></text>
  </DocumentChange>
  <Command __id="1111" _type="ShellCommand" date="Wed Apr 21 09:48:16 EDT 2021" starttimestamp="1619011563329" timestamp="1333458" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1112" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:48:18 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1335641">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"/*¶ * Simple Java LaTex example¶ * http://www.heatonresearch.com/¶ * ¶ * Copyright 2013 Heaton Research, Inc.¶ *¶ * Licensed under the Apache License, Version 2.0 (the "License");¶ * you may not use this file except in compliance with the License.¶ * You may obtain a copy of the License at¶ *¶ *     http://www.apache.org/licenses/LICENSE-2.0¶ *¶ * Unless required by applicable law or agreed to in writing, software¶ * distributed under the License is distributed on an "AS IS" BASIS,¶ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.¶ * See the License for the specific language governing permissions and¶ * limitations under the License.¶ *   ¶ * For more information on Heaton Research copyrights, licenses ¶ * and trademarks visit:¶ * http://www.heatonresearch.com/copyright¶ */¶¶package components.mathEditor;¶¶import java.awt.BorderLayout;¶import java.awt.Color;¶import java.awt.Container;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.GridLayout;¶import java.awt.Insets;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.image.BufferedImage;¶import java.io.File;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JOptionPane;¶import javax.swing.JPanel;¶import javax.swing.JScrollPane;¶import javax.swing.JTextArea;¶¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶¶public class LatexExample extends JFrame implements ActionListener {¶	¶	private JTextArea latexSource;¶	private JButton btnRender;¶	private JPanel drawingArea;¶¶	public LatexExample() {¶		this.setTitle("JLatexMath Example");¶		this.setSize(500, 500);¶		Container content = this.getContentPane();¶		content.setLayout(new GridLayout(2, 1));¶		this.latexSource = new JTextArea();¶		¶		JPanel editorArea = new JPanel();¶		editorArea.setLayout(new BorderLayout());¶		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);¶		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		¶		¶		content.add(editorArea);¶		content.add(this.drawingArea = new JPanel());		¶		this.btnRender.addActionListener(this);¶		¶		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");¶	}¶¶	public void render() {¶		try {¶			// get the text¶			String latex = this.latexSource.getText();¶			¶			// create a formula¶			TeXFormula formula = new TeXFormula(latex);¶			¶			¶			// render the formla to an icon of the same size as the formula.¶			TeXIcon icon = formula¶					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶			¶			// insert a border ¶			icon.setInsets(new Insets(5, 5, 5, 5));¶¶			// now create an actual image of the rendered equation¶			BufferedImage image = new BufferedImage(icon.getIconWidth(),¶					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶			Graphics2D g2 = image.createGraphics();¶			g2.setColor(Color.white);¶			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶			JLabel jl = new JLabel();¶			jl.setForeground(new Color(0, 0, 0));¶			icon.paintIcon(jl, g2, 0, 0);¶			// at this point the image is created, you could also save it with ImageIO¶			¶			File outputfile = new File("image.png");¶			ImageIO.write(image, "png", outputfile);¶			¶			// now draw it to the screen			¶			Graphics g = this.drawingArea.getGraphics();¶			g.drawImage(image,0,0,null);¶		} catch (Exception ex) {¶			ex.printStackTrace();¶			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",¶					JOptionPane.INFORMATION_MESSAGE);		¶		}¶¶	}¶¶	public static void main(String[] args) {¶		LatexExample frame = new LatexExample();		¶		frame.setVisible(true);¶	}¶¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if( e.getSource() == this.btnRender ) {¶			render();¶		}¶		¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1113" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:48:19 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="1335732" />
  <Command __id="1115" _type="MoveCaretCommand" caretOffset="4914" date="Wed Apr 21 09:48:25 EDT 2021" docOffset="4963" starttimestamp="1619011563329" timestamp="1342042" />
  <Command __id="1116" _type="MoveCaretCommand" caretOffset="4677" date="Wed Apr 21 09:50:00 EDT 2021" docOffset="4726" starttimestamp="1619011563329" timestamp="1436887" />
  <Command __id="1117" _type="MoveCaretCommand" caretOffset="4671" date="Wed Apr 21 09:50:01 EDT 2021" docOffset="4720" starttimestamp="1619011563329" timestamp="1437833" />
  <Command __id="1118" _type="MoveCaretCommand" caretOffset="4792" date="Wed Apr 21 09:50:02 EDT 2021" docOffset="4841" starttimestamp="1619011563329" timestamp="1439181" />
  <Command __id="1114" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:48:25 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5669" docExpressionCount="666" docLength="5669" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1341948">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\TexTreeBuilder.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶public class TexTreeBuilder {¶	private DefaultMutableTreeNode root;¶	private JavaExpressionParser parser = new JavaExpressionParser();¶	¶	¶	public String build(DefaultMutableTreeNode aRoot) {¶		root = aRoot;¶		String resultString = "";¶		for (Character c : getTexVector(root)) {¶			resultString += c;¶		}¶		return resultString;¶	}¶	¶	public Vector<Character> getTexVector(DefaultMutableTreeNode thisNode) {¶		Vector<Character> childrenVector = new Vector<Character> ();¶		for (int i = 0; i < thisNode.getChildCount(); i ++) {¶			DefaultMutableTreeNode child = (DefaultMutableTreeNode) thisNode.getChildAt(i);¶			if (child.getChildCount() == 0) {¶				if (((Vector<Character>) child.getUserObject()).get(0) == '/') {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('\\');¶					fracVector.add('f');¶					fracVector.add('r');¶					fracVector.add('a');¶					fracVector.add('c');¶					fracVector.add('{');¶					fracVector = concat(fracVector, childrenVector);¶					fracVector.add('}');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i ++;¶					childrenVector = fracVector;¶				}¶				else if (((Vector<Character>) child.getUserObject()).get(0) == '^') {¶					Vector<Character> powerVector = new Vector<Character> ();¶					powerVector = concat(childrenVector, powerVector);¶					powerVector.add('^');¶					powerVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					if (nextChild.getChildCount() == 0) {¶						powerVector = concat(powerVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						powerVector = concat(powerVector, getTexVector(nextChild));¶					}¶					powerVector.add('}');¶					i ++;¶					childrenVector = powerVector;¶				}¶				else if (((Vector<Character>) child.getUserObject()).get(0) == '*') {¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					DefaultMutableTreeNode prevChild = (DefaultMutableTreeNode) thisNode.getChildAt(i - 1);¶					Vector<Character> timesVector = new Vector<Character> ();¶					timesVector = concat(childrenVector, timesVector);¶					if (prevChild.getChildCount() == 0 && nextChild.getChildCount() == 0 ¶							&& parser.isNumber((Vector<Character>) prevChild.getUserObject()) ¶							&& parser.isUnsignedVariable((Vector<Character>) nextChild.getUserObject())) {¶					}¶					else {¶						timesVector.add(' ');¶						timesVector.add('\\');¶						timesVector.add('t');¶						timesVector.add('i');¶						timesVector.add('m');¶						timesVector.add('e');¶						timesVector.add('s');¶						timesVector.add(' ');¶						childrenVector = timesVector;¶					}¶				}¶				¶				else if (isSqrt((Vector<Character>) child.getUserObject()) ¶						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('\\');¶					fracVector.add('s');¶					fracVector.add('q');¶					fracVector.add('r');¶					fracVector.add('t');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i += 3;¶					childrenVector = fracVector;¶				}¶				¶				else if (isExp((Vector<Character>) child.getUserObject())¶						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('e');¶					fracVector.add('^');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i += 3;¶					childrenVector = fracVector;¶				}¶				¶				¶				else {¶					childrenVector = concat(childrenVector, (Vector<Character>) child.getUserObject());¶				}¶			}¶			else {¶				childrenVector = concat(childrenVector, getTexVector(child));¶			}¶		}¶		return childrenVector;	¶	}¶	¶	public Vector<Character> concat(Vector<Character> vectorA, Vector<Character> vectorB){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : vectorA) {¶			newVector.add(c);¶		}¶		for (Character c : vectorB) {¶			newVector.add(c);¶		}¶		return newVector;¶	}¶	¶	public boolean isSqrt(Vector<Character> aVector) {¶		if (aVector.size() != 4) return false;¶		return aVector.get(0) == 's' && aVector.get(1) == 'q' && aVector.get(2) == 'r' && aVector.get(3) == 't';¶	}¶	¶	public boolean isExp(Vector<Character> aVector) {¶		if (aVector.size() != 3) return false;¶		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';¶	}¶	¶¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1119" _type="MoveCaretCommand" caretOffset="4695" date="Wed Apr 21 09:50:10 EDT 2021" docOffset="4744" starttimestamp="1619011563329" timestamp="1447251" />
  <Command __id="1121" _type="InsertStringCommand" date="Wed Apr 21 09:50:24 EDT 2021" starttimestamp="1619011563329" timestamp="1461494" timestamp2="1461494">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1123" _type="InsertStringCommand" date="Wed Apr 21 09:50:26 EDT 2021" starttimestamp="1619011563329" timestamp="1463024" timestamp2="1463024">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1125" _type="InsertStringCommand" date="Wed Apr 21 09:50:26 EDT 2021" starttimestamp="1619011563329" timestamp="1463152" timestamp2="1463152">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1127" _type="InsertStringCommand" date="Wed Apr 21 09:50:26 EDT 2021" starttimestamp="1619011563329" timestamp="1463254" timestamp2="1463254">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1129" _type="InsertStringCommand" date="Wed Apr 21 09:50:26 EDT 2021" starttimestamp="1619011563329" timestamp="1463371" timestamp2="1463371">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1131" _type="InsertStringCommand" date="Wed Apr 21 09:50:26 EDT 2021" starttimestamp="1619011563329" timestamp="1463480" timestamp2="1463480">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1133" _type="InsertStringCommand" date="Wed Apr 21 09:50:26 EDT 2021" starttimestamp="1619011563329" timestamp="1463623" timestamp2="1463623">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1135" _type="InsertStringCommand" date="Wed Apr 21 09:50:27 EDT 2021" starttimestamp="1619011563329" timestamp="1464276" timestamp2="1464276">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1136" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 09:50:28 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="1465565" />
  <Command __id="1139" _type="ShellCommand" date="Wed Apr 21 09:50:29 EDT 2021" starttimestamp="1619011563329" timestamp="1466200" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1140" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 09:50:29 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="1466237" />
  <Command __id="1141" _type="ShellCommand" date="Wed Apr 21 09:50:30 EDT 2021" starttimestamp="1619011563329" timestamp="1467412" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1142" _type="SelectTextCommand" caretOffset="4709" date="Wed Apr 21 09:50:31 EDT 2021" end="4709" start="4707" starttimestamp="1619011563329" timestamp="1468377" />
  <Command __id="1143" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Wed Apr 21 09:50:32 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="1468951" />
  <Command __id="1144" _type="EclipseCommand" commandID="AUTOGEN:::org.eclipse.jdt.internal.ui.CompilationUnitEditor.ruler.actions/org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction" date="Wed Apr 21 09:50:32 EDT 2021" starttimestamp="1619011563329" timestamp="1468989" />
  <Command __id="1145" _type="AssistCommand" assist_type="QUICK_ASSIST" auto_activated="false" date="Wed Apr 21 09:50:32 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="1469025" />
  <Command __id="1146" _type="SelectTextCommand" caretOffset="4697" date="Wed Apr 21 09:50:32 EDT 2021" end="4707" start="4697" starttimestamp="1619011563329" timestamp="1469662" />
  <Command __id="1148" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:50:33 EDT 2021" starttimestamp="1619011563329" timestamp="1470073" />
  <Command __id="1150" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:50:33 EDT 2021" starttimestamp="1619011563329" timestamp="1470244" />
  <Command __id="1151" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:50:33 EDT 2021" starttimestamp="1619011563329" timestamp="1470575" />
  <Command __id="1152" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:50:34 EDT 2021" starttimestamp="1619011563329" timestamp="1470721" />
  <Command __id="1153" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:50:34 EDT 2021" starttimestamp="1619011563329" timestamp="1470738" />
  <Command __id="1154" _type="MoveCaretCommand" caretOffset="4785" date="Wed Apr 21 09:50:34 EDT 2021" docOffset="4834" starttimestamp="1619011563329" timestamp="1471453" />
  <Command __id="1156" _type="InsertStringCommand" date="Wed Apr 21 09:50:35 EDT 2021" starttimestamp="1619011563329" timestamp="1472015" timestamp2="1472015">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1158" _type="InsertStringCommand" date="Wed Apr 21 09:50:35 EDT 2021" starttimestamp="1619011563329" timestamp="1472372" timestamp2="1472372">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1160" _type="InsertStringCommand" date="Wed Apr 21 09:50:35 EDT 2021" starttimestamp="1619011563329" timestamp="1472564" timestamp2="1472564">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1162" _type="InsertStringCommand" date="Wed Apr 21 09:50:35 EDT 2021" starttimestamp="1619011563329" timestamp="1472611" timestamp2="1472611">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1164" _type="InsertStringCommand" date="Wed Apr 21 09:50:36 EDT 2021" starttimestamp="1619011563329" timestamp="1472782" timestamp2="1472782">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1166" _type="InsertStringCommand" date="Wed Apr 21 09:50:36 EDT 2021" starttimestamp="1619011563329" timestamp="1472830" timestamp2="1472830">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1168" _type="InsertStringCommand" date="Wed Apr 21 09:50:36 EDT 2021" starttimestamp="1619011563329" timestamp="1473015" timestamp2="1473015">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1170" _type="InsertStringCommand" date="Wed Apr 21 09:50:36 EDT 2021" starttimestamp="1619011563329" timestamp="1473603" timestamp2="1473603">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1171" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 09:50:36 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="1473604" />
  <Command __id="1176" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 09:50:38 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="1474694" />
  <Command __id="1178" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:50:38 EDT 2021" starttimestamp="1619011563329" timestamp="1475291" />
  <Command __id="1180" _type="InsertStringCommand" date="Wed Apr 21 09:50:39 EDT 2021" starttimestamp="1619011563329" timestamp="1475708" timestamp2="1475708">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1181" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 09:50:39 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="1475709" />
  <Command __id="1190" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 09:50:40 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="1477088" />
  <Command __id="1192" _type="InsertStringCommand" date="Wed Apr 21 09:50:40 EDT 2021" starttimestamp="1619011563329" timestamp="1477096" timestamp2="1477096">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1193" _type="InsertStringCommand" date="Wed Apr 21 09:50:40 EDT 2021" starttimestamp="1619011563329" timestamp="1477109" timestamp2="1477109">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1194" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:50:41 EDT 2021" starttimestamp="1619011563329" timestamp="1477945" />
  <Command __id="1195" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:50:41 EDT 2021" starttimestamp="1619011563329" timestamp="1478104" />
  <Command __id="1197" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:50:41 EDT 2021" starttimestamp="1619011563329" timestamp="1478417" />
  <Command __id="1198" _type="SelectTextCommand" caretOffset="4702" date="Wed Apr 21 09:50:44 EDT 2021" end="4716" start="4702" starttimestamp="1619011563329" timestamp="1481003" />
  <Command __id="1199" _type="CopyCommand" date="Wed Apr 21 09:50:44 EDT 2021" starttimestamp="1619011563329" timestamp="1481153" />
  <Command __id="1200" _type="MoveCaretCommand" caretOffset="4811" date="Wed Apr 21 09:50:45 EDT 2021" docOffset="4860" starttimestamp="1619011563329" timestamp="1481752" />
  <Command __id="1202" _type="PasteCommand" date="Wed Apr 21 09:50:45 EDT 2021" starttimestamp="1619011563329" timestamp="1482012" />
  <Command __id="1203" _type="MoveCaretCommand" caretOffset="4826" date="Wed Apr 21 09:50:45 EDT 2021" docOffset="4875" starttimestamp="1619011563329" timestamp="1482443" />
  <Command __id="1205" _type="InsertStringCommand" date="Wed Apr 21 09:50:46 EDT 2021" starttimestamp="1619011563329" timestamp="1483046" timestamp2="1483046">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1206" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:50:46 EDT 2021" starttimestamp="1619011563329" timestamp="1483221" />
  <Command __id="1207" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:50:46 EDT 2021" starttimestamp="1619011563329" timestamp="1483368" />
  <Command __id="1208" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:50:46 EDT 2021" starttimestamp="1619011563329" timestamp="1483384" />
  <Command __id="1209" _type="MoveCaretCommand" caretOffset="4394" date="Wed Apr 21 09:50:47 EDT 2021" docOffset="4443" starttimestamp="1619011563329" timestamp="1483769" />
  <Command __id="1210" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:50:51 EDT 2021" starttimestamp="1619011563329" timestamp="1488295" />
  <Command __id="1211" _type="RunCommand" date="Wed Apr 21 09:50:51 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1488375" type="Run" />
  <Command __id="1212" _type="ShellCommand" date="Wed Apr 21 09:50:52 EDT 2021" starttimestamp="1619011563329" timestamp="1489157" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1213" _type="ConsoleOutput" date="Wed Apr 21 09:50:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1489296" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a, b]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1214" _type="ConsoleOutput" date="Wed Apr 21 09:50:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1489398" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1215" _type="ConsoleOutput" date="Wed Apr 21 09:50:55 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1492305" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1216" _type="ConsoleOutput" date="Wed Apr 21 09:50:58 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1495295" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Testing Expression [a]¶")]]]></diff>
  </Command>
  <Command __id="1217" _type="ShellCommand" date="Wed Apr 21 09:51:00 EDT 2021" starttimestamp="1619011563329" timestamp="1496888" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1218" _type="RunCommand" date="Wed Apr 21 09:51:00 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1497063" type="Run" />
  <Command __id="1219" _type="RunCommand" date="Wed Apr 21 09:51:00 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1497063" type="Run" />
  <Command __id="1220" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:51:14 EDT 2021" starttimestamp="1619011563329" timestamp="1511028" />
  <Command __id="1221" _type="RunCommand" date="Wed Apr 21 09:51:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1511178" type="Run" />
  <Command __id="1222" _type="RunCommand" date="Wed Apr 21 09:51:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1511178" type="Run" />
  <Command __id="1223" _type="ShellCommand" date="Wed Apr 21 09:51:15 EDT 2021" starttimestamp="1619011563329" timestamp="1511972" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1224" _type="ConsoleOutput" date="Wed Apr 21 09:51:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1512112" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1225" _type="ConsoleOutput" date="Wed Apr 21 09:51:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1512215" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1226" _type="ConsoleOutput" date="Wed Apr 21 09:51:18 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1515241" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, s]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a, s]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1227" _type="ConsoleOutput" date="Wed Apr 21 09:51:18 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1515407" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a, s]"), Diff(INSERT,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="1120" _type="Insert" date="Wed Apr 21 09:50:24 EDT 2021" docASTNodeCount="969" docActiveCodeLength="5683" docExpressionCount="668" docLength="5683" length="14" offset="4744" repeat="8" starttimestamp="1619011563329" timestamp="1461480" timestamp2="1464272">
    <text><![CDATA[
					System.]]></text>
  </DocumentChange>
  <DocumentChange __id="1137" _type="Delete" date="Wed Apr 21 09:50:29 EDT 2021" docASTNodeCount="969" docActiveCodeLength="5681" docExpressionCount="666" docLength="5681" endLine="125" length="2" offset="4756" repeat="2" startLine="125" starttimestamp="1619011563329" timestamp="1465957" timestamp2="1466075">
    <text><![CDATA[m.]]></text>
  </DocumentChange>
  <DocumentChange __id="1147" _type="Delete" date="Wed Apr 21 09:50:33 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5669" docExpressionCount="666" docLength="5669" endLine="125" length="12" offset="4744" repeat="2" startLine="124" starttimestamp="1619011563329" timestamp="1470070" timestamp2="1470231">
    <text><![CDATA[
					Syste]]></text>
  </DocumentChange>
  <DocumentChange __id="1155" _type="Insert" date="Wed Apr 21 09:50:35 EDT 2021" docASTNodeCount="971" docActiveCodeLength="5687" docExpressionCount="669" docLength="5687" length="18" offset="4834" repeat="12" starttimestamp="1619011563329" timestamp="1472004" timestamp2="1474688">
    <text><![CDATA[
					System.outp]]></text>
  </DocumentChange>
  <DocumentChange __id="1177" _type="Delete" date="Wed Apr 21 09:50:38 EDT 2021" docASTNodeCount="971" docActiveCodeLength="5686" docExpressionCount="669" docLength="5686" endLine="126" length="1" offset="4851" startLine="126" starttimestamp="1619011563329" timestamp="1475289">
    <text><![CDATA[p]]></text>
  </DocumentChange>
  <DocumentChange __id="1179" _type="Insert" date="Wed Apr 21 09:50:39 EDT 2021" docASTNodeCount="973" docActiveCodeLength="5697" docExpressionCount="671" docLength="5697" length="11" offset="4851" repeat="10" starttimestamp="1619011563329" timestamp="1475704" timestamp2="1477093">
    <text><![CDATA[.println*()]]></text>
  </DocumentChange>
  <DocumentChange __id="1196" _type="Delete" date="Wed Apr 21 09:50:41 EDT 2021" docASTNodeCount="973" docActiveCodeLength="5696" docExpressionCount="671" docLength="5696" endLine="126" length="1" offset="4859" startLine="126" starttimestamp="1619011563329" timestamp="1478415">
    <text><![CDATA[*]]></text>
  </DocumentChange>
  <DocumentChange __id="1201" _type="Insert" date="Wed Apr 21 09:50:45 EDT 2021" docASTNodeCount="974" docActiveCodeLength="5710" docExpressionCount="672" docLength="5710" length="14" offset="4860" starttimestamp="1619011563329" timestamp="1482004">
    <text><![CDATA[childrenVector]]></text>
  </DocumentChange>
  <DocumentChange __id="1204" _type="Insert" date="Wed Apr 21 09:50:46 EDT 2021" docASTNodeCount="974" docActiveCodeLength="5711" docExpressionCount="672" docLength="5711" length="1" offset="4875" starttimestamp="1619011563329" timestamp="1483041">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <Command __id="1228" _type="ShellCommand" date="Wed Apr 21 09:51:26 EDT 2021" starttimestamp="1619011563329" timestamp="1523023" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1229" _type="SelectTextCommand" caretOffset="4689" date="Wed Apr 21 09:51:27 EDT 2021" end="4834" start="4689" starttimestamp="1619011563329" timestamp="1524010" />
  <Command __id="1231" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:51:28 EDT 2021" starttimestamp="1619011563329" timestamp="1525050" />
  <Command __id="1232" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:51:28 EDT 2021" starttimestamp="1619011563329" timestamp="1525446" />
  <Command __id="1233" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:51:28 EDT 2021" starttimestamp="1619011563329" timestamp="1525593" />
  <Command __id="1234" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:51:28 EDT 2021" starttimestamp="1619011563329" timestamp="1525610" />
  <DocumentChange __id="1230" _type="Delete" date="Wed Apr 21 09:51:28 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5566" docExpressionCount="655" docLength="5566" endLine="127" length="145" offset="4738" startLine="124" starttimestamp="1619011563329" timestamp="1525040">
    <text><![CDATA[else {
					childrenVector = concat(childrenVector, (Vector<Character>) child.getUserObject());
					System.out.println(childrenVector);
				}]]></text>
  </DocumentChange>
  <Command __id="1235" _type="MoveCaretCommand" caretOffset="710" date="Wed Apr 21 09:51:32 EDT 2021" docOffset="759" starttimestamp="1619011563329" timestamp="1529476" />
  <Command __id="1237" _type="InsertStringCommand" date="Wed Apr 21 09:51:39 EDT 2021" starttimestamp="1619011563329" timestamp="1536462" timestamp2="1536462">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1239" _type="InsertStringCommand" date="Wed Apr 21 09:51:40 EDT 2021" starttimestamp="1619011563329" timestamp="1536759" timestamp2="1536759">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1241" _type="InsertStringCommand" date="Wed Apr 21 09:51:40 EDT 2021" starttimestamp="1619011563329" timestamp="1536825" timestamp2="1536825">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1243" _type="InsertStringCommand" date="Wed Apr 21 09:51:40 EDT 2021" starttimestamp="1619011563329" timestamp="1536951" timestamp2="1536951">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1245" _type="InsertStringCommand" date="Wed Apr 21 09:51:41 EDT 2021" starttimestamp="1619011563329" timestamp="1537972" timestamp2="1537972">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1246" _type="InsertStringCommand" date="Wed Apr 21 09:51:41 EDT 2021" starttimestamp="1619011563329" timestamp="1538018" timestamp2="1538018">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1248" _type="InsertStringCommand" date="Wed Apr 21 09:51:41 EDT 2021" starttimestamp="1619011563329" timestamp="1538409" timestamp2="1538409">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1250" _type="InsertStringCommand" date="Wed Apr 21 09:51:41 EDT 2021" starttimestamp="1619011563329" timestamp="1538471" timestamp2="1538471">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="1251" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:51:42 EDT 2021" starttimestamp="1619011563329" timestamp="1538850" />
  <Command __id="1253" _type="InsertStringCommand" date="Wed Apr 21 09:51:42 EDT 2021" starttimestamp="1619011563329" timestamp="1539096" timestamp2="1539096">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1254" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:51:42 EDT 2021" starttimestamp="1619011563329" timestamp="1539360" />
  <Command __id="1255" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:51:42 EDT 2021" starttimestamp="1619011563329" timestamp="1539506" />
  <Command __id="1256" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:51:42 EDT 2021" starttimestamp="1619011563329" timestamp="1539523" />
  <Command __id="1257" _type="MoveCaretCommand" caretOffset="743" date="Wed Apr 21 09:51:43 EDT 2021" docOffset="792" starttimestamp="1619011563329" timestamp="1540642" />
  <Command __id="1259" _type="InsertStringCommand" date="Wed Apr 21 09:51:44 EDT 2021" starttimestamp="1619011563329" timestamp="1540957" timestamp2="1540957">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1261" _type="InsertStringCommand" date="Wed Apr 21 09:51:44 EDT 2021" starttimestamp="1619011563329" timestamp="1541284" timestamp2="1541284">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1263" _type="InsertStringCommand" date="Wed Apr 21 09:51:44 EDT 2021" starttimestamp="1619011563329" timestamp="1541359" timestamp2="1541359">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1265" _type="InsertStringCommand" date="Wed Apr 21 09:51:44 EDT 2021" starttimestamp="1619011563329" timestamp="1541424" timestamp2="1541424">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1267" _type="InsertStringCommand" date="Wed Apr 21 09:51:44 EDT 2021" starttimestamp="1619011563329" timestamp="1541557" timestamp2="1541557">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1268" _type="MoveCaretCommand" caretOffset="710" date="Wed Apr 21 09:51:45 EDT 2021" docOffset="759" starttimestamp="1619011563329" timestamp="1542233" />
  <Command __id="1269" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:51:45 EDT 2021" starttimestamp="1619011563329" timestamp="1542546" />
  <Command __id="1270" _type="MoveCaretCommand" caretOffset="730" date="Wed Apr 21 09:51:46 EDT 2021" docOffset="779" starttimestamp="1619011563329" timestamp="1543229" />
  <Command __id="1271" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:51:46 EDT 2021" starttimestamp="1619011563329" timestamp="1543311" />
  <Command __id="1272" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:51:46 EDT 2021" starttimestamp="1619011563329" timestamp="1543329" />
  <Command __id="1273" _type="SelectTextCommand" caretOffset="752" date="Wed Apr 21 09:51:57 EDT 2021" end="795" start="752" starttimestamp="1619011563329" timestamp="1553968" />
  <Command __id="1274" _type="MoveCaretCommand" caretOffset="756" date="Wed Apr 21 09:51:57 EDT 2021" docOffset="805" starttimestamp="1619011563329" timestamp="1554234" />
  <Command __id="1275" _type="MoveCaretCommand" caretOffset="870" date="Wed Apr 21 09:51:59 EDT 2021" docOffset="919" starttimestamp="1619011563329" timestamp="1555711" />
  <Command __id="1276" _type="SelectTextCommand" caretOffset="753" date="Wed Apr 21 09:52:04 EDT 2021" end="795" start="753" starttimestamp="1619011563329" timestamp="1561088" />
  <Command __id="1277" _type="MoveCaretCommand" caretOffset="756" date="Wed Apr 21 09:52:04 EDT 2021" docOffset="805" starttimestamp="1619011563329" timestamp="1561301" />
  <Command __id="1278" _type="SelectTextCommand" caretOffset="778" date="Wed Apr 21 09:52:17 EDT 2021" end="778" start="773" starttimestamp="1619011563329" timestamp="1573705" />
  <Command __id="1279" _type="MoveCaretCommand" caretOffset="730" date="Wed Apr 21 09:52:17 EDT 2021" docOffset="779" starttimestamp="1619011563329" timestamp="1574211" />
  <Command __id="1280" _type="MoveCaretCommand" caretOffset="720" date="Wed Apr 21 09:52:17 EDT 2021" docOffset="769" starttimestamp="1619011563329" timestamp="1574501" />
  <Command __id="1281" _type="SelectTextCommand" caretOffset="716" date="Wed Apr 21 09:52:33 EDT 2021" end="747" start="716" starttimestamp="1619011563329" timestamp="1590175" />
  <Command __id="1282" _type="MoveCaretCommand" caretOffset="730" date="Wed Apr 21 09:52:35 EDT 2021" docOffset="779" starttimestamp="1619011563329" timestamp="1592137" />
  <Command __id="1283" _type="SelectTextCommand" caretOffset="716" date="Wed Apr 21 09:52:41 EDT 2021" end="750" start="716" starttimestamp="1619011563329" timestamp="1597715" />
  <Command __id="1284" _type="MoveCaretCommand" caretOffset="746" date="Wed Apr 21 09:52:42 EDT 2021" docOffset="795" starttimestamp="1619011563329" timestamp="1598762" />
  <DocumentChange __id="1236" _type="Insert" date="Wed Apr 21 09:51:39 EDT 2021" docASTNodeCount="954" docActiveCodeLength="5593" docExpressionCount="656" docLength="5593" length="27" offset="759" repeat="8" starttimestamp="1619011563329" timestamp="1536452" timestamp2="1539087">
    <text><![CDATA[
				if () {
					
				}]]></text>
  </DocumentChange>
  <DocumentChange __id="1258" _type="Insert" date="Wed Apr 21 09:51:44 EDT 2021" docASTNodeCount="957" docActiveCodeLength="5596" docExpressionCount="658" docLength="5596" length="3" offset="792" repeat="3" starttimestamp="1619011563329" timestamp="1540953" timestamp2="1541356">
    <text><![CDATA[els]]></text>
  </DocumentChange>
  <DocumentChange __id="1264" _type="Replace" date="Wed Apr 21 09:51:44 EDT 2021" docASTNodeCount="957" docActiveCodeLength="5597" docExpressionCount="658" docLength="5597" endLine="27" insertionLength="8" int_docASTNodeCount="954" int_docActiveCodeLength="5589" int_docExpressionCount="656" int_docLength="5589" length="7" offset="788" startLine="27" starttimestamp="1619011563329" timestamp="1541418">
    <deletedText><![CDATA[				els]]></deletedText>
    <insertedText><![CDATA[				else]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1266" _type="Insert" date="Wed Apr 21 09:51:44 EDT 2021" docASTNodeCount="954" docActiveCodeLength="5598" docExpressionCount="656" docLength="5598" length="1" offset="796" starttimestamp="1619011563329" timestamp="1541552">
    <text><![CDATA[ ]]></text>
  </DocumentChange>
  <Command __id="1285" _type="SelectTextCommand" caretOffset="716" date="Wed Apr 21 09:52:43 EDT 2021" end="748" start="716" starttimestamp="1619011563329" timestamp="1599915" />
  <Command __id="1287" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:52:44 EDT 2021" starttimestamp="1619011563329" timestamp="1601130" />
  <Command __id="1288" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:52:44 EDT 2021" starttimestamp="1619011563329" timestamp="1601593" />
  <Command __id="1289" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:52:45 EDT 2021" starttimestamp="1619011563329" timestamp="1601707" />
  <Command __id="1290" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:52:45 EDT 2021" starttimestamp="1619011563329" timestamp="1601721" />
  <DocumentChange __id="1286" _type="Delete" date="Wed Apr 21 09:52:44 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5566" docExpressionCount="655" docLength="5566" endLine="27" length="32" offset="765" startLine="24" starttimestamp="1619011563329" timestamp="1601121">
    <text><![CDATA[if () {
					
				}
				else ]]></text>
  </DocumentChange>
  <DocumentChange __id="1292" _type="Insert" date="Wed Apr 21 09:52:46 EDT 2021" docASTNodeCount="953" docActiveCodeLength="5576" docExpressionCount="656" docLength="5576" length="10" offset="721" repeat="5" starttimestamp="1619011563329" timestamp="1603633" timestamp2="1604769">
    <text><![CDATA[
			if ()]]></text>
  </DocumentChange>
  <Command __id="1291" _type="MoveCaretCommand" caretOffset="672" date="Wed Apr 21 09:52:46 EDT 2021" docOffset="721" starttimestamp="1619011563329" timestamp="1602879" />
  <Command __id="1293" _type="InsertStringCommand" date="Wed Apr 21 09:52:46 EDT 2021" starttimestamp="1619011563329" timestamp="1603646" timestamp2="1603646">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1295" _type="InsertStringCommand" date="Wed Apr 21 09:52:47 EDT 2021" starttimestamp="1619011563329" timestamp="1604317" timestamp2="1604317">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1297" _type="InsertStringCommand" date="Wed Apr 21 09:52:47 EDT 2021" starttimestamp="1619011563329" timestamp="1604381" timestamp2="1604381">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1299" _type="InsertStringCommand" date="Wed Apr 21 09:52:47 EDT 2021" starttimestamp="1619011563329" timestamp="1604503" timestamp2="1604503">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1301" _type="InsertStringCommand" date="Wed Apr 21 09:52:48 EDT 2021" starttimestamp="1619011563329" timestamp="1604773" timestamp2="1604773">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1302" _type="InsertStringCommand" date="Wed Apr 21 09:52:48 EDT 2021" starttimestamp="1619011563329" timestamp="1604847" timestamp2="1604847">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1303" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:52:48 EDT 2021" starttimestamp="1619011563329" timestamp="1605352" />
  <Command __id="1305" _type="InsertStringCommand" date="Wed Apr 21 09:52:53 EDT 2021" starttimestamp="1619011563329" timestamp="1609878" timestamp2="1609878">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1307" _type="InsertStringCommand" date="Wed Apr 21 09:52:53 EDT 2021" starttimestamp="1619011563329" timestamp="1610051" timestamp2="1610051">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1309" _type="InsertStringCommand" date="Wed Apr 21 09:52:53 EDT 2021" starttimestamp="1619011563329" timestamp="1610237" timestamp2="1610237">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1311" _type="InsertStringCommand" date="Wed Apr 21 09:52:53 EDT 2021" starttimestamp="1619011563329" timestamp="1610313" timestamp2="1610313">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1313" _type="InsertStringCommand" date="Wed Apr 21 09:52:54 EDT 2021" starttimestamp="1619011563329" timestamp="1611161" timestamp2="1611161">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1315" _type="InsertStringCommand" date="Wed Apr 21 09:52:54 EDT 2021" starttimestamp="1619011563329" timestamp="1611381" timestamp2="1611381">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1317" _type="InsertStringCommand" date="Wed Apr 21 09:52:54 EDT 2021" starttimestamp="1619011563329" timestamp="1611472" timestamp2="1611472">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1319" _type="InsertStringCommand" date="Wed Apr 21 09:52:54 EDT 2021" starttimestamp="1619011563329" timestamp="1611546" timestamp2="1611546">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1321" _type="InsertStringCommand" date="Wed Apr 21 09:52:55 EDT 2021" starttimestamp="1619011563329" timestamp="1612113" timestamp2="1612113">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1322" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 09:52:55 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="1612115" />
  <Command __id="1323" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 09:53:02 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="1618943" />
  <Command __id="1324" _type="MoveCaretCommand" caretOffset="392" date="Wed Apr 21 09:53:02 EDT 2021" docOffset="441" starttimestamp="1619011563329" timestamp="1618973" />
  <DocumentChange __id="1304" _type="Insert" date="Wed Apr 21 09:52:53 EDT 2021" docASTNodeCount="955" docActiveCodeLength="5585" docExpressionCount="657" docLength="5585" length="9" offset="730" repeat="9" starttimestamp="1619011563329" timestamp="1609872" timestamp2="1612109">
    <text><![CDATA[thisNode.]]></text>
  </DocumentChange>
  <Command __id="1325" _type="MoveCaretCommand" caretOffset="690" date="Wed Apr 21 09:53:03 EDT 2021" docOffset="739" starttimestamp="1619011563329" timestamp="1620172" />
  <DocumentChange __id="1326" _type="Delete" date="Wed Apr 21 09:53:07 EDT 2021" docASTNodeCount="953" docActiveCodeLength="5584" docExpressionCount="656" docLength="5584" endLine="23" length="1" offset="738" startLine="23" starttimestamp="1619011563329" timestamp="1624508">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <Command __id="1327" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:07 EDT 2021" starttimestamp="1619011563329" timestamp="1624511" />
  <Command __id="1329" _type="InsertStringCommand" date="Wed Apr 21 09:53:08 EDT 2021" starttimestamp="1619011563329" timestamp="1624858" timestamp2="1624858">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1330" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 09:53:08 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="1624860" />
  <Command __id="1331" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 09:53:10 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="1627658" />
  <Command __id="1332" _type="MoveCaretCommand" caretOffset="527" date="Wed Apr 21 09:53:11 EDT 2021" docOffset="576" starttimestamp="1619011563329" timestamp="1627704" />
  <Command __id="1333" _type="MoveCaretCommand" caretOffset="690" date="Wed Apr 21 09:53:12 EDT 2021" docOffset="739" starttimestamp="1619011563329" timestamp="1628878" />
  <Command __id="1334" _type="SelectTextCommand" caretOffset="677" date="Wed Apr 21 09:53:15 EDT 2021" end="691" start="677" starttimestamp="1619011563329" timestamp="1631974" />
  <Command __id="1336" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:15 EDT 2021" starttimestamp="1619011563329" timestamp="1632630" />
  <Command __id="1338" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:16 EDT 2021" starttimestamp="1619011563329" timestamp="1632813" />
  <Command __id="1340" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:16 EDT 2021" starttimestamp="1619011563329" timestamp="1632980" />
  <Command __id="1342" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:16 EDT 2021" starttimestamp="1619011563329" timestamp="1633244" />
  <Command __id="1344" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:16 EDT 2021" starttimestamp="1619011563329" timestamp="1633575" />
  <Command __id="1345" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:53:17 EDT 2021" starttimestamp="1619011563329" timestamp="1633933" />
  <Command __id="1346" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:53:17 EDT 2021" starttimestamp="1619011563329" timestamp="1634030" />
  <Command __id="1347" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:53:17 EDT 2021" starttimestamp="1619011563329" timestamp="1634044" />
  <Command __id="1348" _type="SelectTextCommand" caretOffset="1350" date="Wed Apr 21 09:53:19 EDT 2021" end="1350" start="535" starttimestamp="1619011563329" timestamp="1636515" />
  <Command __id="1349" _type="MoveCaretCommand" caretOffset="649" date="Wed Apr 21 09:53:20 EDT 2021" docOffset="698" starttimestamp="1619011563329" timestamp="1637393" />
  <Command __id="1350" _type="MoveCaretCommand" caretOffset="588" date="Wed Apr 21 09:53:21 EDT 2021" docOffset="637" starttimestamp="1619011563329" timestamp="1637744" />
  <DocumentChange __id="1328" _type="Insert" date="Wed Apr 21 09:53:08 EDT 2021" docASTNodeCount="955" docActiveCodeLength="5585" docExpressionCount="657" docLength="5585" length="1" offset="738" starttimestamp="1619011563329" timestamp="1624854">
    <text><![CDATA[.]]></text>
  </DocumentChange>
  <DocumentChange __id="1335" _type="Delete" date="Wed Apr 21 09:53:15 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5566" docExpressionCount="655" docLength="5566" endLine="23" length="19" offset="721" repeat="5" startLine="22" starttimestamp="1619011563329" timestamp="1632626" timestamp2="1633567">
    <text><![CDATA[
			if (thisNode.)]]></text>
  </DocumentChange>
  <Command __id="1351" _type="MoveCaretCommand" caretOffset="4779" date="Wed Apr 21 09:53:30 EDT 2021" docOffset="4828" starttimestamp="1619011563329" timestamp="1646919" />
  <Command __id="1352" _type="MoveCaretCommand" caretOffset="4784" date="Wed Apr 21 09:53:30 EDT 2021" docOffset="4833" starttimestamp="1619011563329" timestamp="1647366" />
  <DocumentChange __id="1353" _type="Insert" date="Wed Apr 21 09:53:37 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5578" docExpressionCount="655" docLength="5578" length="12" offset="4833" repeat="9" starttimestamp="1619011563329" timestamp="1654103" timestamp2="1656228">
    <text><![CDATA[
		if child]]></text>
  </DocumentChange>
  <Command __id="1354" _type="InsertStringCommand" date="Wed Apr 21 09:53:37 EDT 2021" starttimestamp="1619011563329" timestamp="1654115" timestamp2="1654115">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1356" _type="InsertStringCommand" date="Wed Apr 21 09:53:38 EDT 2021" starttimestamp="1619011563329" timestamp="1654806" timestamp2="1654806">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1358" _type="InsertStringCommand" date="Wed Apr 21 09:53:38 EDT 2021" starttimestamp="1619011563329" timestamp="1654839" timestamp2="1654839">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="1360" _type="InsertStringCommand" date="Wed Apr 21 09:53:38 EDT 2021" starttimestamp="1619011563329" timestamp="1654986" timestamp2="1654986">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1362" _type="InsertStringCommand" date="Wed Apr 21 09:53:38 EDT 2021" starttimestamp="1619011563329" timestamp="1655625" timestamp2="1655625">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1364" _type="InsertStringCommand" date="Wed Apr 21 09:53:39 EDT 2021" starttimestamp="1619011563329" timestamp="1655772" timestamp2="1655772">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1366" _type="InsertStringCommand" date="Wed Apr 21 09:53:39 EDT 2021" starttimestamp="1619011563329" timestamp="1655984" timestamp2="1655984">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1368" _type="InsertStringCommand" date="Wed Apr 21 09:53:39 EDT 2021" starttimestamp="1619011563329" timestamp="1656160" timestamp2="1656160">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1370" _type="InsertStringCommand" date="Wed Apr 21 09:53:39 EDT 2021" starttimestamp="1619011563329" timestamp="1656232" timestamp2="1656232">
    <data><![CDATA[d]]></data>
  </Command>
  <DocumentChange __id="1371" _type="Delete" date="Wed Apr 21 09:53:39 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5573" docExpressionCount="655" docLength="5573" endLine="130" length="5" offset="4840" repeat="5" startLine="130" starttimestamp="1619011563329" timestamp="1656476" timestamp2="1657004">
    <text><![CDATA[child]]></text>
  </DocumentChange>
  <Command __id="1372" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:39 EDT 2021" starttimestamp="1619011563329" timestamp="1656478" />
  <Command __id="1374" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:39 EDT 2021" starttimestamp="1619011563329" timestamp="1656624" />
  <Command __id="1376" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:40 EDT 2021" starttimestamp="1619011563329" timestamp="1656754" />
  <Command __id="1378" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:40 EDT 2021" starttimestamp="1619011563329" timestamp="1656889" />
  <Command __id="1380" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:40 EDT 2021" starttimestamp="1619011563329" timestamp="1657006" />
  <Command __id="1382" _type="InsertStringCommand" date="Wed Apr 21 09:53:40 EDT 2021" starttimestamp="1619011563329" timestamp="1657619" timestamp2="1657619">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="1383" _type="InsertStringCommand" date="Wed Apr 21 09:53:40 EDT 2021" starttimestamp="1619011563329" timestamp="1657664" timestamp2="1657664">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="1384" _type="SelectTextCommand" caretOffset="555" date="Wed Apr 21 09:53:45 EDT 2021" end="579" start="555" starttimestamp="1619011563329" timestamp="1662525" />
  <Command __id="1385" _type="CopyCommand" date="Wed Apr 21 09:53:45 EDT 2021" starttimestamp="1619011563329" timestamp="1662664" />
  <DocumentChange __id="1381" _type="Insert" date="Wed Apr 21 09:53:40 EDT 2021" docASTNodeCount="953" docActiveCodeLength="5575" docExpressionCount="656" docLength="5575" length="2" offset="4840" starttimestamp="1619011563329" timestamp="1657616">
    <text><![CDATA[()]]></text>
  </DocumentChange>
  <DocumentChange __id="1387" _type="Insert" date="Wed Apr 21 09:53:48 EDT 2021" docASTNodeCount="957" docActiveCodeLength="5604" docExpressionCount="660" docLength="5604" length="29" offset="4841" repeat="6" starttimestamp="1619011563329" timestamp="1665201" timestamp2="1666427">
    <text><![CDATA[thisNode.getChildCount() == 0]]></text>
  </DocumentChange>
  <DocumentChange __id="1400" _type="Insert" date="Wed Apr 21 09:53:50 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5619" docExpressionCount="661" docLength="5619" length="15" offset="4871" repeat="6" starttimestamp="1619011563329" timestamp="1667301" timestamp2="1669123">
    <text><![CDATA[ {
			chj
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1416" _type="Delete" date="Wed Apr 21 09:53:52 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5618" docExpressionCount="661" docLength="5618" endLine="131" length="1" offset="4880" startLine="131" starttimestamp="1619011563329" timestamp="1669646">
    <text><![CDATA[j]]></text>
  </DocumentChange>
  <Command __id="1386" _type="MoveCaretCommand" caretOffset="4792" date="Wed Apr 21 09:53:48 EDT 2021" docOffset="4841" starttimestamp="1619011563329" timestamp="1665051" />
  <Command __id="1388" _type="PasteCommand" date="Wed Apr 21 09:53:48 EDT 2021" starttimestamp="1619011563329" timestamp="1665211" />
  <Command __id="1390" _type="InsertStringCommand" date="Wed Apr 21 09:53:48 EDT 2021" starttimestamp="1619011563329" timestamp="1665575" timestamp2="1665575">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1392" _type="InsertStringCommand" date="Wed Apr 21 09:53:49 EDT 2021" starttimestamp="1619011563329" timestamp="1666067" timestamp2="1666067">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1394" _type="InsertStringCommand" date="Wed Apr 21 09:53:49 EDT 2021" starttimestamp="1619011563329" timestamp="1666200" timestamp2="1666200">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1396" _type="InsertStringCommand" date="Wed Apr 21 09:53:49 EDT 2021" starttimestamp="1619011563329" timestamp="1666299" timestamp2="1666299">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1398" _type="InsertStringCommand" date="Wed Apr 21 09:53:49 EDT 2021" starttimestamp="1619011563329" timestamp="1666430" timestamp2="1666430">
    <data><![CDATA[0]]></data>
  </Command>
  <Command __id="1399" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 09:53:50 EDT 2021" starttimestamp="1619011563329" timestamp="1666921" />
  <Command __id="1401" _type="InsertStringCommand" date="Wed Apr 21 09:53:50 EDT 2021" starttimestamp="1619011563329" timestamp="1667308" timestamp2="1667308">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="1403" _type="InsertStringCommand" date="Wed Apr 21 09:53:50 EDT 2021" starttimestamp="1619011563329" timestamp="1667370" timestamp2="1667370">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="1404" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 09:53:51 EDT 2021" starttimestamp="1619011563329" timestamp="1667740" />
  <Command __id="1406" _type="InsertStringCommand" date="Wed Apr 21 09:53:51 EDT 2021" starttimestamp="1619011563329" timestamp="1667962" timestamp2="1667962">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1407" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:53:51 EDT 2021" starttimestamp="1619011563329" timestamp="1668253" />
  <Command __id="1408" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:53:51 EDT 2021" starttimestamp="1619011563329" timestamp="1668358" />
  <Command __id="1409" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:53:51 EDT 2021" starttimestamp="1619011563329" timestamp="1668374" />
  <Command __id="1411" _type="InsertStringCommand" date="Wed Apr 21 09:53:52 EDT 2021" starttimestamp="1619011563329" timestamp="1668835" timestamp2="1668835">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1413" _type="InsertStringCommand" date="Wed Apr 21 09:53:52 EDT 2021" starttimestamp="1619011563329" timestamp="1669118" timestamp2="1669118">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1415" _type="InsertStringCommand" date="Wed Apr 21 09:53:52 EDT 2021" starttimestamp="1619011563329" timestamp="1669126" timestamp2="1669126">
    <data><![CDATA[j]]></data>
  </Command>
  <Command __id="1417" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:52 EDT 2021" starttimestamp="1619011563329" timestamp="1669649" />
  <Command __id="1419" _type="InsertStringCommand" date="Wed Apr 21 09:53:53 EDT 2021" starttimestamp="1619011563329" timestamp="1670038" timestamp2="1670038">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1421" _type="InsertStringCommand" date="Wed Apr 21 09:53:53 EDT 2021" starttimestamp="1619011563329" timestamp="1670247" timestamp2="1670247">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="1423" _type="InsertStringCommand" date="Wed Apr 21 09:53:53 EDT 2021" starttimestamp="1619011563329" timestamp="1670345" timestamp2="1670345">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1425" _type="InsertStringCommand" date="Wed Apr 21 09:53:54 EDT 2021" starttimestamp="1619011563329" timestamp="1671430" timestamp2="1671430">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1427" _type="InsertStringCommand" date="Wed Apr 21 09:53:54 EDT 2021" starttimestamp="1619011563329" timestamp="1671535" timestamp2="1671535">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1429" _type="InsertStringCommand" date="Wed Apr 21 09:53:54 EDT 2021" starttimestamp="1619011563329" timestamp="1671606" timestamp2="1671606">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1431" _type="InsertStringCommand" date="Wed Apr 21 09:53:55 EDT 2021" starttimestamp="1619011563329" timestamp="1672385" timestamp2="1672385">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="1433" _type="InsertStringCommand" date="Wed Apr 21 09:53:55 EDT 2021" starttimestamp="1619011563329" timestamp="1672590" timestamp2="1672590">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1435" _type="InsertStringCommand" date="Wed Apr 21 09:53:56 EDT 2021" starttimestamp="1619011563329" timestamp="1672776" timestamp2="1672776">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1437" _type="InsertStringCommand" date="Wed Apr 21 09:53:56 EDT 2021" starttimestamp="1619011563329" timestamp="1672899" timestamp2="1672899">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1439" _type="InsertStringCommand" date="Wed Apr 21 09:53:56 EDT 2021" starttimestamp="1619011563329" timestamp="1672912" timestamp2="1672912">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1441" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:53:56 EDT 2021" starttimestamp="1619011563329" timestamp="1673465" />
  <Command __id="1443" _type="InsertStringCommand" date="Wed Apr 21 09:53:57 EDT 2021" starttimestamp="1619011563329" timestamp="1673919" timestamp2="1673919">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1445" _type="InsertStringCommand" date="Wed Apr 21 09:53:57 EDT 2021" starttimestamp="1619011563329" timestamp="1673976" timestamp2="1673976">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1447" _type="InsertStringCommand" date="Wed Apr 21 09:53:57 EDT 2021" starttimestamp="1619011563329" timestamp="1674112" timestamp2="1674112">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="1449" _type="InsertStringCommand" date="Wed Apr 21 09:53:57 EDT 2021" starttimestamp="1619011563329" timestamp="1674277" timestamp2="1674277">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="1451" _type="InsertStringCommand" date="Wed Apr 21 09:53:57 EDT 2021" starttimestamp="1619011563329" timestamp="1674347" timestamp2="1674347">
    <data><![CDATA[ ]]></data>
  </Command>
  <DocumentChange __id="1418" _type="Insert" date="Wed Apr 21 09:53:53 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5629" docExpressionCount="661" docLength="5629" length="11" offset="4880" repeat="11" starttimestamp="1619011563329" timestamp="1670033" timestamp2="1672907">
    <text><![CDATA[ildrenVecty]]></text>
  </DocumentChange>
  <DocumentChange __id="1440" _type="Delete" date="Wed Apr 21 09:53:56 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5628" docExpressionCount="661" docLength="5628" endLine="131" length="1" offset="4890" startLine="131" starttimestamp="1619011563329" timestamp="1673463">
    <text><![CDATA[y]]></text>
  </DocumentChange>
  <DocumentChange __id="1442" _type="Insert" date="Wed Apr 21 09:53:57 EDT 2021" docASTNodeCount="958" docActiveCodeLength="5633" docExpressionCount="660" docLength="5633" length="5" offset="4890" repeat="5" starttimestamp="1619011563329" timestamp="1673915" timestamp2="1674344">
    <text><![CDATA[or = ]]></text>
  </DocumentChange>
  <Command __id="1452" _type="SelectTextCommand" caretOffset="4729" date="Wed Apr 21 09:54:38 EDT 2021" end="4772" start="4729" starttimestamp="1619011563329" timestamp="1715237" />
  <Command __id="1453" _type="CopyCommand" date="Wed Apr 21 09:54:38 EDT 2021" starttimestamp="1619011563329" timestamp="1715415" />
  <Command __id="1454" _type="MoveCaretCommand" caretOffset="4846" date="Wed Apr 21 09:54:39 EDT 2021" docOffset="4895" starttimestamp="1619011563329" timestamp="1715910" />
  <Command __id="1456" _type="PasteCommand" date="Wed Apr 21 09:54:39 EDT 2021" starttimestamp="1619011563329" timestamp="1716029" />
  <Command __id="1458" _type="InsertStringCommand" date="Wed Apr 21 09:54:40 EDT 2021" starttimestamp="1619011563329" timestamp="1717668" timestamp2="1717668">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1459" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:54:41 EDT 2021" starttimestamp="1619011563329" timestamp="1717898" />
  <Command __id="1460" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:54:41 EDT 2021" starttimestamp="1619011563329" timestamp="1717995" />
  <Command __id="1461" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:54:41 EDT 2021" starttimestamp="1619011563329" timestamp="1718009" />
  <DocumentChange __id="1455" _type="Insert" date="Wed Apr 21 09:54:39 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5677" docExpressionCount="668" docLength="5677" length="44" offset="4895" repeat="2" starttimestamp="1619011563329" timestamp="1716023" timestamp2="1717661">
    <text><![CDATA[concat(childrenVector, getTexVector(child));]]></text>
  </DocumentChange>
  <Command __id="1462" _type="SelectTextCommand" caretOffset="4882" date="Wed Apr 21 09:54:43 EDT 2021" end="4887" start="4882" starttimestamp="1619011563329" timestamp="1720179" />
  <DocumentChange __id="1463" _type="Replace" date="Wed Apr 21 09:54:45 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5673" docExpressionCount="668" docLength="5673" endLine="131" insertionLength="1" int_docASTNodeCount="966" int_docActiveCodeLength="5672" int_docExpressionCount="667" int_docLength="5672" length="5" offset="4931" startLine="131" starttimestamp="1619011563329" timestamp="1722011">
    <deletedText><![CDATA[child]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <Command __id="1464" _type="InsertStringCommand" date="Wed Apr 21 09:54:45 EDT 2021" starttimestamp="1619011563329" timestamp="1722022" timestamp2="1722022">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1466" _type="InsertStringCommand" date="Wed Apr 21 09:54:45 EDT 2021" starttimestamp="1619011563329" timestamp="1722191" timestamp2="1722191">
    <data><![CDATA[h]]></data>
  </Command>
  <Command __id="1468" _type="InsertStringCommand" date="Wed Apr 21 09:54:45 EDT 2021" starttimestamp="1619011563329" timestamp="1722401" timestamp2="1722401">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="1470" _type="InsertStringCommand" date="Wed Apr 21 09:54:45 EDT 2021" starttimestamp="1619011563329" timestamp="1722467" timestamp2="1722467">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1472" _type="InsertStringCommand" date="Wed Apr 21 09:54:46 EDT 2021" starttimestamp="1619011563329" timestamp="1722908" timestamp2="1722908">
    <data><![CDATA[N]]></data>
  </Command>
  <Command __id="1474" _type="InsertStringCommand" date="Wed Apr 21 09:54:46 EDT 2021" starttimestamp="1619011563329" timestamp="1723171" timestamp2="1723171">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1476" _type="InsertStringCommand" date="Wed Apr 21 09:54:46 EDT 2021" starttimestamp="1619011563329" timestamp="1723238" timestamp2="1723238">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="1478" _type="InsertStringCommand" date="Wed Apr 21 09:54:46 EDT 2021" starttimestamp="1619011563329" timestamp="1723325" timestamp2="1723325">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1479" _type="MoveCaretCommand" caretOffset="4502" date="Wed Apr 21 09:54:47 EDT 2021" docOffset="4551" starttimestamp="1619011563329" timestamp="1724119" />
  <Command __id="1480" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:54:47 EDT 2021" starttimestamp="1619011563329" timestamp="1724394" />
  <Command __id="1481" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:54:47 EDT 2021" starttimestamp="1619011563329" timestamp="1724502" />
  <Command __id="1482" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:54:47 EDT 2021" starttimestamp="1619011563329" timestamp="1724516" />
  <Command __id="1483" _type="SelectTextCommand" caretOffset="4898" date="Wed Apr 21 09:54:48 EDT 2021" end="4898" start="4629" starttimestamp="1619011563329" timestamp="1724714" />
  <Command __id="1484" _type="MoveCaretCommand" caretOffset="4925" date="Wed Apr 21 09:54:48 EDT 2021" docOffset="4974" starttimestamp="1619011563329" timestamp="1724867" />
  <Command __id="1485" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:54:51 EDT 2021" starttimestamp="1619011563329" timestamp="1728462" />
  <Command __id="1486" _type="RunCommand" date="Wed Apr 21 09:54:51 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1728529" type="Run" />
  <Command __id="1487" _type="ConsoleOutput" date="Wed Apr 21 09:54:51 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1728668" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [p, o, w, (, 1, ,, 2, )]
Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]
Testing multi div Expression [p, o, w, (, 1, ,, 2, )]
Testing function Expression [p, o, w, (, 1, ,, 2, )]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [p, o, w, (, 1, ,, 2, )]¶Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1488" _type="ShellCommand" date="Wed Apr 21 09:54:52 EDT 2021" starttimestamp="1619011563329" timestamp="1728967" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1489" _type="ConsoleOutput" date="Wed Apr 21 09:54:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1728999" type="ConsoleOutput">
    <outputString><![CDATA[Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]
Testing multi div Expression [p, o, w, (, 1, ,, 2, )]
Testing function Expression [p, o, w, (, 1, ,, 2, )]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
Testing Expression [2]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [p, o, w, (, 1, ,, 2, )]¶"), Diff(EQUAL,"Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶"), Diff(INSERT,"Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [2]¶")]]]></diff>
  </Command>
  <Command __id="1492" _type="RunCommand" date="Wed Apr 21 09:54:58 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1735194" type="Run" />
  <Command __id="1493" _type="RunCommand" date="Wed Apr 21 09:54:58 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1735194" type="Run" />
  <Command __id="1494" _type="ShellCommand" date="Wed Apr 21 09:54:59 EDT 2021" starttimestamp="1619011563329" timestamp="1736384" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1495" _type="ShellCommand" date="Wed Apr 21 09:55:00 EDT 2021" starttimestamp="1619011563329" timestamp="1736773" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1496" _type="ShellCommand" date="Wed Apr 21 09:55:01 EDT 2021" starttimestamp="1619011563329" timestamp="1737810" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1497" _type="ShellCommand" date="Wed Apr 21 09:55:02 EDT 2021" starttimestamp="1619011563329" timestamp="1739052" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1498" _type="ShellCommand" date="Wed Apr 21 09:55:03 EDT 2021" starttimestamp="1619011563329" timestamp="1739787" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1499" _type="ShellCommand" date="Wed Apr 21 09:55:03 EDT 2021" starttimestamp="1619011563329" timestamp="1740013" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1500" _type="RunCommand" date="Wed Apr 21 09:55:04 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1740876" type="Run" />
  <Command __id="1501" _type="RunCommand" date="Wed Apr 21 09:55:04 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1740876" type="Run" />
  <Command __id="1502" _type="ShellCommand" date="Wed Apr 21 09:55:05 EDT 2021" starttimestamp="1619011563329" timestamp="1742509" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1504" _type="SelectTextCommand" caretOffset="406" date="Wed Apr 21 09:55:06 EDT 2021" end="407" start="406" starttimestamp="1619011563329" timestamp="1742749" />
  <Command __id="1505" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:55:08 EDT 2021" starttimestamp="1619011563329" timestamp="1744985" />
  <Command __id="1506" _type="RunCommand" date="Wed Apr 21 09:55:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1745121" type="Run" />
  <Command __id="1507" _type="RunCommand" date="Wed Apr 21 09:55:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1745121" type="Run" />
  <Command __id="1508" _type="ShellCommand" date="Wed Apr 21 09:55:09 EDT 2021" starttimestamp="1619011563329" timestamp="1745909" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1509" _type="ConsoleOutput" date="Wed Apr 21 09:55:09 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1746009" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [2]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1510" _type="ConsoleOutput" date="Wed Apr 21 09:55:09 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1746145" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1511" _type="ConsoleOutput" date="Wed Apr 21 09:55:11 EDT 2021" overflow="true" starttimestamp="1619011563329" timestamp="1748482" type="ConsoleOutput">
    <outputString><![CDATA[
Testing Expression [a]
class java.lang.StackOverflowError
java.lang.StackOverflowError
	at java.base/java.util.Vector.<init>(Vector.java:155)
	at java.base/java.util.Vector.<init>(Vector.java:164)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	Exceeding 200 lines, infinite loop suspected, output ignored.]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at java.base/java.util.Vector.<init>(Vector.java:155)¶	at java.base/java.util.Vector.<init>(Vector.java:164)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1512" _type="ExceptionCommand" date="Wed Apr 21 09:55:13 EDT 2021" starttimestamp="1619011563329" timestamp="1750194" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.StackOverflowError
	at java.base/java.util.Vector.<init>(Vector.java:155)
	at java.base/java.util.Vector.<init>(Vector.java:164)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <DocumentChange __id="1465" _type="Insert" date="Wed Apr 21 09:54:45 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5680" docExpressionCount="668" docLength="5680" length="7" offset="4932" repeat="7" starttimestamp="1619011563329" timestamp="1722188" timestamp2="1723322">
    <text><![CDATA[hisNode]]></text>
  </DocumentChange>
  <Command __id="1503" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:55:05 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1742654">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaExp", AttributeNames.ICON, "image/exp.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaSqrt", AttributeNames.ICON, "image/sqrt.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1514" _type="RunCommand" date="Wed Apr 21 09:55:21 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1758382" type="Run" />
  <Command __id="1515" _type="RunCommand" date="Wed Apr 21 09:55:21 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1758382" type="Run" />
  <Command __id="1516" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:55:47 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1784315">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"/*¶ * Simple Java LaTex example¶ * http://www.heatonresearch.com/¶ * ¶ * Copyright 2013 Heaton Research, Inc.¶ *¶ * Licensed under the Apache License, Version 2.0 (the "License");¶ * you may not use this file except in compliance with the License.¶ * You may obtain a copy of the License at¶ *¶ *     http://www.apache.org/licenses/LICENSE-2.0¶ *¶ * Unless required by applicable law or agreed to in writing, software¶ * distributed under the License is distributed on an "AS IS" BASIS,¶ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.¶ * See the License for the specific language governing permissions and¶ * limitations under the License.¶ *   ¶ * For more information on Heaton Research copyrights, licenses ¶ * and trademarks visit:¶ * http://www.heatonresearch.com/copyright¶ */¶¶package components.mathEditor;¶¶import java.awt.BorderLayout;¶import java.awt.Color;¶import java.awt.Container;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.GridLayout;¶import java.awt.Insets;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.image.BufferedImage;¶import java.io.File;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JOptionPane;¶import javax.swing.JPanel;¶import javax.swing.JScrollPane;¶import javax.swing.JTextArea;¶¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶¶public class LatexExample extends JFrame implements ActionListener {¶	¶	private JTextArea latexSource;¶	private JButton btnRender;¶	private JPanel drawingArea;¶¶	public LatexExample() {¶		this.setTitle("JLatexMath Example");¶		this.setSize(500, 500);¶		Container content = this.getContentPane();¶		content.setLayout(new GridLayout(2, 1));¶		this.latexSource = new JTextArea();¶		¶		JPanel editorArea = new JPanel();¶		editorArea.setLayout(new BorderLayout());¶		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);¶		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		¶		¶		content.add(editorArea);¶		content.add(this.drawingArea = new JPanel());		¶		this.btnRender.addActionListener(this);¶		¶		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");¶	}¶¶	public void render() {¶		try {¶			// get the text¶			String latex = this.latexSource.getText();¶			¶			// create a formula¶			TeXFormula formula = new TeXFormula(latex);¶			¶			¶			// render the formla to an icon of the same size as the formula.¶			TeXIcon icon = formula¶					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶			¶			// insert a border ¶			icon.setInsets(new Insets(5, 5, 5, 5));¶¶			// now create an actual image of the rendered equation¶			BufferedImage image = new BufferedImage(icon.getIconWidth(),¶					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶			Graphics2D g2 = image.createGraphics();¶			g2.setColor(Color.white);¶			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶			JLabel jl = new JLabel();¶			jl.setForeground(new Color(0, 0, 0));¶			icon.paintIcon(jl, g2, 0, 0);¶			// at this point the image is created, you could also save it with ImageIO¶			¶			File outputfile = new File("image.png");¶			ImageIO.write(image, "png", outputfile);¶			¶			// now draw it to the screen			¶			Graphics g = this.drawingArea.getGraphics();¶			g.drawImage(image,0,0,null);¶		} catch (Exception ex) {¶			ex.printStackTrace();¶			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",¶					JOptionPane.INFORMATION_MESSAGE);		¶		}¶¶	}¶¶	public static void main(String[] args) {¶		LatexExample frame = new LatexExample();		¶		frame.setVisible(true);¶	}¶¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if( e.getSource() == this.btnRender ) {¶			render();¶		}¶		¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1517" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:55:47 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="1784403" />
  <Command __id="1518" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:55:54 EDT 2021" docASTNodeCount="400" docActiveCodeLength="2662" docExpressionCount="272" docLength="2662" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1790710">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mainpanel\MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.beans.PropertyChangeEvent;¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶¶import components.composedGraph.ComposedGraph;¶import components.composedGraph.ComposedGraphInterface;¶import components.page.pages.PageInterface;¶import exporter.Exporter;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"currentPage"})¶@EditablePropertyNames({})¶public class MainPanel implements MainPanelInterface{¶	¶	private List<PageInterface> pages = new ArrayList<PageInterface> ();¶	private PageInterface currentPage;¶	private int currentPageIndex = 0;¶	¶	public MainPanel() {¶		¶	}¶	¶¶	@Override¶	public List<PageInterface> getPages() {¶		return pages;¶	}¶¶	@Override¶	public void setPages(List<PageInterface> newPages) {¶		pages = newPages;¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Label(">")¶	@Column(2)¶	@Row(0)¶	@Override¶	public void nextPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == pages.size() - 1) {¶			setCurrentPageIndex(0);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() + 1);¶		}¶	}¶¶	@PreferredWidgetClass(JButton.class)¶	@Label("<")¶	@Column(0)¶	@Row(0)¶	@Override¶	public void prevPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == 0) {¶			setCurrentPageIndex(pages.size() - 1);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() - 1);¶		}¶	}¶¶	@Override¶	public int getCurrentPageIndex() {¶		return currentPageIndex;¶	}¶¶	@Override¶	public void setCurrentPageIndex(int newPageIndex) {¶		currentPageIndex = newPageIndex;¶		setCurrentPage(pages.get(currentPageIndex));¶	}¶¶	@Override¶	@Column(1)¶	@ComponentWidth(200)¶	public PageInterface getCurrentPage() {¶		return currentPage;¶	}¶¶	@Override¶	public void setCurrentPage(PageInterface newPage) {¶		currentPage = newPage;¶	}¶¶	@Override¶	public void clearPages() {¶		pages.clear();¶	}¶	¶	@Override¶	public void addPage(PageInterface newPage) {¶		getPages().add(newPage);¶		newPage.addPropertyChangeListener(this);¶		setCurrentPageIndex(getCurrentPageIndex());¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1519" _type="MoveCaretCommand" caretOffset="601" date="Wed Apr 21 09:55:54 EDT 2021" docOffset="1266" starttimestamp="1619011563329" timestamp="1790797" />
  <Command __id="1520" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:55:57 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1794117">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"/*¶ * Simple Java LaTex example¶ * http://www.heatonresearch.com/¶ * ¶ * Copyright 2013 Heaton Research, Inc.¶ *¶ * Licensed under the Apache License, Version 2.0 (the "License");¶ * you may not use this file except in compliance with the License.¶ * You may obtain a copy of the License at¶ *¶ *     http://www.apache.org/licenses/LICENSE-2.0¶ *¶ * Unless required by applicable law or agreed to in writing, software¶ * distributed under the License is distributed on an "AS IS" BASIS,¶ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.¶ * See the License for the specific language governing permissions and¶ * limitations under the License.¶ *   ¶ * For more information on Heaton Research copyrights, licenses ¶ * and trademarks visit:¶ * http://www.heatonresearch.com/copyright¶ */¶¶package components.mathEditor;¶¶import java.awt.BorderLayout;¶import java.awt.Color;¶import java.awt.Container;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.GridLayout;¶import java.awt.Insets;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.image.BufferedImage;¶import java.io.File;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JOptionPane;¶import javax.swing.JPanel;¶import javax.swing.JScrollPane;¶import javax.swing.JTextArea;¶¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶¶public class LatexExample extends JFrame implements ActionListener {¶	¶	private JTextArea latexSource;¶	private JButton btnRender;¶	private JPanel drawingArea;¶¶	public LatexExample() {¶		this.setTitle("JLatexMath Example");¶		this.setSize(500, 500);¶		Container content = this.getContentPane();¶		content.setLayout(new GridLayout(2, 1));¶		this.latexSource = new JTextArea();¶		¶		JPanel editorArea = new JPanel();¶		editorArea.setLayout(new BorderLayout());¶		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);¶		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		¶		¶		content.add(editorArea);¶		content.add(this.drawingArea = new JPanel());		¶		this.btnRender.addActionListener(this);¶		¶		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");¶	}¶¶	public void render() {¶		try {¶			// get the text¶			String latex = this.latexSource.getText();¶			¶			// create a formula¶			TeXFormula formula = new TeXFormula(latex);¶			¶			¶			// render the formla to an icon of the same size as the formula.¶			TeXIcon icon = formula¶					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶			¶			// insert a border ¶			icon.setInsets(new Insets(5, 5, 5, 5));¶¶			// now create an actual image of the rendered equation¶			BufferedImage image = new BufferedImage(icon.getIconWidth(),¶					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶			Graphics2D g2 = image.createGraphics();¶			g2.setColor(Color.white);¶			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶			JLabel jl = new JLabel();¶			jl.setForeground(new Color(0, 0, 0));¶			icon.paintIcon(jl, g2, 0, 0);¶			// at this point the image is created, you could also save it with ImageIO¶			¶			File outputfile = new File("image.png");¶			ImageIO.write(image, "png", outputfile);¶			¶			// now draw it to the screen			¶			Graphics g = this.drawingArea.getGraphics();¶			g.drawImage(image,0,0,null);¶		} catch (Exception ex) {¶			ex.printStackTrace();¶			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",¶					JOptionPane.INFORMATION_MESSAGE);		¶		}¶¶	}¶¶	public static void main(String[] args) {¶		LatexExample frame = new LatexExample();		¶		frame.setVisible(true);¶	}¶¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if( e.getSource() == this.btnRender ) {¶			render();¶		}¶		¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1521" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 09:55:57 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="1794207" />
  <Command __id="1522" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:56:00 EDT 2021" docASTNodeCount="348" docActiveCodeLength="2432" docExpressionCount="210" docLength="2432" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1796995">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathExpressionImage.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶¶import components.listenersupport.PropertyListenerSupport;¶import util.annotations.EditablePropertyNames;¶import util.annotations.PropertyNames;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.IMAGE_PATTERN)¶@PropertyNames({"x", "y", "width", "height", "imageFileName"})¶@EditablePropertyNames({})¶public class MathExpressionImage implements MathExpressionImageInterface{¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private int x, y, height, width;¶	private String imageFileName;¶¶	public MathExpressionImage(int newX, int newY, int h, int w, String name) {¶		setX(newX);¶		setY(newY);¶		setHeight(h);¶		setWidth(w);¶		setImageFileName(name);¶	}¶	¶	@Override¶    public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶¶	@Override¶	public int getX() {¶		return x;¶	}¶¶	@Override¶	public void setX(int newX) {¶		int oldX = x;¶		x = newX;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "x", oldX, x));¶	}¶¶	@Override¶	public int getY() {¶		return y;¶	}¶¶	@Override¶	public void setY(int newY) {¶		int oldY = y;¶		y = newY;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "y", oldY, y));¶	}¶¶	@Override¶	public int getWidth() {¶		return width;¶	}¶¶	@Override¶	public void setWidth(int newWidth) {¶		int oldWidth = width;¶		width = newWidth;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "width", oldWidth, width));¶	}¶¶	@Override¶	public int getHeight() {¶		return height;¶	}¶¶	@Override¶	public void setHeight(int newHeight) {¶		int oldHeight = height;¶		height = newHeight;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "height", oldHeight, height));¶	}¶¶	@Override¶	public String getImageFileName() {¶		return imageFileName;¶	}¶¶	@Override¶	public void setImageFileName(String newName) {¶		String oldName = imageFileName;¶		imageFileName = newName;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "imageFileName", oldName, imageFileName));¶	}¶}¶	¶")]]]></diff>
  </Command>
  <Command __id="1523" _type="MoveCaretCommand" caretOffset="1016" date="Wed Apr 21 09:56:00 EDT 2021" docOffset="1300" starttimestamp="1619011563329" timestamp="1797082" />
  <Command __id="1524" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:56:01 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10796" docExpressionCount="1180" docLength="10796" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1797732">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp("), Diff(INSERT,"x"), Diff(EQUAL,")");¶		set"), Diff(DELETE,"Tex"), Diff(INSERT,"Java"), Diff(EQUAL,"Expression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt("), Diff(INSERT,"a"), Diff(EQUAL,")");¶		set"), Diff(DELETE,"Tex"), Diff(INSERT,"Java"), Diff(EQUAL,"Expression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		
		if (image == null) {
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		}
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp(x)");
		setJavaExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "sqrt(a)");
		setJavaExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="1525" _type="MoveCaretCommand" caretOffset="9233" date="Wed Apr 21 09:56:01 EDT 2021" docOffset="10260" starttimestamp="1619011563329" timestamp="1797838" />
  <Command __id="1526" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:56:03 EDT 2021" docASTNodeCount="400" docActiveCodeLength="2662" docExpressionCount="272" docLength="2662" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1799888">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mainpanel\MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.beans.PropertyChangeEvent;¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶¶import components.composedGraph.ComposedGraph;¶import components.composedGraph.ComposedGraphInterface;¶import components.page.pages.PageInterface;¶import exporter.Exporter;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"currentPage"})¶@EditablePropertyNames({})¶public class MainPanel implements MainPanelInterface{¶	¶	private List<PageInterface> pages = new ArrayList<PageInterface> ();¶	private PageInterface currentPage;¶	private int currentPageIndex = 0;¶	¶	public MainPanel() {¶		¶	}¶	¶¶	@Override¶	public List<PageInterface> getPages() {¶		return pages;¶	}¶¶	@Override¶	public void setPages(List<PageInterface> newPages) {¶		pages = newPages;¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Label(">")¶	@Column(2)¶	@Row(0)¶	@Override¶	public void nextPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == pages.size() - 1) {¶			setCurrentPageIndex(0);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() + 1);¶		}¶	}¶¶	@PreferredWidgetClass(JButton.class)¶	@Label("<")¶	@Column(0)¶	@Row(0)¶	@Override¶	public void prevPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == 0) {¶			setCurrentPageIndex(pages.size() - 1);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() - 1);¶		}¶	}¶¶	@Override¶	public int getCurrentPageIndex() {¶		return currentPageIndex;¶	}¶¶	@Override¶	public void setCurrentPageIndex(int newPageIndex) {¶		currentPageIndex = newPageIndex;¶		setCurrentPage(pages.get(currentPageIndex));¶	}¶¶	@Override¶	@Column(1)¶	@ComponentWidth(200)¶	public PageInterface getCurrentPage() {¶		return currentPage;¶	}¶¶	@Override¶	public void setCurrentPage(PageInterface newPage) {¶		currentPage = newPage;¶	}¶¶	@Override¶	public void clearPages() {¶		pages.clear();¶	}¶	¶	@Override¶	public void addPage(PageInterface newPage) {¶		getPages().add(newPage);¶		newPage.addPropertyChangeListener(this);¶		setCurrentPageIndex(getCurrentPageIndex());¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="1527" _type="MoveCaretCommand" caretOffset="601" date="Wed Apr 21 09:56:03 EDT 2021" docOffset="1266" starttimestamp="1619011563329" timestamp="1799972" />
  <Command __id="1528" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:56:09 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10796" docExpressionCount="1180" docLength="10796" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1806061">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1529" _type="MoveCaretCommand" caretOffset="9233" date="Wed Apr 21 09:56:09 EDT 2021" docOffset="10260" starttimestamp="1619011563329" timestamp="1806147" />
  <Command __id="1531" _type="MoveCaretCommand" caretOffset="4925" date="Wed Apr 21 09:56:11 EDT 2021" docOffset="4974" starttimestamp="1619011563329" timestamp="1808548" />
  <Command __id="1532" _type="SelectTextCommand" caretOffset="4788" date="Wed Apr 21 09:56:13 EDT 2021" end="4898" start="4788" starttimestamp="1619011563329" timestamp="1810429" />
  <Command __id="1533" _type="CopyCommand" date="Wed Apr 21 09:56:14 EDT 2021" starttimestamp="1619011563329" timestamp="1811312" />
  <Command __id="1535" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:56:15 EDT 2021" starttimestamp="1619011563329" timestamp="1811955" />
  <Command __id="1536" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:56:15 EDT 2021" starttimestamp="1619011563329" timestamp="1812329" />
  <Command __id="1537" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:56:15 EDT 2021" starttimestamp="1619011563329" timestamp="1812435" />
  <Command __id="1538" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:56:15 EDT 2021" starttimestamp="1619011563329" timestamp="1812450" />
  <Command __id="1539" _type="MoveCaretCommand" caretOffset="710" date="Wed Apr 21 09:56:19 EDT 2021" docOffset="759" starttimestamp="1619011563329" timestamp="1815912" />
  <Command __id="1540" _type="MoveCaretCommand" caretOffset="672" date="Wed Apr 21 09:56:19 EDT 2021" docOffset="721" starttimestamp="1619011563329" timestamp="1816241" />
  <Command __id="1541" _type="MoveCaretCommand" caretOffset="531" date="Wed Apr 21 09:56:22 EDT 2021" docOffset="580" starttimestamp="1619011563329" timestamp="1819071" />
  <Command __id="1543" _type="InsertStringCommand" date="Wed Apr 21 09:56:23 EDT 2021" starttimestamp="1619011563329" timestamp="1819775" timestamp2="1819775">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1545" _type="PasteCommand" date="Wed Apr 21 09:56:23 EDT 2021" starttimestamp="1619011563329" timestamp="1819974" />
  <Command __id="1546" _type="SelectTextCommand" caretOffset="576" date="Wed Apr 21 09:56:26 EDT 2021" end="640" start="576" starttimestamp="1619011563329" timestamp="1822892" />
  <Command __id="1547" _type="MoveCaretCommand" caretOffset="1624" date="Wed Apr 21 09:56:56 EDT 2021" docOffset="1673" starttimestamp="1619011563329" timestamp="1852757" />
  <Command __id="1548" _type="MoveCaretCommand" caretOffset="640" date="Wed Apr 21 09:56:56 EDT 2021" docOffset="689" starttimestamp="1619011563329" timestamp="1853517" />
  <Command __id="1549" _type="SelectTextCommand" caretOffset="535" date="Wed Apr 21 09:56:58 EDT 2021" end="645" start="535" starttimestamp="1619011563329" timestamp="1855207" />
  <Command __id="1550" _type="MoveCaretCommand" caretOffset="535" date="Wed Apr 21 09:56:58 EDT 2021" docOffset="584" starttimestamp="1619011563329" timestamp="1855399" />
  <Command __id="1551" _type="MoveCaretCommand" caretOffset="576" date="Wed Apr 21 09:56:59 EDT 2021" docOffset="625" starttimestamp="1619011563329" timestamp="1856012" />
  <Command __id="1552" _type="MoveCaretCommand" caretOffset="645" date="Wed Apr 21 09:56:59 EDT 2021" docOffset="694" starttimestamp="1619011563329" timestamp="1856461" />
  <Command __id="1553" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:57:00 EDT 2021" starttimestamp="1619011563329" timestamp="1857318" />
  <Command __id="1554" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:57:00 EDT 2021" starttimestamp="1619011563329" timestamp="1857425" />
  <Command __id="1555" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:57:00 EDT 2021" starttimestamp="1619011563329" timestamp="1857438" />
  <Command __id="1556" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:57:05 EDT 2021" starttimestamp="1619011563329" timestamp="1862391" />
  <Command __id="1557" _type="RunCommand" date="Wed Apr 21 09:57:05 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1862531" type="Run" />
  <Command __id="1558" _type="RunCommand" date="Wed Apr 21 09:57:05 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1862531" type="Run" />
  <Command __id="1559" _type="ShellCommand" date="Wed Apr 21 09:57:06 EDT 2021" starttimestamp="1619011563329" timestamp="1863331" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1560" _type="ConsoleOutput" date="Wed Apr 21 09:57:06 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1863647" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at java.base/java.util.Vector.<init>(Vector.java:155)¶	at java.base/java.util.Vector.<init>(Vector.java:164)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:1"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,"), Diff(EQUAL,"32"), Diff(DELETE,")"), Diff(INSERT,"7"), Diff(EQUAL,"¶"), Diff(DELETE,"	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:132)"), Diff(INSERT,"W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1561" _type="ConsoleOutput" date="Wed Apr 21 09:57:07 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="1863704" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1562" _type="ConsoleOutput" date="Wed Apr 21 09:57:09 EDT 2021" overflow="true" starttimestamp="1619011563329" timestamp="1866436" type="ConsoleOutput">
    <outputString><![CDATA[
Testing Expression [a]
class java.lang.StackOverflowError
java.lang.StackOverflowError
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	Exceeding 200 lines, infinite loop suspected, output ignored.]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1563" _type="ExceptionCommand" date="Wed Apr 21 09:57:11 EDT 2021" starttimestamp="1619011563329" timestamp="1867846" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.StackOverflowError
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1564" _type="ShellCommand" date="Wed Apr 21 09:57:11 EDT 2021" starttimestamp="1619011563329" timestamp="1868165" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1565" _type="RunCommand" date="Wed Apr 21 09:57:11 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1868347" type="Run" />
  <Command __id="1566" _type="RunCommand" date="Wed Apr 21 09:57:11 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1868347" type="Run" />
  <Command __id="1567" _type="MoveCaretCommand" caretOffset="571" date="Wed Apr 21 09:57:13 EDT 2021" docOffset="620" starttimestamp="1619011563329" timestamp="1870626" />
  <Command __id="1568" _type="SelectTextCommand" caretOffset="533" date="Wed Apr 21 09:57:15 EDT 2021" end="645" start="533" starttimestamp="1619011563329" timestamp="1872510" />
  <Command __id="1569" _type="MoveCaretCommand" caretOffset="1120" date="Wed Apr 21 09:57:16 EDT 2021" docOffset="1169" starttimestamp="1619011563329" timestamp="1873189" />
  <Command __id="1530" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 09:56:11 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5680" docExpressionCount="668" docLength="5680" projectName="TaskBox" starttimestamp="1619011563329" timestamp="1808449">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\TexTreeBuilder.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶public class TexTreeBuilder {¶	private DefaultMutableTreeNode root;¶	private JavaExpressionParser parser = new JavaExpressionParser();¶	¶	¶	public String build(DefaultMutableTreeNode aRoot) {¶		root = aRoot;¶		String resultString = "";¶		for (Character c : getTexVector(root)) {¶			resultString += c;¶		}¶		return resultString;¶	}¶	¶	public Vector<Character> getTexVector(DefaultMutableTreeNode thisNode) {¶		Vector<Character> childrenVector = new Vector<Character> ();¶		for (int i = 0; i < thisNode.getChildCount(); i ++) {¶			DefaultMutableTreeNode child = (DefaultMutableTreeNode) thisNode.getChildAt(i);¶			if (child.getChildCount() == 0) {¶				if (((Vector<Character>) child.getUserObject()).get(0) == '/') {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('\\');¶					fracVector.add('f');¶					fracVector.add('r');¶					fracVector.add('a');¶					fracVector.add('c');¶					fracVector.add('{');¶					fracVector = concat(fracVector, childrenVector);¶					fracVector.add('}');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i ++;¶					childrenVector = fracVector;¶				}¶				else if (((Vector<Character>) child.getUserObject()).get(0) == '^') {¶					Vector<Character> powerVector = new Vector<Character> ();¶					powerVector = concat(childrenVector, powerVector);¶					powerVector.add('^');¶					powerVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					if (nextChild.getChildCount() == 0) {¶						powerVector = concat(powerVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						powerVector = concat(powerVector, getTexVector(nextChild));¶					}¶					powerVector.add('}');¶					i ++;¶					childrenVector = powerVector;¶				}¶				else if (((Vector<Character>) child.getUserObject()).get(0) == '*') {¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					DefaultMutableTreeNode prevChild = (DefaultMutableTreeNode) thisNode.getChildAt(i - 1);¶					Vector<Character> timesVector = new Vector<Character> ();¶					timesVector = concat(childrenVector, timesVector);¶					if (prevChild.getChildCount() == 0 && nextChild.getChildCount() == 0 ¶							&& parser.isNumber((Vector<Character>) prevChild.getUserObject()) ¶							&& parser.isUnsignedVariable((Vector<Character>) nextChild.getUserObject())) {¶					}¶					else {¶						timesVector.add(' ');¶						timesVector.add('\\');¶						timesVector.add('t');¶						timesVector.add('i');¶						timesVector.add('m');¶						timesVector.add('e');¶						timesVector.add('s');¶						timesVector.add(' ');¶						childrenVector = timesVector;¶					}¶				}¶				¶				else if (isSqrt((Vector<Character>) child.getUserObject()) ¶						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('\\');¶					fracVector.add('s');¶					fracVector.add('q');¶					fracVector.add('r');¶					fracVector.add('t');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i += 3;¶					childrenVector = fracVector;¶				}¶				¶				else if (isExp((Vector<Character>) child.getUserObject())¶						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('e');¶					fracVector.add('^');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i += 3;¶					childrenVector = fracVector;¶				}¶				¶				¶				"), Diff(INSERT,"¶			}¶			"), Diff(EQUAL,"else {¶				"), Diff(DELETE,"	"), Diff(EQUAL,"childrenVector = concat(childrenVector, "), Diff(DELETE,"(Vector<Character>) child.getUserObject("), Diff(INSERT,"getTexVector(child"), Diff(EQUAL,"));¶			"), Diff(DELETE,"	"), Diff(EQUAL,"}¶		"), Diff(DELETE,"	"), Diff(EQUAL,"}¶		"), Diff(DELETE,"	else"), Diff(INSERT,"if (thisNode.getChildCount() == 0)"), Diff(EQUAL," {¶			"), Diff(DELETE,"	"), Diff(EQUAL,"childrenVector = concat(childrenVector, getTexVector("), Diff(DELETE,"c"), Diff(INSERT,"t"), Diff(EQUAL,"hi"), Diff(DELETE,"ld));¶			}"), Diff(INSERT,"sNode));"), Diff(EQUAL,"¶		}¶		return childrenVector;	¶	}¶	¶	public Vector<Character> concat(Vector<Character> vectorA, Vector<Character> vectorB){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : vectorA) {¶			newVector.add(c);¶		}¶		for (Character c : vectorB) {¶			newVector.add(c);¶		}¶		return newVector;¶	}¶	¶	public boolean isSqrt(Vector<Character> aVector) {¶		if (aVector.size() != 4) return false;¶		return aVector.get(0) == 's' && aVector.get(1) == 'q' && aVector.get(2) == 'r' && aVector.get(3) == 't';¶	}¶	¶	public boolean isExp(Vector<Character> aVector) {¶		if (aVector.size() != 3) return false;¶		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package parser;

import java.util.Vector;
import javax.swing.tree.DefaultMutableTreeNode;

public class TexTreeBuilder {
	private DefaultMutableTreeNode root;
	private JavaExpressionParser parser = new JavaExpressionParser();
	
	
	public String build(DefaultMutableTreeNode aRoot) {
		root = aRoot;
		String resultString = "";
		for (Character c : getTexVector(root)) {
			resultString += c;
		}
		return resultString;
	}
	
	public Vector<Character> getTexVector(DefaultMutableTreeNode thisNode) {
		Vector<Character> childrenVector = new Vector<Character> ();
		for (int i = 0; i < thisNode.getChildCount(); i ++) {
			DefaultMutableTreeNode child = (DefaultMutableTreeNode) thisNode.getChildAt(i);
			if (child.getChildCount() == 0) {
				if (((Vector<Character>) child.getUserObject()).get(0) == '/') {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('\\');
					fracVector.add('f');
					fracVector.add('r');
					fracVector.add('a');
					fracVector.add('c');
					fracVector.add('{');
					fracVector = concat(fracVector, childrenVector);
					fracVector.add('}');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i ++;
					childrenVector = fracVector;
				}
				else if (((Vector<Character>) child.getUserObject()).get(0) == '^') {
					Vector<Character> powerVector = new Vector<Character> ();
					powerVector = concat(childrenVector, powerVector);
					powerVector.add('^');
					powerVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					if (nextChild.getChildCount() == 0) {
						powerVector = concat(powerVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						powerVector = concat(powerVector, getTexVector(nextChild));
					}
					powerVector.add('}');
					i ++;
					childrenVector = powerVector;
				}
				else if (((Vector<Character>) child.getUserObject()).get(0) == '*') {
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					DefaultMutableTreeNode prevChild = (DefaultMutableTreeNode) thisNode.getChildAt(i - 1);
					Vector<Character> timesVector = new Vector<Character> ();
					timesVector = concat(childrenVector, timesVector);
					if (prevChild.getChildCount() == 0 && nextChild.getChildCount() == 0 
							&& parser.isNumber((Vector<Character>) prevChild.getUserObject()) 
							&& parser.isUnsignedVariable((Vector<Character>) nextChild.getUserObject())) {
					}
					else {
						timesVector.add(' ');
						timesVector.add('\\');
						timesVector.add('t');
						timesVector.add('i');
						timesVector.add('m');
						timesVector.add('e');
						timesVector.add('s');
						timesVector.add(' ');
						childrenVector = timesVector;
					}
				}
				
				else if (isSqrt((Vector<Character>) child.getUserObject()) 
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('\\');
					fracVector.add('s');
					fracVector.add('q');
					fracVector.add('r');
					fracVector.add('t');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				
				else if (isExp((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				
				
				
			}
			else {
				childrenVector = concat(childrenVector, getTexVector(child));
			}
		}
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}
		return childrenVector;	
	}
	
	public Vector<Character> concat(Vector<Character> vectorA, Vector<Character> vectorB){
		Vector<Character> newVector = new Vector<Character> ();
		for (Character c : vectorA) {
			newVector.add(c);
		}
		for (Character c : vectorB) {
			newVector.add(c);
		}
		return newVector;
	}
	
	public boolean isSqrt(Vector<Character> aVector) {
		if (aVector.size() != 4) return false;
		return aVector.get(0) == 's' && aVector.get(1) == 'q' && aVector.get(2) == 'r' && aVector.get(3) == 't';
	}
	
	public boolean isExp(Vector<Character> aVector) {
		if (aVector.size() != 3) return false;
		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';
	}
	


}
]]></snapshot>
  </Command>
  <DocumentChange __id="1534" _type="Delete" date="Wed Apr 21 09:56:15 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5570" docExpressionCount="655" docLength="5570" endLine="132" length="110" offset="4837" startLine="130" starttimestamp="1619011563329" timestamp="1811947">
    <text><![CDATA[if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1542" _type="Insert" date="Wed Apr 21 09:56:23 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5574" docExpressionCount="655" docLength="5574" length="4" offset="580" starttimestamp="1619011563329" timestamp="1819766">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1544" _type="Replace" date="Wed Apr 21 09:56:23 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5684" docExpressionCount="668" docLength="5684" endLine="21" insertionLength="112" int_docASTNodeCount="951" int_docActiveCodeLength="5572" int_docExpressionCount="655" int_docLength="5572" length="2" offset="582" startLine="21" starttimestamp="1619011563329" timestamp="1819963">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1571" _type="Delete" date="Wed Apr 21 09:57:33 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5570" docExpressionCount="655" docLength="5570" endLine="23" length="114" offset="580" repeat="2" startLine="20" starttimestamp="1619011563329" timestamp="1890631" timestamp2="1891193">
    <text><![CDATA[
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></text>
  </DocumentChange>
  <Command __id="1570" _type="SelectTextCommand" caretOffset="533" date="Wed Apr 21 09:57:33 EDT 2021" end="645" start="533" starttimestamp="1619011563329" timestamp="1889764" />
  <Command __id="1572" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:57:33 EDT 2021" starttimestamp="1619011563329" timestamp="1890641" />
  <Command __id="1574" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:57:34 EDT 2021" starttimestamp="1619011563329" timestamp="1891198" />
  <Command __id="1575" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:57:35 EDT 2021" starttimestamp="1619011563329" timestamp="1892094" />
  <Command __id="1576" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:57:35 EDT 2021" starttimestamp="1619011563329" timestamp="1892192" />
  <Command __id="1577" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:57:35 EDT 2021" starttimestamp="1619011563329" timestamp="1892206" />
  <Command __id="1579" _type="UndoCommand" date="Wed Apr 21 09:57:47 EDT 2021" starttimestamp="1619011563329" timestamp="1904372" />
  <Command __id="1581" _type="UndoCommand" date="Wed Apr 21 09:57:48 EDT 2021" starttimestamp="1619011563329" timestamp="1904704" />
  <Command __id="1582" _type="MoveCaretCommand" caretOffset="1039" date="Wed Apr 21 09:57:55 EDT 2021" docOffset="1088" starttimestamp="1619011563329" timestamp="1912062" />
  <Command __id="1583" _type="SelectTextCommand" caretOffset="599" date="Wed Apr 21 09:58:00 EDT 2021" end="599" start="576" starttimestamp="1619011563329" timestamp="1916841" />
  <Command __id="1584" _type="MoveCaretCommand" caretOffset="599" date="Wed Apr 21 09:58:00 EDT 2021" docOffset="648" starttimestamp="1619011563329" timestamp="1916992" />
  <DocumentChange __id="1578" _type="Insert" date="Wed Apr 21 09:57:47 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5684" docExpressionCount="668" docLength="5684" length="114" offset="580" repeat="2" starttimestamp="1619011563329" timestamp="1904368" timestamp2="1904702">
    <text><![CDATA[
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1586" _type="Delete" date="Wed Apr 21 09:58:26 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5570" docExpressionCount="655" docLength="5570" endLine="23" length="114" offset="580" repeat="4" startLine="20" starttimestamp="1619011563329" timestamp="1943481" timestamp2="1944228">
    <text><![CDATA[
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></text>
  </DocumentChange>
  <Command __id="1585" _type="SelectTextCommand" caretOffset="535" date="Wed Apr 21 09:58:25 EDT 2021" end="645" start="535" starttimestamp="1619011563329" timestamp="1942520" />
  <Command __id="1587" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:58:26 EDT 2021" starttimestamp="1619011563329" timestamp="1943488" />
  <Command __id="1589" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:58:27 EDT 2021" starttimestamp="1619011563329" timestamp="1943674" />
  <Command __id="1591" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:58:27 EDT 2021" starttimestamp="1619011563329" timestamp="1944009" />
  <Command __id="1593" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:58:27 EDT 2021" starttimestamp="1619011563329" timestamp="1944236" />
  <Command __id="1594" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:58:27 EDT 2021" starttimestamp="1619011563329" timestamp="1944597" />
  <Command __id="1595" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:58:28 EDT 2021" starttimestamp="1619011563329" timestamp="1944698" />
  <Command __id="1596" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:58:28 EDT 2021" starttimestamp="1619011563329" timestamp="1944714" />
  <Command __id="1598" _type="UndoCommand" date="Wed Apr 21 09:58:29 EDT 2021" starttimestamp="1619011563329" timestamp="1946194" />
  <Command __id="1600" _type="UndoCommand" date="Wed Apr 21 09:58:29 EDT 2021" starttimestamp="1619011563329" timestamp="1946447" />
  <Command __id="1601" _type="CopyCommand" date="Wed Apr 21 09:58:30 EDT 2021" starttimestamp="1619011563329" timestamp="1947402" />
  <Command __id="1602" _type="MoveCaretCommand" caretOffset="645" date="Wed Apr 21 09:58:31 EDT 2021" docOffset="694" starttimestamp="1619011563329" timestamp="1948011" />
  <Command __id="1603" _type="SelectTextCommand" caretOffset="533" date="Wed Apr 21 09:58:32 EDT 2021" end="645" start="533" starttimestamp="1619011563329" timestamp="1949077" />
  <Command __id="1605" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:58:32 EDT 2021" starttimestamp="1619011563329" timestamp="1949488" />
  <Command __id="1607" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 09:58:33 EDT 2021" starttimestamp="1619011563329" timestamp="1949822" />
  <Command __id="1608" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:58:33 EDT 2021" starttimestamp="1619011563329" timestamp="1950114" />
  <Command __id="1609" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:58:33 EDT 2021" starttimestamp="1619011563329" timestamp="1950217" />
  <Command __id="1610" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:58:33 EDT 2021" starttimestamp="1619011563329" timestamp="1950232" />
  <DocumentChange __id="1597" _type="Insert" date="Wed Apr 21 09:58:29 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5684" docExpressionCount="668" docLength="5684" length="114" offset="580" repeat="2" starttimestamp="1619011563329" timestamp="1946190" timestamp2="1946445">
    <text><![CDATA[
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="1604" _type="Delete" date="Wed Apr 21 09:58:32 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5570" docExpressionCount="655" docLength="5570" endLine="23" length="114" offset="580" repeat="2" startLine="20" starttimestamp="1619011563329" timestamp="1949483" timestamp2="1949815">
    <text><![CDATA[
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></text>
  </DocumentChange>
  <Command __id="1611" _type="MoveCaretCommand" caretOffset="4779" date="Wed Apr 21 09:58:35 EDT 2021" docOffset="4828" starttimestamp="1619011563329" timestamp="1952578" />
  <Command __id="1612" _type="MoveCaretCommand" caretOffset="4784" date="Wed Apr 21 09:58:36 EDT 2021" docOffset="4833" starttimestamp="1619011563329" timestamp="1952968" />
  <Command __id="1614" _type="InsertStringCommand" date="Wed Apr 21 09:58:37 EDT 2021" starttimestamp="1619011563329" timestamp="1954023" timestamp2="1954023">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1616" _type="InsertStringCommand" date="Wed Apr 21 09:58:37 EDT 2021" starttimestamp="1619011563329" timestamp="1954190" timestamp2="1954190">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1617" _type="MoveCaretCommand" caretOffset="647" date="Wed Apr 21 09:58:44 EDT 2021" docOffset="696" starttimestamp="1619011563329" timestamp="1961362" />
  <Command __id="1618" _type="MoveCaretCommand" caretOffset="588" date="Wed Apr 21 09:58:45 EDT 2021" docOffset="637" starttimestamp="1619011563329" timestamp="1961780" />
  <Command __id="1619" _type="MoveCaretCommand" caretOffset="4788" date="Wed Apr 21 09:58:47 EDT 2021" docOffset="4837" starttimestamp="1619011563329" timestamp="1964305" />
  <Command __id="1620" _type="MoveCaretCommand" caretOffset="4792" date="Wed Apr 21 09:58:47 EDT 2021" docOffset="4841" starttimestamp="1619011563329" timestamp="1964601" />
  <Command __id="1622" _type="PasteCommand" date="Wed Apr 21 09:58:48 EDT 2021" starttimestamp="1619011563329" timestamp="1964938" />
  <Command __id="1623" _type="MoveCaretCommand" caretOffset="4906" date="Wed Apr 21 09:58:49 EDT 2021" docOffset="4955" starttimestamp="1619011563329" timestamp="1965779" />
  <Command __id="1624" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 09:58:49 EDT 2021" starttimestamp="1619011563329" timestamp="1966049" />
  <Command __id="1625" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:58:49 EDT 2021" starttimestamp="1619011563329" timestamp="1966154" />
  <Command __id="1626" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:58:49 EDT 2021" starttimestamp="1619011563329" timestamp="1966168" />
  <Command __id="1627" _type="MoveCaretCommand" caretOffset="4869" date="Wed Apr 21 09:58:50 EDT 2021" docOffset="4918" starttimestamp="1619011563329" timestamp="1966675" />
  <Command __id="1628" _type="MoveCaretCommand" caretOffset="4873" date="Wed Apr 21 09:58:50 EDT 2021" docOffset="4922" starttimestamp="1619011563329" timestamp="1966958" />
  <Command __id="1629" _type="MoveCaretCommand" caretOffset="4875" date="Wed Apr 21 09:58:50 EDT 2021" docOffset="4924" starttimestamp="1619011563329" timestamp="1967265" />
  <Command __id="1630" _type="MoveCaretCommand" caretOffset="4828" date="Wed Apr 21 09:58:51 EDT 2021" docOffset="4877" starttimestamp="1619011563329" timestamp="1967737" />
  <Command __id="1631" _type="MoveCaretCommand" caretOffset="4897" date="Wed Apr 21 09:58:57 EDT 2021" docOffset="4946" starttimestamp="1619011563329" timestamp="1973671" />
  <Command __id="1632" _type="SelectTextCommand" caretOffset="4891" date="Wed Apr 21 09:58:58 EDT 2021" end="4897" start="4891" starttimestamp="1619011563329" timestamp="1975151" />
  <Command __id="1633" _type="MoveCaretCommand" caretOffset="4893" date="Wed Apr 21 09:58:58 EDT 2021" docOffset="4942" starttimestamp="1619011563329" timestamp="1975319" />
  <Command __id="1634" _type="SelectTextCommand" caretOffset="4886" date="Wed Apr 21 09:58:59 EDT 2021" end="4894" start="4886" starttimestamp="1619011563329" timestamp="1976554" />
  <Command __id="1635" _type="MoveCaretCommand" caretOffset="4892" date="Wed Apr 21 09:59:00 EDT 2021" docOffset="4941" starttimestamp="1619011563329" timestamp="1977669" />
  <Command __id="1636" _type="SelectTextCommand" caretOffset="4873" date="Wed Apr 21 09:59:02 EDT 2021" end="4895" start="4873" starttimestamp="1619011563329" timestamp="1979364" />
  <Command __id="1637" _type="CopyCommand" date="Wed Apr 21 09:59:02 EDT 2021" starttimestamp="1619011563329" timestamp="1979507" />
  <Command __id="1688" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:59:14 EDT 2021" starttimestamp="1619011563329" timestamp="1990946" />
  <Command __id="1689" _type="EclipseCommand" commandID="" date="Wed Apr 21 09:59:14 EDT 2021" starttimestamp="1619011563329" timestamp="1990961" />
  <Command __id="1690" _type="MoveCaretCommand" caretOffset="4881" date="Wed Apr 21 09:59:14 EDT 2021" docOffset="4930" starttimestamp="1619011563329" timestamp="1991164" />
  <Command __id="1691" _type="MoveCaretCommand" caretOffset="4865" date="Wed Apr 21 09:59:14 EDT 2021" docOffset="4914" starttimestamp="1619011563329" timestamp="1991537" />
  <Command __id="1692" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:59:33 EDT 2021" starttimestamp="1619011563329" timestamp="2010581" />
  <Command __id="1693" _type="RunCommand" date="Wed Apr 21 09:59:33 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2010647" type="Run" />
  <Command __id="1694" _type="RunCommand" date="Wed Apr 21 09:59:33 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2010647" type="Run" />
  <Command __id="1695" _type="ConsoleOutput" date="Wed Apr 21 09:59:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2010902" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [p, o, w, (, 1, ,, 2, )]
Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]
Testing multi div Expression [p, o, w, (, 1, ,, 2, )]
Testing function Expression [p, o, w, (, 1, ,, 2, )]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:23)"), Diff(INSERT,"p, o, w, (, 1, ,, 2, )]¶Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1696" _type="ShellCommand" date="Wed Apr 21 09:59:34 EDT 2021" starttimestamp="1619011563329" timestamp="2011102" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1697" _type="ConsoleOutput" date="Wed Apr 21 09:59:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2011138" type="ConsoleOutput">
    <outputString><![CDATA[Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]
Testing multi div Expression [p, o, w, (, 1, ,, 2, )]
Testing function Expression [p, o, w, (, 1, ,, 2, )]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
Testing Expression [2]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [p, o, w, (, 1, ,, 2, )]¶"), Diff(EQUAL,"Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶"), Diff(INSERT,"Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [2]¶")]]]></diff>
  </Command>
  <Command __id="1698" _type="ShellCommand" date="Wed Apr 21 09:59:35 EDT 2021" starttimestamp="1619011563329" timestamp="2012471" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1699" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 09:59:42 EDT 2021" starttimestamp="1619011563329" timestamp="2018880" />
  <Command __id="1700" _type="RunCommand" date="Wed Apr 21 09:59:42 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2018944" type="Run" />
  <Command __id="1701" _type="ShellCommand" date="Wed Apr 21 09:59:43 EDT 2021" starttimestamp="1619011563329" timestamp="2019742" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1702" _type="ConsoleOutput" date="Wed Apr 21 09:59:43 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2019901" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [2]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1703" _type="ConsoleOutput" date="Wed Apr 21 09:59:43 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2019976" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1704" _type="ConsoleOutput" date="Wed Apr 21 09:59:45 EDT 2021" overflow="true" starttimestamp="1619011563329" timestamp="2022418" type="ConsoleOutput">
    <outputString><![CDATA[
Testing Expression [a]
class java.lang.StackOverflowError
java.lang.StackOverflowError
	at java.base/java.util.Vector.<init>(Vector.java:155)
	at java.base/java.util.Vector.<init>(Vector.java:164)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	Exceeding 200 lines, infinite loop suspected, output ignored.]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at java.base/java.util.Vector.<init>(Vector.java:155)¶	at java.base/java.util.Vector.<init>(Vector.java:164)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1705" _type="ExceptionCommand" date="Wed Apr 21 09:59:47 EDT 2021" starttimestamp="1619011563329" timestamp="2023746" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.StackOverflowError
	at java.base/java.util.Vector.<init>(Vector.java:155)
	at java.base/java.util.Vector.<init>(Vector.java:164)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="1706" _type="ShellCommand" date="Wed Apr 21 09:59:49 EDT 2021" starttimestamp="1619011563329" timestamp="2026203" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1707" _type="MoveCaretCommand" caretOffset="4876" date="Wed Apr 21 10:00:04 EDT 2021" docOffset="4925" starttimestamp="1619011563329" timestamp="2040830" />
  <Command __id="1708" _type="MoveCaretCommand" caretOffset="4881" date="Wed Apr 21 10:00:04 EDT 2021" docOffset="4930" starttimestamp="1619011563329" timestamp="2041641" />
  <Command __id="1709" _type="MoveCaretCommand" caretOffset="4863" date="Wed Apr 21 10:00:14 EDT 2021" docOffset="4912" starttimestamp="1619011563329" timestamp="2051530" />
  <Command __id="1710" _type="SelectTextCommand" caretOffset="4864" date="Wed Apr 21 10:00:15 EDT 2021" end="4864" start="4852" starttimestamp="1619011563329" timestamp="2051801" />
  <Command __id="1711" _type="MoveCaretCommand" caretOffset="4866" date="Wed Apr 21 10:00:16 EDT 2021" docOffset="4915" starttimestamp="1619011563329" timestamp="2053578" />
  <Command __id="1712" _type="MoveCaretCommand" caretOffset="4860" date="Wed Apr 21 10:00:17 EDT 2021" docOffset="4909" starttimestamp="1619011563329" timestamp="2053922" />
  <Command __id="1713" _type="MoveCaretCommand" caretOffset="4867" date="Wed Apr 21 10:00:26 EDT 2021" docOffset="4916" starttimestamp="1619011563329" timestamp="2063226" />
  <Command __id="1714" _type="MoveCaretCommand" caretOffset="4871" date="Wed Apr 21 10:00:26 EDT 2021" docOffset="4920" starttimestamp="1619011563329" timestamp="2063629" />
  <Command __id="1715" _type="SelectTextCommand" caretOffset="4852" date="Wed Apr 21 10:00:29 EDT 2021" end="4874" start="4852" starttimestamp="1619011563329" timestamp="2065780" />
  <Command __id="1716" _type="MoveCaretCommand" caretOffset="4868" date="Wed Apr 21 10:00:29 EDT 2021" docOffset="4917" starttimestamp="1619011563329" timestamp="2066505" />
  <Command __id="1718" _type="InsertStringCommand" date="Wed Apr 21 10:00:30 EDT 2021" starttimestamp="1619011563329" timestamp="2066900" timestamp2="2066900">
    <data><![CDATA[A]]></data>
  </Command>
  <Command __id="1720" _type="InsertStringCommand" date="Wed Apr 21 10:00:30 EDT 2021" starttimestamp="1619011563329" timestamp="2066913" timestamp2="2066913">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1721" _type="MoveCaretCommand" caretOffset="4870" date="Wed Apr 21 10:00:30 EDT 2021" docOffset="4919" starttimestamp="1619011563329" timestamp="2067507" />
  <Command __id="1723" _type="UndoCommand" date="Wed Apr 21 10:00:31 EDT 2021" starttimestamp="1619011563329" timestamp="2068019" />
  <Command __id="1725" _type="UndoCommand" date="Wed Apr 21 10:00:31 EDT 2021" starttimestamp="1619011563329" timestamp="2068229" />
  <Command __id="1727" _type="UndoCommand" date="Wed Apr 21 10:00:31 EDT 2021" starttimestamp="1619011563329" timestamp="2068582" />
  <Command __id="1729" _type="UndoCommand" date="Wed Apr 21 10:00:32 EDT 2021" starttimestamp="1619011563329" timestamp="2068885" />
  <Command __id="1731" _type="UndoCommand" date="Wed Apr 21 10:00:32 EDT 2021" starttimestamp="1619011563329" timestamp="2069138" />
  <Command __id="1733" _type="UndoCommand" date="Wed Apr 21 10:00:32 EDT 2021" starttimestamp="1619011563329" timestamp="2069396" />
  <Command __id="1735" _type="UndoCommand" date="Wed Apr 21 10:00:32 EDT 2021" starttimestamp="1619011563329" timestamp="2069634" />
  <Command __id="1737" _type="UndoCommand" date="Wed Apr 21 10:00:33 EDT 2021" starttimestamp="1619011563329" timestamp="2069874" />
  <Command __id="1739" _type="UndoCommand" date="Wed Apr 21 10:00:33 EDT 2021" starttimestamp="1619011563329" timestamp="2070159" />
  <Command __id="1741" _type="UndoCommand" date="Wed Apr 21 10:00:33 EDT 2021" starttimestamp="1619011563329" timestamp="2070388" />
  <Command __id="1742" _type="MoveCaretCommand" caretOffset="4902" date="Wed Apr 21 10:00:34 EDT 2021" docOffset="4951" starttimestamp="1619011563329" timestamp="2071019" />
  <Command __id="1743" _type="MoveCaretCommand" caretOffset="4884" date="Wed Apr 21 10:00:34 EDT 2021" docOffset="4933" starttimestamp="1619011563329" timestamp="2071382" />
  <Command __id="1744" _type="MoveCaretCommand" caretOffset="4890" date="Wed Apr 21 10:00:35 EDT 2021" docOffset="4939" starttimestamp="1619011563329" timestamp="2071678" />
  <Command __id="1745" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:00:35 EDT 2021" starttimestamp="1619011563329" timestamp="2072010" />
  <Command __id="1746" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:00:35 EDT 2021" starttimestamp="1619011563329" timestamp="2072115" />
  <Command __id="1747" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:00:35 EDT 2021" starttimestamp="1619011563329" timestamp="2072129" />
  <DocumentChange __id="1613" _type="Insert" date="Wed Apr 21 09:58:37 EDT 2021" docASTNodeCount="951" docActiveCodeLength="5578" docExpressionCount="655" docLength="5578" length="8" offset="4833" repeat="2" starttimestamp="1619011563329" timestamp="1954012" timestamp2="1954184">
    <text><![CDATA[
		
		]]></text>
  </DocumentChange>
  <DocumentChange __id="1621" _type="Replace" date="Wed Apr 21 09:58:48 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5688" docExpressionCount="668" docLength="5688" endLine="131" insertionLength="112" int_docASTNodeCount="951" int_docActiveCodeLength="5576" int_docExpressionCount="655" int_docLength="5576" length="2" offset="4839" startLine="131" starttimestamp="1619011563329" timestamp="1964925">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, getTexVector(thisNode));
		}]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1639" _type="Delete" date="Wed Apr 21 09:59:06 EDT 2021" docASTNodeCount="958" docActiveCodeLength="5624" docExpressionCount="660" docLength="5624" endLine="132" length="64" offset="4882" startLine="132" starttimestamp="1619011563329" timestamp="1983141">
    <text><![CDATA[childrenVector = concat(childrenVector, getTexVector(thisNode));]]></text>
  </DocumentChange>
  <DocumentChange __id="1641" _type="Insert" date="Wed Apr 21 09:59:06 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5631" docExpressionCount="661" docLength="5631" length="7" offset="4882" repeat="7" starttimestamp="1619011563329" timestamp="1983500" timestamp2="1984108">
    <text><![CDATA[Systemn]]></text>
  </DocumentChange>
  <DocumentChange __id="1655" _type="Delete" date="Wed Apr 21 09:59:08 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5629" docExpressionCount="661" docLength="5629" endLine="132" length="2" offset="4887" repeat="2" startLine="132" starttimestamp="1619011563329" timestamp="1985093" timestamp2="1985236">
    <text><![CDATA[mn]]></text>
  </DocumentChange>
  <DocumentChange __id="1659" _type="Insert" date="Wed Apr 21 09:59:09 EDT 2021" docASTNodeCount="962" docActiveCodeLength="5634" docExpressionCount="663" docLength="5634" length="5" offset="4887" repeat="5" starttimestamp="1619011563329" timestamp="1985834" timestamp2="1986630">
    <text><![CDATA[m.out]]></text>
  </DocumentChange>
  <DocumentChange __id="1668" _type="Replace" date="Wed Apr 21 09:59:10 EDT 2021" docASTNodeCount="958" docActiveCodeLength="5635" docExpressionCount="660" docLength="5635" endLine="132" insertionLength="4" int_docASTNodeCount="958" int_docActiveCodeLength="5631" int_docExpressionCount="660" int_docLength="5631" length="3" offset="4889" startLine="132" starttimestamp="1619011563329" timestamp="1986938">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1671" _type="Insert" date="Wed Apr 21 09:59:10 EDT 2021" docASTNodeCount="964" docActiveCodeLength="5644" docExpressionCount="665" docLength="5644" length="9" offset="4893" repeat="8" starttimestamp="1619011563329" timestamp="1987150" timestamp2="1988298">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <DocumentChange __id="1680" _type="Replace" date="Wed Apr 21 09:59:12 EDT 2021" docASTNodeCount="964" docActiveCodeLength="5645" docExpressionCount="665" docLength="5645" endLine="132" insertionLength="10" int_docASTNodeCount="958" int_docActiveCodeLength="5635" int_docExpressionCount="660" int_docLength="5635" length="9" offset="4893" startLine="132" starttimestamp="1619011563329" timestamp="1989205">
    <deletedText><![CDATA[println()]]></deletedText>
    <insertedText><![CDATA[println();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1684" _type="Insert" date="Wed Apr 21 09:59:13 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5667" docExpressionCount="668" docLength="5667" length="22" offset="4901" starttimestamp="1619011563329" timestamp="1989895">
    <text><![CDATA[getTexVector(thisNode)]]></text>
  </DocumentChange>
  <DocumentChange __id="1717" _type="Insert" date="Wed Apr 21 10:00:30 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5669" docExpressionCount="668" docLength="5669" length="2" offset="4917" repeat="2" starttimestamp="1619011563329" timestamp="2066898" timestamp2="2066911">
    <text><![CDATA[AS]]></text>
  </DocumentChange>
  <DocumentChange __id="1722" _type="Delete" date="Wed Apr 21 10:00:31 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5667" docExpressionCount="668" docLength="5667" endLine="132" length="2" offset="4917" startLine="132" starttimestamp="1619011563329" timestamp="2068012">
    <text><![CDATA[AS]]></text>
  </DocumentChange>
  <DocumentChange __id="1724" _type="Delete" date="Wed Apr 21 10:00:31 EDT 2021" docASTNodeCount="964" docActiveCodeLength="5645" docExpressionCount="665" docLength="5645" endLine="132" length="22" offset="4901" startLine="132" starttimestamp="1619011563329" timestamp="2068222">
    <text><![CDATA[getTexVector(thisNode)]]></text>
  </DocumentChange>
  <DocumentChange __id="1726" _type="Replace" date="Wed Apr 21 10:00:31 EDT 2021" docASTNodeCount="964" docActiveCodeLength="5644" docExpressionCount="665" docLength="5644" endLine="132" insertionLength="9" int_docASTNodeCount="958" int_docActiveCodeLength="5635" int_docExpressionCount="660" int_docLength="5635" length="10" offset="4893" startLine="132" starttimestamp="1619011563329" timestamp="2068565">
    <deletedText><![CDATA[println();]]></deletedText>
    <insertedText><![CDATA[println()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1728" _type="Delete" date="Wed Apr 21 10:00:32 EDT 2021" docASTNodeCount="958" docActiveCodeLength="5635" docExpressionCount="660" docLength="5635" endLine="132" length="9" offset="4893" repeat="2" startLine="132" starttimestamp="1619011563329" timestamp="2068880" timestamp2="2069134">
    <text><![CDATA[println()]]></text>
  </DocumentChange>
  <DocumentChange __id="1732" _type="Replace" date="Wed Apr 21 10:00:32 EDT 2021" docASTNodeCount="962" docActiveCodeLength="5634" docExpressionCount="663" docLength="5634" endLine="132" insertionLength="3" int_docASTNodeCount="958" int_docActiveCodeLength="5631" int_docExpressionCount="660" int_docLength="5631" length="4" offset="4889" startLine="132" starttimestamp="1619011563329" timestamp="2069380">
    <deletedText><![CDATA[out.]]></deletedText>
    <insertedText><![CDATA[out]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1734" _type="Delete" date="Wed Apr 21 10:00:32 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5629" docExpressionCount="661" docLength="5629" endLine="132" length="5" offset="4887" startLine="132" starttimestamp="1619011563329" timestamp="2069629">
    <text><![CDATA[m.out]]></text>
  </DocumentChange>
  <DocumentChange __id="1736" _type="Insert" date="Wed Apr 21 10:00:33 EDT 2021" docASTNodeCount="960" docActiveCodeLength="5631" docExpressionCount="661" docLength="5631" length="2" offset="4887" starttimestamp="1619011563329" timestamp="2069872">
    <text><![CDATA[mn]]></text>
  </DocumentChange>
  <DocumentChange __id="1738" _type="Delete" date="Wed Apr 21 10:00:33 EDT 2021" docASTNodeCount="958" docActiveCodeLength="5624" docExpressionCount="660" docLength="5624" endLine="132" length="7" offset="4882" startLine="132" starttimestamp="1619011563329" timestamp="2070154">
    <text><![CDATA[Systemn]]></text>
  </DocumentChange>
  <DocumentChange __id="1740" _type="Insert" date="Wed Apr 21 10:00:33 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5688" docExpressionCount="668" docLength="5688" length="64" offset="4882" starttimestamp="1619011563329" timestamp="2070386">
    <text><![CDATA[childrenVector = concat(childrenVector, getTexVector(thisNode));]]></text>
  </DocumentChange>
  <DocumentChange __id="1749" _type="Replace" date="Wed Apr 21 10:00:37 EDT 2021" docASTNodeCount="965" docActiveCodeLength="5667" docExpressionCount="666" docLength="5667" endLine="132" insertionLength="1" int_docASTNodeCount="965" int_docActiveCodeLength="5666" int_docExpressionCount="666" int_docLength="5666" length="22" offset="4922" startLine="132" starttimestamp="1619011563329" timestamp="2074351">
    <deletedText><![CDATA[getTexVector(thisNode)]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1751" _type="Insert" date="Wed Apr 21 10:00:37 EDT 2021" docASTNodeCount="965" docActiveCodeLength="5670" docExpressionCount="666" docLength="5670" length="3" offset="4923" repeat="3" starttimestamp="1619011563329" timestamp="2074546" timestamp2="2074824">
    <text><![CDATA[his]]></text>
  </DocumentChange>
  <DocumentChange __id="1757" _type="Delete" date="Wed Apr 21 10:00:38 EDT 2021" docASTNodeCount="965" docActiveCodeLength="5666" docExpressionCount="666" docLength="5666" endLine="132" length="4" offset="4922" repeat="4" startLine="132" starttimestamp="1619011563329" timestamp="2075334" timestamp2="2075764">
    <text><![CDATA[this]]></text>
  </DocumentChange>
  <Command __id="1795" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:00:46 EDT 2021" starttimestamp="1619011563329" timestamp="2082816" />
  <Command __id="1796" _type="MoveCaretCommand" caretOffset="4828" date="Wed Apr 21 10:00:46 EDT 2021" docOffset="4877" starttimestamp="1619011563329" timestamp="2083008" />
  <Command __id="1797" _type="MoveCaretCommand" caretOffset="4873" date="Wed Apr 21 10:00:49 EDT 2021" docOffset="4922" starttimestamp="1619011563329" timestamp="2085898" />
  <DocumentChange __id="1765" _type="Insert" date="Wed Apr 21 10:00:40 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5680" docExpressionCount="668" docLength="5680" length="14" offset="4922" repeat="14" starttimestamp="1619011563329" timestamp="2076936" timestamp2="2081112">
    <text><![CDATA[thisNode.getUs]]></text>
  </DocumentChange>
  <DocumentChange __id="1790" _type="Replace" date="Wed Apr 21 10:00:44 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5690" docExpressionCount="668" docLength="5690" endLine="132" insertionLength="15" int_docASTNodeCount="967" int_docActiveCodeLength="5675" int_docExpressionCount="667" int_docLength="5675" length="5" offset="4931" startLine="132" starttimestamp="1619011563329" timestamp="2081481">
    <deletedText><![CDATA[getUs]]></deletedText>
    <insertedText><![CDATA[getUserObject()]]></insertedText>
  </DocumentChange>
  <Command __id="1798" _type="MoveCaretCommand" caretOffset="4828" date="Wed Apr 21 10:00:54 EDT 2021" docOffset="4877" starttimestamp="1619011563329" timestamp="2091447" />
  <Command __id="1800" _type="InsertStringCommand" date="Wed Apr 21 10:00:56 EDT 2021" starttimestamp="1619011563329" timestamp="2093586" timestamp2="2093586">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1801" _type="SelectTextCommand" caretOffset="787" date="Wed Apr 21 10:01:01 EDT 2021" end="843" start="787" starttimestamp="1619011563329" timestamp="2097946" />
  <Command __id="1802" _type="CopyCommand" date="Wed Apr 21 10:01:01 EDT 2021" starttimestamp="1619011563329" timestamp="2098088" />
  <Command __id="1803" _type="MoveCaretCommand" caretOffset="4833" date="Wed Apr 21 10:01:03 EDT 2021" docOffset="4882" starttimestamp="1619011563329" timestamp="2100407" />
  <Command __id="1805" _type="PasteCommand" date="Wed Apr 21 10:01:03 EDT 2021" starttimestamp="1619011563329" timestamp="2100565" />
  <DocumentChange __id="1799" _type="Insert" date="Wed Apr 21 10:00:56 EDT 2021" docASTNodeCount="967" docActiveCodeLength="5695" docExpressionCount="668" docLength="5695" length="5" offset="4877" starttimestamp="1619011563329" timestamp="2093575">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="1804" _type="Replace" date="Wed Apr 21 10:01:03 EDT 2021" docASTNodeCount="981" docActiveCodeLength="5751" docExpressionCount="674" docLength="5751" endLine="132" insertionLength="59" int_docASTNodeCount="967" int_docActiveCodeLength="5692" int_docExpressionCount="668" int_docLength="5692" length="3" offset="4879" startLine="132" starttimestamp="1619011563329" timestamp="2100559">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			Vector<Character> fracVector = new Vector<Character> ();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1807" _type="Replace" date="Wed Apr 21 10:01:06 EDT 2021" docASTNodeCount="981" docActiveCodeLength="5748" docExpressionCount="674" docLength="5748" endLine="132" insertionLength="1" int_docASTNodeCount="981" int_docActiveCodeLength="5747" int_docExpressionCount="674" int_docLength="5747" length="4" offset="4900" startLine="132" starttimestamp="1619011563329" timestamp="2102782">
    <deletedText><![CDATA[frac]]></deletedText>
    <insertedText><![CDATA[n]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1809" _type="Insert" date="Wed Apr 21 10:01:06 EDT 2021" docASTNodeCount="981" docActiveCodeLength="5750" docExpressionCount="674" docLength="5750" length="2" offset="4901" repeat="2" starttimestamp="1619011563329" timestamp="2102842" timestamp2="2102889">
    <text><![CDATA[ew]]></text>
  </DocumentChange>
  <Command __id="1806" _type="SelectTextCommand" caretOffset="4851" date="Wed Apr 21 10:01:05 EDT 2021" end="4855" start="4851" starttimestamp="1619011563329" timestamp="2102225" />
  <Command __id="1808" _type="InsertStringCommand" date="Wed Apr 21 10:01:06 EDT 2021" starttimestamp="1619011563329" timestamp="2102786" timestamp2="2102786">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1810" _type="InsertStringCommand" date="Wed Apr 21 10:01:06 EDT 2021" starttimestamp="1619011563329" timestamp="2102845" timestamp2="2102845">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1812" _type="InsertStringCommand" date="Wed Apr 21 10:01:06 EDT 2021" starttimestamp="1619011563329" timestamp="2102892" timestamp2="2102892">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1813" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:01:06 EDT 2021" starttimestamp="1619011563329" timestamp="2103394" />
  <Command __id="1814" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:06 EDT 2021" starttimestamp="1619011563329" timestamp="2103500" />
  <Command __id="1815" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:06 EDT 2021" starttimestamp="1619011563329" timestamp="2103513" />
  <Command __id="1816" _type="MoveCaretCommand" caretOffset="4888" date="Wed Apr 21 10:01:07 EDT 2021" docOffset="4937" starttimestamp="1619011563329" timestamp="2104257" />
  <Command __id="1818" _type="InsertStringCommand" date="Wed Apr 21 10:01:09 EDT 2021" starttimestamp="1619011563329" timestamp="2106417" timestamp2="2106417">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1820" _type="InsertStringCommand" date="Wed Apr 21 10:01:10 EDT 2021" starttimestamp="1619011563329" timestamp="2106772" timestamp2="2106772">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1822" _type="InsertStringCommand" date="Wed Apr 21 10:01:10 EDT 2021" starttimestamp="1619011563329" timestamp="2106847" timestamp2="2106847">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1824" _type="InsertStringCommand" date="Wed Apr 21 10:01:10 EDT 2021" starttimestamp="1619011563329" timestamp="2106863" timestamp2="2106863">
    <data><![CDATA[w]]></data>
  </Command>
  <Command __id="1826" _type="InsertStringCommand" date="Wed Apr 21 10:01:11 EDT 2021" starttimestamp="1619011563329" timestamp="2107930" timestamp2="2107930">
    <data><![CDATA[V]]></data>
  </Command>
  <Command __id="1828" _type="InsertStringCommand" date="Wed Apr 21 10:01:11 EDT 2021" starttimestamp="1619011563329" timestamp="2108460" timestamp2="2108460">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1830" _type="InsertStringCommand" date="Wed Apr 21 10:01:11 EDT 2021" starttimestamp="1619011563329" timestamp="2108656" timestamp2="2108656">
    <data><![CDATA[c]]></data>
  </Command>
  <Command __id="1832" _type="InsertStringCommand" date="Wed Apr 21 10:01:12 EDT 2021" starttimestamp="1619011563329" timestamp="2108790" timestamp2="2108790">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1834" _type="InsertStringCommand" date="Wed Apr 21 10:01:12 EDT 2021" starttimestamp="1619011563329" timestamp="2108989" timestamp2="2108989">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1836" _type="InsertStringCommand" date="Wed Apr 21 10:01:12 EDT 2021" starttimestamp="1619011563329" timestamp="2109077" timestamp2="2109077">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="1838" _type="InsertStringCommand" date="Wed Apr 21 10:01:12 EDT 2021" starttimestamp="1619011563329" timestamp="2109341" timestamp2="2109341">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1839" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:01:12 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="2109343" />
  <Command __id="1843" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:01:13 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="2110253" />
  <Command __id="1845" _type="InsertStringCommand" date="Wed Apr 21 10:01:13 EDT 2021" starttimestamp="1619011563329" timestamp="2110281" timestamp2="2110281">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1846" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:01:14 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="2111425" />
  <Command __id="1847" _type="MoveCaretCommand" caretOffset="5016" date="Wed Apr 21 10:01:14 EDT 2021" docOffset="5065" starttimestamp="1619011563329" timestamp="2111491" />
  <Command __id="1848" _type="SelectTextCommand" caretOffset="4938" date="Wed Apr 21 10:01:17 EDT 2021" end="4952" start="4938" starttimestamp="1619011563329" timestamp="2114210" />
  <Command __id="1849" _type="MoveCaretCommand" caretOffset="4985" date="Wed Apr 21 10:01:17 EDT 2021" docOffset="5034" starttimestamp="1619011563329" timestamp="2114464" />
  <Command __id="1850" _type="SelectTextCommand" caretOffset="4954" date="Wed Apr 21 10:01:19 EDT 2021" end="4978" start="4954" starttimestamp="1619011563329" timestamp="2116159" />
  <Command __id="1851" _type="CopyCommand" date="Wed Apr 21 10:01:19 EDT 2021" starttimestamp="1619011563329" timestamp="2116358" />
  <Command __id="1852" _type="SelectTextCommand" caretOffset="4906" date="Wed Apr 21 10:01:20 EDT 2021" end="4908" start="4906" starttimestamp="1619011563329" timestamp="2117191" />
  <Command __id="1854" _type="PasteCommand" date="Wed Apr 21 10:01:20 EDT 2021" starttimestamp="1619011563329" timestamp="2117313" />
  <Command __id="1856" _type="UndoCommand" date="Wed Apr 21 10:01:21 EDT 2021" starttimestamp="1619011563329" timestamp="2117956" />
  <Command __id="1857" _type="MoveCaretCommand" caretOffset="4908" date="Wed Apr 21 10:01:21 EDT 2021" docOffset="4957" starttimestamp="1619011563329" timestamp="2118581" />
  <Command __id="1859" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:01:22 EDT 2021" starttimestamp="1619011563329" timestamp="2119480" />
  <Command __id="1861" _type="PasteCommand" date="Wed Apr 21 10:01:22 EDT 2021" starttimestamp="1619011563329" timestamp="2119651" />
  <Command __id="1862" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:01:23 EDT 2021" starttimestamp="1619011563329" timestamp="2120066" />
  <Command __id="1864" _type="InsertStringCommand" date="Wed Apr 21 10:01:24 EDT 2021" starttimestamp="1619011563329" timestamp="2120692" timestamp2="2120692">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="1865" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:01:24 EDT 2021" starttimestamp="1619011563329" timestamp="2120857" />
  <Command __id="1866" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:24 EDT 2021" starttimestamp="1619011563329" timestamp="2120966" />
  <Command __id="1867" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:24 EDT 2021" starttimestamp="1619011563329" timestamp="2120981" />
  <Command __id="1868" _type="MoveCaretCommand" caretOffset="5047" date="Wed Apr 21 10:01:24 EDT 2021" docOffset="5096" starttimestamp="1619011563329" timestamp="2121559" />
  <Command __id="1869" _type="MoveCaretCommand" caretOffset="5044" date="Wed Apr 21 10:01:25 EDT 2021" docOffset="5093" starttimestamp="1619011563329" timestamp="2121728" />
  <Command __id="1870" _type="MoveCaretCommand" caretOffset="4933" date="Wed Apr 21 10:01:25 EDT 2021" docOffset="4982" starttimestamp="1619011563329" timestamp="2122246" />
  <Command __id="1871" _type="MoveCaretCommand" caretOffset="4855" date="Wed Apr 21 10:01:33 EDT 2021" docOffset="4904" starttimestamp="1619011563329" timestamp="2129869" />
  <Command __id="1872" _type="ShellCommand" date="Wed Apr 21 10:01:38 EDT 2021" starttimestamp="1619011563329" timestamp="2135269" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1873" _type="ShellCommand" date="Wed Apr 21 10:01:38 EDT 2021" starttimestamp="1619011563329" timestamp="2135350" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1877" _type="MoveCaretCommand" caretOffset="4978" date="Wed Apr 21 10:01:39 EDT 2021" docOffset="5027" starttimestamp="1619011563329" timestamp="2135855" />
  <Command __id="1878" _type="MoveCaretCommand" caretOffset="4988" date="Wed Apr 21 10:01:39 EDT 2021" docOffset="5037" starttimestamp="1619011563329" timestamp="2136129" />
  <Command __id="1879" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:01:40 EDT 2021" starttimestamp="1619011563329" timestamp="2136903" />
  <Command __id="1880" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:40 EDT 2021" starttimestamp="1619011563329" timestamp="2137006" />
  <Command __id="1881" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:40 EDT 2021" starttimestamp="1619011563329" timestamp="2137020" />
  <Command __id="1882" _type="SelectTextCommand" caretOffset="4999" date="Wed Apr 21 10:01:41 EDT 2021" end="5014" start="4999" starttimestamp="1619011563329" timestamp="2138553" />
  <Command __id="1883" _type="MoveCaretCommand" caretOffset="5052" date="Wed Apr 21 10:01:47 EDT 2021" docOffset="5101" starttimestamp="1619011563329" timestamp="2144259" />
  <Command __id="1884" _type="ShellCommand" date="Wed Apr 21 10:01:52 EDT 2021" starttimestamp="1619011563329" timestamp="2149221" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1885" _type="ShellCommand" date="Wed Apr 21 10:01:52 EDT 2021" starttimestamp="1619011563329" timestamp="2149311" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1889" _type="SelectTextCommand" caretOffset="4830" date="Wed Apr 21 10:01:54 EDT 2021" end="4945" start="4830" starttimestamp="1619011563329" timestamp="2150700" />
  <Command __id="1891" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:01:54 EDT 2021" starttimestamp="1619011563329" timestamp="2151473" />
  <Command __id="1893" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:01:55 EDT 2021" starttimestamp="1619011563329" timestamp="2151695" />
  <Command __id="1894" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:01:55 EDT 2021" starttimestamp="1619011563329" timestamp="2152024" />
  <Command __id="1895" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:55 EDT 2021" starttimestamp="1619011563329" timestamp="2152124" />
  <Command __id="1896" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:01:55 EDT 2021" starttimestamp="1619011563329" timestamp="2152139" />
  <Command __id="1897" _type="MoveCaretCommand" caretOffset="4928" date="Wed Apr 21 10:01:55 EDT 2021" docOffset="4977" starttimestamp="1619011563329" timestamp="2152555" />
  <Command __id="1898" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:02:01 EDT 2021" starttimestamp="1619011563329" timestamp="2157867" />
  <Command __id="1899" _type="RunCommand" date="Wed Apr 21 10:02:01 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2157934" type="Run" />
  <Command __id="1900" _type="ShellCommand" date="Wed Apr 21 10:02:02 EDT 2021" starttimestamp="1619011563329" timestamp="2158744" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1901" _type="ConsoleOutput" date="Wed Apr 21 10:02:02 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2159102" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at java.base/java.util.Vector.<init>(Vector.java:155)¶	at java.base/java.util.Vector.<init>(Vector.java:164)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1902" _type="ConsoleOutput" date="Wed Apr 21 10:02:02 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2159218" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1903" _type="ConsoleOutput" date="Wed Apr 21 10:02:04 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2161385" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1904" _type="ConsoleOutput" date="Wed Apr 21 10:02:04 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2161611" type="ConsoleOutput">
    <outputString><![CDATA[W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]"), Diff(INSERT,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1905" _type="ConsoleOutput" date="Wed Apr 21 10:02:07 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2164447" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, b, c]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [a, b, c]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1906" _type="ShellCommand" date="Wed Apr 21 10:02:08 EDT 2021" starttimestamp="1619011563329" timestamp="2165236" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1907" _type="RunCommand" date="Wed Apr 21 10:02:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2165424" type="Run" />
  <Command __id="1908" _type="RunCommand" date="Wed Apr 21 10:02:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2165424" type="Run" />
  <Command __id="1909" _type="MoveCaretCommand" caretOffset="4928" date="Wed Apr 21 10:02:09 EDT 2021" docOffset="4977" starttimestamp="1619011563329" timestamp="2166597" />
  <Command __id="1910" _type="ShellCommand" date="Wed Apr 21 10:02:40 EDT 2021" starttimestamp="1619011563329" timestamp="2197632" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1911" _type="ConsoleOutput" date="Wed Apr 21 10:02:42 EDT 2021" overflow="true" starttimestamp="1619011563329" timestamp="2198796" type="ConsoleOutput">
    <outputString><![CDATA[
Testing Expression [a]
class java.lang.StackOverflowError
java.lang.StackOverflowError
	at java.base/java.util.Vector.<init>(Vector.java:155)
	at java.base/java.util.Vector.<init>(Vector.java:164)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)
	Exceeding 200 lines, infinite loop suspected, output ignored.]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [a"), Diff(DELETE,", b, c]"), Diff(INSERT,"]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at java.base/java.util.Vector.<init>(Vector.java:155)¶	at java.base/java.util.Vector.<init>(Vector.java:164)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1913" _type="RunCommand" date="Wed Apr 21 10:02:46 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2203571" type="Run" />
  <Command __id="1914" _type="RunCommand" date="Wed Apr 21 10:02:46 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2203571" type="Run" />
  <Command __id="1915" _type="ShellCommand" date="Wed Apr 21 10:02:46 EDT 2021" starttimestamp="1619011563329" timestamp="2203610" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1916" _type="MoveCaretCommand" caretOffset="3105" date="Wed Apr 21 10:02:46 EDT 2021" docOffset="3154" starttimestamp="1619011563329" timestamp="2203635" />
  <Command __id="1917" _type="MoveCaretCommand" caretOffset="3105" date="Wed Apr 21 10:02:47 EDT 2021" docOffset="3154" starttimestamp="1619011563329" timestamp="2203689" />
  <Command __id="1918" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:02:50 EDT 2021" starttimestamp="1619011563329" timestamp="2207535" />
  <Command __id="1919" _type="RunCommand" date="Wed Apr 21 10:02:51 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2207752" type="Run" />
  <Command __id="1920" _type="RunCommand" date="Wed Apr 21 10:02:51 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2207752" type="Run" />
  <Command __id="1921" _type="ShellCommand" date="Wed Apr 21 10:02:51 EDT 2021" starttimestamp="1619011563329" timestamp="2208542" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="1922" _type="ConsoleOutput" date="Wed Apr 21 10:02:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2208858" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶class java.lang.StackOverflowError¶java.lang.StackOverflowError¶	at java.base/java.util.Vector.<init>(Vector.java:155)¶	at java.base/java.util.Vector.<init>(Vector.java:164)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:21)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)¶	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:133)"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1923" _type="ConsoleOutput" date="Wed Apr 21 10:02:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2208973" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="1924" _type="ConsoleOutput" date="Wed Apr 21 10:02:54 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2210682" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <DocumentChange __id="1817" _type="Insert" date="Wed Apr 21 10:01:09 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5768" docExpressionCount="676" docLength="5768" length="18" offset="4937" repeat="14" starttimestamp="1619011563329" timestamp="2106408" timestamp2="2109924">
    <text><![CDATA[
			newVector.add]]></text>
  </DocumentChange>
  <DocumentChange __id="1844" _type="Replace" date="Wed Apr 21 10:01:13 EDT 2021" docASTNodeCount="986" docActiveCodeLength="5771" docExpressionCount="678" docLength="5771" endLine="133" insertionLength="6" int_docASTNodeCount="983" int_docActiveCodeLength="5765" int_docExpressionCount="676" int_docLength="5765" length="3" offset="4952" startLine="133" starttimestamp="1619011563329" timestamp="2110255">
    <deletedText><![CDATA[add]]></deletedText>
    <insertedText><![CDATA[add(e)]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1853" _type="Replace" date="Wed Apr 21 10:01:20 EDT 2021" docASTNodeCount="987" docActiveCodeLength="5793" docExpressionCount="679" docLength="5793" endLine="133" insertionLength="24" int_docASTNodeCount="985" int_docActiveCodeLength="5769" int_docExpressionCount="676" int_docLength="5769" length="2" offset="4955" startLine="133" starttimestamp="1619011563329" timestamp="2117307">
    <deletedText><![CDATA[(e]]></deletedText>
    <insertedText><![CDATA[thisNode.getUserObject()]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1855" _type="Replace" date="Wed Apr 21 10:01:21 EDT 2021" docASTNodeCount="986" docActiveCodeLength="5771" docExpressionCount="678" docLength="5771" endLine="133" insertionLength="2" int_docASTNodeCount="985" int_docActiveCodeLength="5769" int_docExpressionCount="676" int_docLength="5769" length="24" offset="4955" startLine="133" starttimestamp="1619011563329" timestamp="2117951">
    <deletedText><![CDATA[thisNode.getUserObject()]]></deletedText>
    <insertedText><![CDATA[(e]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1858" _type="Delete" date="Wed Apr 21 10:01:22 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5770" docExpressionCount="677" docLength="5770" endLine="133" length="1" offset="4956" startLine="133" starttimestamp="1619011563329" timestamp="2119474">
    <text><![CDATA[e]]></text>
  </DocumentChange>
  <DocumentChange __id="1860" _type="Insert" date="Wed Apr 21 10:01:22 EDT 2021" docASTNodeCount="988" docActiveCodeLength="5794" docExpressionCount="680" docLength="5794" length="24" offset="4956" starttimestamp="1619011563329" timestamp="2119643">
    <text><![CDATA[thisNode.getUserObject()]]></text>
  </DocumentChange>
  <DocumentChange __id="1863" _type="Insert" date="Wed Apr 21 10:01:24 EDT 2021" docASTNodeCount="988" docActiveCodeLength="5795" docExpressionCount="680" docLength="5795" length="1" offset="4981" starttimestamp="1619011563329" timestamp="2120684">
    <text><![CDATA[;]]></text>
  </DocumentChange>
  <DocumentChange __id="1874" _type="Delete" date="Wed Apr 21 10:01:38 EDT 2021" docASTNodeCount="985" docActiveCodeLength="5771" docExpressionCount="677" docLength="5771" endLine="133" length="24" offset="4956" startLine="133" starttimestamp="1619011563329" timestamp="2135412">
    <text><![CDATA[thisNode.getUserObject()]]></text>
  </DocumentChange>
  <DocumentChange __id="1875" _type="Insert" date="Wed Apr 21 10:01:38 EDT 2021" docASTNodeCount="991" docActiveCodeLength="5807" docExpressionCount="682" docLength="5807" length="36" offset="4956" repeat="2" starttimestamp="1619011563329" timestamp="2135415" timestamp2="2135416">
    <text><![CDATA[(Character) thisNode.getUserObject()]]></text>
  </DocumentChange>
  <DocumentChange __id="1886" _type="Delete" date="Wed Apr 21 10:01:52 EDT 2021" docASTNodeCount="989" docActiveCodeLength="5783" docExpressionCount="680" docLength="5783" endLine="134" length="24" offset="5039" startLine="134" starttimestamp="1619011563329" timestamp="2149321">
    <text><![CDATA[thisNode.getUserObject()]]></text>
  </DocumentChange>
  <DocumentChange __id="1887" _type="Insert" date="Wed Apr 21 10:01:52 EDT 2021" docASTNodeCount="997" docActiveCodeLength="5827" docExpressionCount="685" docLength="5827" length="44" offset="5039" repeat="2" starttimestamp="1619011563329" timestamp="2149324" timestamp2="2149325">
    <text><![CDATA[(Vector<Character>) thisNode.getUserObject()]]></text>
  </DocumentChange>
  <DocumentChange __id="1890" _type="Delete" date="Wed Apr 21 10:01:54 EDT 2021" docASTNodeCount="973" docActiveCodeLength="5710" docExpressionCount="671" docLength="5710" endLine="133" length="117" offset="4877" repeat="2" startLine="131" starttimestamp="1619011563329" timestamp="2151468" timestamp2="2151679">
    <text><![CDATA[
			Vector<Character> newVector = new Vector<Character> ();
			newVector.add((Character) thisNode.getUserObject());]]></text>
  </DocumentChange>
  <Command __id="1925" _type="ShellCommand" date="Wed Apr 21 10:02:56 EDT 2021" starttimestamp="1619011563329" timestamp="2213568" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="1926" _type="RunCommand" date="Wed Apr 21 10:02:57 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2213748" type="Run" />
  <Command __id="1927" _type="RunCommand" date="Wed Apr 21 10:02:57 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2213748" type="Run" />
  <Command __id="1928" _type="MoveCaretCommand" caretOffset="1253" date="Wed Apr 21 10:02:57 EDT 2021" docOffset="1302" starttimestamp="1619011563329" timestamp="2214033" />
  <Command __id="1930" _type="MoveCaretCommand" caretOffset="9233" date="Wed Apr 21 10:03:00 EDT 2021" docOffset="10260" starttimestamp="1619011563329" timestamp="2217100" />
  <Command __id="1931" _type="MoveCaretCommand" caretOffset="1081" date="Wed Apr 21 10:03:04 EDT 2021" docOffset="2108" starttimestamp="1619011563329" timestamp="2220945" />
  <Command __id="1932" _type="MoveCaretCommand" caretOffset="1175" date="Wed Apr 21 10:03:04 EDT 2021" docOffset="2202" starttimestamp="1619011563329" timestamp="2221488" />
  <Command __id="1929" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:03:00 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10796" docExpressionCount="1180" docLength="10796" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2217010">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		¶		if (image == null) {¶			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		}¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="1933" _type="MoveCaretCommand" caretOffset="1858" date="Wed Apr 21 10:03:53 EDT 2021" docOffset="2885" starttimestamp="1619011563329" timestamp="2270668" />
  <DocumentChange __id="1934" _type="Insert" date="Wed Apr 21 10:03:55 EDT 2021" docASTNodeCount="1594" docActiveCodeLength="10813" docExpressionCount="1155" docLength="10813" length="17" offset="2885" repeat="14" starttimestamp="1619011563329" timestamp="2272420" timestamp2="2274903">
    <text><![CDATA[
		Systemn.out,.]]></text>
  </DocumentChange>
  <Command __id="1935" _type="InsertStringCommand" date="Wed Apr 21 10:03:55 EDT 2021" starttimestamp="1619011563329" timestamp="2272426" timestamp2="2272426">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="1937" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2272786" timestamp2="2272786">
    <data><![CDATA[S]]></data>
  </Command>
  <Command __id="1939" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2272910" timestamp2="2272910">
    <data><![CDATA[y]]></data>
  </Command>
  <Command __id="1941" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2273010" timestamp2="2273010">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="1943" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2273134" timestamp2="2273134">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1945" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2273251" timestamp2="2273251">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="1947" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2273412" timestamp2="2273412">
    <data><![CDATA[m]]></data>
  </Command>
  <Command __id="1949" _type="InsertStringCommand" date="Wed Apr 21 10:03:56 EDT 2021" starttimestamp="1619011563329" timestamp="2273419" timestamp2="2273419">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="1951" _type="InsertStringCommand" date="Wed Apr 21 10:03:57 EDT 2021" starttimestamp="1619011563329" timestamp="2274109" timestamp2="2274109">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1952" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:03:57 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="2274110" />
  <Command __id="1953" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:03:57 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="2274149" />
  <Command __id="1955" _type="InsertStringCommand" date="Wed Apr 21 10:03:57 EDT 2021" starttimestamp="1619011563329" timestamp="2274425" timestamp2="2274425">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="1957" _type="InsertStringCommand" date="Wed Apr 21 10:03:57 EDT 2021" starttimestamp="1619011563329" timestamp="2274610" timestamp2="2274610">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="1959" _type="InsertStringCommand" date="Wed Apr 21 10:03:57 EDT 2021" starttimestamp="1619011563329" timestamp="2274660" timestamp2="2274660">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="1961" _type="InsertStringCommand" date="Wed Apr 21 10:03:58 EDT 2021" starttimestamp="1619011563329" timestamp="2274880" timestamp2="2274880">
    <data><![CDATA[,]]></data>
  </Command>
  <Command __id="1963" _type="InsertStringCommand" date="Wed Apr 21 10:03:58 EDT 2021" starttimestamp="1619011563329" timestamp="2274906" timestamp2="2274906">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1964" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:03:58 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="2274907" />
  <DocumentChange __id="1965" _type="Delete" date="Wed Apr 21 10:03:58 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10806" docExpressionCount="1181" docLength="10806" endLine="90" length="7" offset="2895" repeat="7" startLine="90" starttimestamp="1619011563329" timestamp="2275275" timestamp2="2276138">
    <text><![CDATA[n.out,.]]></text>
  </DocumentChange>
  <Command __id="1967" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:03:58 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="2275495" />
  <Command __id="1969" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:03:58 EDT 2021" starttimestamp="1619011563329" timestamp="2275579" />
  <Command __id="1971" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:03:59 EDT 2021" starttimestamp="1619011563329" timestamp="2275717" />
  <Command __id="1973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:03:59 EDT 2021" starttimestamp="1619011563329" timestamp="2275848" />
  <Command __id="1975" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:03:59 EDT 2021" starttimestamp="1619011563329" timestamp="2275999" />
  <Command __id="1977" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:03:59 EDT 2021" starttimestamp="1619011563329" timestamp="2276140" />
  <DocumentChange __id="1978" _type="Insert" date="Wed Apr 21 10:04:00 EDT 2021" docASTNodeCount="1627" docActiveCodeLength="10810" docExpressionCount="1183" docLength="10810" length="4" offset="2895" repeat="4" starttimestamp="1619011563329" timestamp="2276695" timestamp2="2277300">
    <text><![CDATA[.out]]></text>
  </DocumentChange>
  <Command __id="1979" _type="InsertStringCommand" date="Wed Apr 21 10:04:00 EDT 2021" starttimestamp="1619011563329" timestamp="2276698" timestamp2="2276698">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1980" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:04:00 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="2276699" />
  <Command __id="1984" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:04:00 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="2277593" />
  <DocumentChange __id="1985" _type="Replace" date="Wed Apr 21 10:04:00 EDT 2021" docASTNodeCount="1623" docActiveCodeLength="10811" docExpressionCount="1180" docLength="10811" endLine="90" insertionLength="4" int_docASTNodeCount="1625" int_docActiveCodeLength="10807" int_docExpressionCount="1181" int_docLength="10807" length="3" offset="2896" startLine="90" starttimestamp="1619011563329" timestamp="2277596">
    <deletedText><![CDATA[out]]></deletedText>
    <insertedText><![CDATA[out.]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="1988" _type="Insert" date="Wed Apr 21 10:04:01 EDT 2021" docASTNodeCount="1629" docActiveCodeLength="10817" docExpressionCount="1185" docLength="10817" length="6" offset="2900" repeat="6" starttimestamp="1619011563329" timestamp="2278354" timestamp2="2279366">
    <text><![CDATA[prinln]]></text>
  </DocumentChange>
  <DocumentChange __id="1994" _type="Delete" date="Wed Apr 21 10:04:03 EDT 2021" docASTNodeCount="1629" docActiveCodeLength="10815" docExpressionCount="1185" docLength="10815" endLine="90" length="2" offset="2904" repeat="2" startLine="90" starttimestamp="1619011563329" timestamp="2279721" timestamp2="2279876">
    <text><![CDATA[ln]]></text>
  </DocumentChange>
  <Command __id="1986" _type="InsertStringCommand" date="Wed Apr 21 10:04:00 EDT 2021" starttimestamp="1619011563329" timestamp="2277600" timestamp2="2277600">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="1987" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:04:00 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="2277603" />
  <Command __id="2001" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:04:05 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="2282481" />
  <Command __id="2003" _type="InsertStringCommand" date="Wed Apr 21 10:04:06 EDT 2021" starttimestamp="1619011563329" timestamp="2283212" timestamp2="2283212">
    <data><![CDATA[R]]></data>
  </Command>
  <Command __id="2005" _type="InsertStringCommand" date="Wed Apr 21 10:04:06 EDT 2021" starttimestamp="1619011563329" timestamp="2283410" timestamp2="2283410">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2007" _type="InsertStringCommand" date="Wed Apr 21 10:04:06 EDT 2021" starttimestamp="1619011563329" timestamp="2283551" timestamp2="2283551">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2009" _type="InsertStringCommand" date="Wed Apr 21 10:04:06 EDT 2021" starttimestamp="1619011563329" timestamp="2283661" timestamp2="2283661">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2011" _type="InsertStringCommand" date="Wed Apr 21 10:04:07 EDT 2021" starttimestamp="1619011563329" timestamp="2283860" timestamp2="2283860">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2013" _type="InsertStringCommand" date="Wed Apr 21 10:04:07 EDT 2021" starttimestamp="1619011563329" timestamp="2283962" timestamp2="2283962">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2015" _type="InsertStringCommand" date="Wed Apr 21 10:04:07 EDT 2021" starttimestamp="1619011563329" timestamp="2284417" timestamp2="2284417">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2017" _type="InsertStringCommand" date="Wed Apr 21 10:04:07 EDT 2021" starttimestamp="1619011563329" timestamp="2284500" timestamp2="2284500">
    <data><![CDATA[d]]></data>
  </Command>
  <Command __id="2018" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:04:08 EDT 2021" starttimestamp="1619011563329" timestamp="2285106" />
  <Command __id="2019" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:04:08 EDT 2021" starttimestamp="1619011563329" timestamp="2285205" />
  <Command __id="2020" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:04:08 EDT 2021" starttimestamp="1619011563329" timestamp="2285225" />
  <Command __id="2021" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:04:08 EDT 2021" starttimestamp="1619011563329" timestamp="2285443" />
  <Command __id="2022" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:04:08 EDT 2021" starttimestamp="1619011563329" timestamp="2285585" />
  <Command __id="2024" _type="InsertStringCommand" date="Wed Apr 21 10:04:09 EDT 2021" starttimestamp="1619011563329" timestamp="2285914" timestamp2="2285914">
    <data><![CDATA[;]]></data>
  </Command>
  <Command __id="2025" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:04:09 EDT 2021" starttimestamp="1619011563329" timestamp="2286171" />
  <Command __id="2026" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:04:09 EDT 2021" starttimestamp="1619011563329" timestamp="2286280" />
  <Command __id="2027" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:04:09 EDT 2021" starttimestamp="1619011563329" timestamp="2286300" />
  <Command __id="2028" _type="ShellCommand" date="Wed Apr 21 10:07:10 EDT 2021" starttimestamp="1619011563329" timestamp="2467437" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2029" _type="ShellCommand" date="Wed Apr 21 10:07:12 EDT 2021" starttimestamp="1619011563329" timestamp="2468967" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2030" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:07:16 EDT 2021" starttimestamp="1619011563329" timestamp="2473052" />
  <Command __id="2031" _type="RunCommand" date="Wed Apr 21 10:07:16 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2473213" type="Run" />
  <Command __id="2032" _type="RunCommand" date="Wed Apr 21 10:07:16 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2473213" type="Run" />
  <Command __id="2033" _type="ShellCommand" date="Wed Apr 21 10:07:17 EDT 2021" starttimestamp="1619011563329" timestamp="2474008" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2034" _type="ConsoleOutput" date="Wed Apr 21 10:07:17 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2474106" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2035" _type="ConsoleOutput" date="Wed Apr 21 10:07:17 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2474244" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2036" _type="ConsoleOutput" date="Wed Apr 21 10:07:21 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2477979" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2037" _type="ConsoleOutput" date="Wed Apr 21 10:07:21 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2478251" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2038" _type="ShellCommand" date="Wed Apr 21 10:07:29 EDT 2021" starttimestamp="1619011563329" timestamp="2486486" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2039" _type="SelectTextCommand" caretOffset="1926" date="Wed Apr 21 10:07:31 EDT 2021" end="2007" start="1926" starttimestamp="1619011563329" timestamp="2487813" />
  <Command __id="2040" _type="CopyCommand" date="Wed Apr 21 10:07:32 EDT 2021" starttimestamp="1619011563329" timestamp="2489139" />
  <Command __id="2041" _type="ShellCommand" date="Wed Apr 21 10:07:34 EDT 2021" starttimestamp="1619011563329" timestamp="2490840" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2042" _type="ConsoleOutput" date="Wed Apr 21 10:07:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2491642" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2043" _type="ConsoleOutput" date="Wed Apr 21 10:07:35 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2492207" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2044" _type="ConsoleOutput" date="Wed Apr 21 10:07:35 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2492440" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2045" _type="ConsoleOutput" date="Wed Apr 21 10:07:37 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2494273" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2046" _type="ConsoleOutput" date="Wed Apr 21 10:07:43 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2500560" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2047" _type="ShellCommand" date="Wed Apr 21 10:07:45 EDT 2021" starttimestamp="1619011563329" timestamp="2502631" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2048" _type="RunCommand" date="Wed Apr 21 10:07:46 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2502804" type="Run" />
  <Command __id="2049" _type="RunCommand" date="Wed Apr 21 10:07:46 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2502804" type="Run" />
  <Command __id="2050" _type="MoveCaretCommand" caretOffset="1893" date="Wed Apr 21 10:07:46 EDT 2021" docOffset="2920" starttimestamp="1619011563329" timestamp="2503344" />
  <Command __id="2051" _type="SelectTextCommand" caretOffset="1862" date="Wed Apr 21 10:07:58 EDT 2021" end="1893" start="1862" starttimestamp="1619011563329" timestamp="2514985" />
  <Command __id="2052" _type="MoveCaretCommand" caretOffset="1862" date="Wed Apr 21 10:07:58 EDT 2021" docOffset="2889" starttimestamp="1619011563329" timestamp="2515169" />
  <Command __id="2053" _type="SelectTextCommand" caretOffset="2016" date="Wed Apr 21 10:07:58 EDT 2021" end="2016" start="1897" starttimestamp="1619011563329" timestamp="2515593" />
  <Command __id="2054" _type="MoveCaretCommand" caretOffset="2016" date="Wed Apr 21 10:07:59 EDT 2021" docOffset="3043" starttimestamp="1619011563329" timestamp="2515781" />
  <Command __id="2055" _type="MoveCaretCommand" caretOffset="1944" date="Wed Apr 21 10:07:59 EDT 2021" docOffset="2971" starttimestamp="1619011563329" timestamp="2516154" />
  <Command __id="2056" _type="MoveCaretCommand" caretOffset="2016" date="Wed Apr 21 10:07:59 EDT 2021" docOffset="3043" starttimestamp="1619011563329" timestamp="2516452" />
  <Command __id="2057" _type="SelectTextCommand" caretOffset="1901" date="Wed Apr 21 10:08:00 EDT 2021" end="2012" start="1901" starttimestamp="1619011563329" timestamp="2517315" />
  <Command __id="2058" _type="MoveCaretCommand" caretOffset="1901" date="Wed Apr 21 10:08:00 EDT 2021" docOffset="2928" starttimestamp="1619011563329" timestamp="2517476" />
  <Command __id="2059" _type="SelectTextCommand" caretOffset="2012" date="Wed Apr 21 10:08:01 EDT 2021" end="2012" start="1901" starttimestamp="1619011563329" timestamp="2518116" />
  <Command __id="2060" _type="MoveCaretCommand" caretOffset="2012" date="Wed Apr 21 10:08:01 EDT 2021" docOffset="3039" starttimestamp="1619011563329" timestamp="2518276" />
  <Command __id="2061" _type="SelectTextCommand" caretOffset="1899" date="Wed Apr 21 10:08:09 EDT 2021" end="1921" start="1899" starttimestamp="1619011563329" timestamp="2526372" />
  <Command __id="2063" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:08:10 EDT 2021" starttimestamp="1619011563329" timestamp="2527182" />
  <Command __id="2065" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:08:10 EDT 2021" starttimestamp="1619011563329" timestamp="2527429" />
  <Command __id="2066" _type="SelectTextCommand" caretOffset="1899" date="Wed Apr 21 10:08:11 EDT 2021" end="1988" start="1899" starttimestamp="1619011563329" timestamp="2528188" />
  <Command __id="2067" _type="MoveCaretCommand" caretOffset="1988" date="Wed Apr 21 10:08:11 EDT 2021" docOffset="3015" starttimestamp="1619011563329" timestamp="2528667" />
  <Command __id="2068" _type="SelectTextCommand" caretOffset="1985" date="Wed Apr 21 10:08:12 EDT 2021" end="1988" start="1985" starttimestamp="1619011563329" timestamp="2529513" />
  <Command __id="2070" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:08:12 EDT 2021" starttimestamp="1619011563329" timestamp="2529655" />
  <Command __id="2072" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:08:13 EDT 2021" starttimestamp="1619011563329" timestamp="2530010" />
  <Command __id="2073" _type="MoveCaretCommand" caretOffset="1902" date="Wed Apr 21 10:08:13 EDT 2021" docOffset="2929" starttimestamp="1619011563329" timestamp="2530527" />
  <Command __id="2075" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:08:14 EDT 2021" starttimestamp="1619011563329" timestamp="2530788" />
  <Command __id="2076" _type="MoveCaretCommand" caretOffset="1897" date="Wed Apr 21 10:08:14 EDT 2021" docOffset="2924" starttimestamp="1619011563329" timestamp="2531407" />
  <Command __id="2077" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:08:15 EDT 2021" starttimestamp="1619011563329" timestamp="2532256" />
  <Command __id="2078" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:08:15 EDT 2021" starttimestamp="1619011563329" timestamp="2532355" />
  <Command __id="2079" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:08:15 EDT 2021" starttimestamp="1619011563329" timestamp="2532374" />
  <Command __id="2080" _type="MoveCaretCommand" caretOffset="1877" date="Wed Apr 21 10:08:15 EDT 2021" docOffset="2904" starttimestamp="1619011563329" timestamp="2532556" />
  <Command __id="2081" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:08:19 EDT 2021" starttimestamp="1619011563329" timestamp="2536259" />
  <Command __id="2082" _type="RunCommand" date="Wed Apr 21 10:08:19 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2536439" type="Run" />
  <Command __id="2083" _type="RunCommand" date="Wed Apr 21 10:08:19 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2536439" type="Run" />
  <Command __id="2084" _type="ShellCommand" date="Wed Apr 21 10:08:20 EDT 2021" starttimestamp="1619011563329" timestamp="2537240" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2085" _type="ConsoleOutput" date="Wed Apr 21 10:08:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2537336" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2086" _type="ConsoleOutput" date="Wed Apr 21 10:08:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2537464" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2087" _type="ConsoleOutput" date="Wed Apr 21 10:08:22 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2539623" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2088" _type="ConsoleOutput" date="Wed Apr 21 10:08:23 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2539893" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2089" _type="ShellCommand" date="Wed Apr 21 10:08:24 EDT 2021" starttimestamp="1619011563329" timestamp="2541623" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2090" _type="RunCommand" date="Wed Apr 21 10:08:25 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2541802" type="Run" />
  <Command __id="2091" _type="RunCommand" date="Wed Apr 21 10:08:25 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2541802" type="Run" />
  <Command __id="2092" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:08:31 EDT 2021" starttimestamp="1619011563329" timestamp="2547869" />
  <Command __id="2093" _type="RunCommand" date="Wed Apr 21 10:08:31 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2548033" type="Run" />
  <Command __id="2094" _type="RunCommand" date="Wed Apr 21 10:08:31 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2548033" type="Run" />
  <Command __id="2095" _type="ShellCommand" date="Wed Apr 21 10:08:32 EDT 2021" starttimestamp="1619011563329" timestamp="2548838" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2096" _type="ConsoleOutput" date="Wed Apr 21 10:08:32 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2548932" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2097" _type="ConsoleOutput" date="Wed Apr 21 10:08:32 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2549059" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2098" _type="ConsoleOutput" date="Wed Apr 21 10:08:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2551308" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2099" _type="ConsoleOutput" date="Wed Apr 21 10:08:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2551582" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2100" _type="ExceptionCommand" date="Wed Apr 21 10:08:43 EDT 2021" starttimestamp="1619011563329" timestamp="2559930" type="Exception">
    <exceptionString><![CDATA[Testing Expression [e, x, p, (, x, ), a]
class java.lang.NullPointerException
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2101" _type="ExceptionCommand" date="Wed Apr 21 10:08:44 EDT 2021" starttimestamp="1619011563329" timestamp="2561602" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2102" _type="ConsoleOutput" date="Wed Apr 21 10:08:46 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2563359" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]¶Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2103" _type="ConsoleOutput" date="Wed Apr 21 10:08:48 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2565577" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2104" _type="ConsoleOutput" date="Wed Apr 21 10:08:49 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2565810" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2105" _type="ExceptionCommand" date="Wed Apr 21 10:08:51 EDT 2021" starttimestamp="1619011563329" timestamp="2567725" type="Exception">
    <exceptionString><![CDATA[Testing Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
class java.lang.NullPointerException
Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Testing Expression [s, q, r, t, (, a, ), e]
Testing add-sub Expression [s, q, r, t, (, a, ), e]
Testing multi div Expression [s, q, r, t, (, a, ), e]
Testing function Expression [s, q, r, t, (, a, ), e]
Testing parenthesis Expression [s, q, r, t, (, a, ), e]
Parenthesis Expression [q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Parenthesis Expression [q, r, t, (, a, ), e, ^, {, x]
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaSqrt(MathEditorPanel.java:356)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2106" _type="ExceptionCommand" date="Wed Apr 21 10:08:52 EDT 2021" starttimestamp="1619011563329" timestamp="2568827" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaSqrt(MathEditorPanel.java:356)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2107" _type="ConsoleOutput" date="Wed Apr 21 10:08:55 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="2572352" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing multi div Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing function Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing Expression ["), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing multi div Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing function Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing Expression ["), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing Expression ["), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing Expression ["), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2108" _type="ShellCommand" date="Wed Apr 21 10:08:57 EDT 2021" starttimestamp="1619011563329" timestamp="2574137" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2109" _type="RunCommand" date="Wed Apr 21 10:08:57 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2574304" type="Run" />
  <Command __id="2110" _type="RunCommand" date="Wed Apr 21 10:08:57 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="2574304" type="Run" />
  <Command __id="2111" _type="MoveCaretCommand" caretOffset="1545" date="Wed Apr 21 10:08:58 EDT 2021" docOffset="2572" starttimestamp="1619011563329" timestamp="2574790" />
  <Command __id="2112" _type="MoveCaretCommand" caretOffset="1483" date="Wed Apr 21 10:14:42 EDT 2021" docOffset="2510" starttimestamp="1619011563329" timestamp="2919190" />
  <Command __id="2113" _type="SelectTextCommand" caretOffset="1555" date="Wed Apr 21 10:14:43 EDT 2021" end="1555" start="1095" starttimestamp="1619011563329" timestamp="2919672" />
  <Command __id="2114" _type="MoveCaretCommand" caretOffset="1593" date="Wed Apr 21 10:14:43 EDT 2021" docOffset="2620" starttimestamp="1619011563329" timestamp="2919840" />
  <Command __id="2115" _type="MoveCaretCommand" caretOffset="1858" date="Wed Apr 21 10:14:43 EDT 2021" docOffset="2885" starttimestamp="1619011563329" timestamp="2920482" />
  <Command __id="2116" _type="SelectTextCommand" caretOffset="1862" date="Wed Apr 21 10:14:45 EDT 2021" end="1893" start="1862" starttimestamp="1619011563329" timestamp="2922294" />
  <Command __id="2117" _type="MoveCaretCommand" caretOffset="1862" date="Wed Apr 21 10:14:45 EDT 2021" docOffset="2889" starttimestamp="1619011563329" timestamp="2922614" />
  <Command __id="2118" _type="MoveCaretCommand" caretOffset="1893" date="Wed Apr 21 10:14:46 EDT 2021" docOffset="2920" starttimestamp="1619011563329" timestamp="2923457" />
  <Command __id="2119" _type="SelectTextCommand" caretOffset="1836" date="Wed Apr 21 10:14:48 EDT 2021" end="1893" start="1836" starttimestamp="1619011563329" timestamp="2925032" />
  <Command __id="2120" _type="MoveCaretCommand" caretOffset="1836" date="Wed Apr 21 10:14:48 EDT 2021" docOffset="2863" starttimestamp="1619011563329" timestamp="2925208" />
  <Command __id="2121" _type="MoveCaretCommand" caretOffset="6627" date="Wed Apr 21 10:14:52 EDT 2021" docOffset="7654" starttimestamp="1619011563329" timestamp="2929096" />
  <Command __id="2123" _type="ShellCommand" date="Wed Apr 21 10:14:53 EDT 2021" starttimestamp="1619011563329" timestamp="2929860" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2124" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:54 EDT 2021" forward="false" matchWord="false" offset="7654" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2930919" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2125" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:56 EDT 2021" forward="false" matchWord="false" offset="2915" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2933005" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2126" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:57 EDT 2021" forward="false" matchWord="false" offset="2915" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2933687" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2127" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:57 EDT 2021" forward="false" matchWord="false" offset="2915" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2934036" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2128" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:58 EDT 2021" forward="true" matchWord="false" offset="2915" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2935225" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2129" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:58 EDT 2021" forward="true" matchWord="false" offset="10008" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2935642" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2130" _type="FindCommand" caseSensitive="false" date="Wed Apr 21 10:14:59 EDT 2021" forward="true" matchWord="false" offset="2869" regexp="false" replaceAll="false" selection="Find" selectionScope="false" starttimestamp="1619011563329" timestamp="2936403" wrapSearch="false">
    <searchString><![CDATA[ender]]></searchString>
    <replaceString><![CDATA[]]></replaceString>
  </Command>
  <Command __id="2131" _type="ShellCommand" date="Wed Apr 21 10:15:02 EDT 2021" starttimestamp="1619011563329" timestamp="2939583" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2132" _type="ShellCommand" date="Wed Apr 21 10:19:17 EDT 2021" starttimestamp="1619011563329" timestamp="3193691" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2133" _type="ShellCommand" date="Wed Apr 21 10:22:59 EDT 2021" starttimestamp="1619011563329" timestamp="3416301" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2134" _type="MoveCaretCommand" caretOffset="631" date="Wed Apr 21 10:23:00 EDT 2021" docOffset="1658" starttimestamp="1619011563329" timestamp="3417388" />
  <Command __id="2135" _type="MoveCaretCommand" caretOffset="882" date="Wed Apr 21 10:23:10 EDT 2021" docOffset="1909" starttimestamp="1619011563329" timestamp="3427119" />
  <Command __id="2136" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:23:14 EDT 2021" starttimestamp="1619011563329" timestamp="3431028" />
  <Command __id="2137" _type="RunCommand" date="Wed Apr 21 10:23:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3431205" type="Run" />
  <Command __id="2138" _type="RunCommand" date="Wed Apr 21 10:23:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3431206" type="Run" />
  <Command __id="2139" _type="ShellCommand" date="Wed Apr 21 10:23:15 EDT 2021" starttimestamp="1619011563329" timestamp="3432007" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2140" _type="ConsoleOutput" date="Wed Apr 21 10:23:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3432113" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]¶Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2141" _type="ConsoleOutput" date="Wed Apr 21 10:23:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3432237" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2142" _type="ConsoleOutput" date="Wed Apr 21 10:23:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3437635" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2143" _type="ConsoleOutput" date="Wed Apr 21 10:23:21 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3437861" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2144" _type="ExceptionCommand" date="Wed Apr 21 10:23:24 EDT 2021" starttimestamp="1619011563329" timestamp="3441129" type="Exception">
    <exceptionString><![CDATA[Testing Expression []
class java.lang.NullPointerException
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4719)
	at bus.uigen.oadapters.PrimitiveAdapter.uiComponentValueChanged(PrimitiveAdapter.java:215)
	at bus.uigen.visitors.UpdateAdapterVisitor.visit(UpdateAdapterVisitor.java:20)
	at bus.uigen.visitors.AdapterVisitor.visit(AdapterVisitor.java:671)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:159)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:172)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:28)
	at bus.uigen.uiFrame.subDoUpdateAll(uiFrame.java:3409)
	at bus.uigen.uiFrame.doUpdateAll(uiFrame.java:3395)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1788)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2145" _type="ExceptionCommand" date="Wed Apr 21 10:23:26 EDT 2021" starttimestamp="1619011563329" timestamp="3442966" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4719)
	at bus.uigen.oadapters.PrimitiveAdapter.uiComponentValueChanged(PrimitiveAdapter.java:215)
	at bus.uigen.visitors.UpdateAdapterVisitor.visit(UpdateAdapterVisitor.java:20)
	at bus.uigen.visitors.AdapterVisitor.visit(AdapterVisitor.java:671)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:159)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:172)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:28)
	at bus.uigen.uiFrame.subDoUpdateAll(uiFrame.java:3409)
	at bus.uigen.uiFrame.doUpdateAll(uiFrame.java:3395)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1788)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	... 72 more
Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
class java.lang.NullPointerException
java.lang.NullPointerException
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2146" _type="ExceptionCommand" date="Wed Apr 21 10:23:27 EDT 2021" starttimestamp="1619011563329" timestamp="3444187" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2147" _type="ConsoleOutput" date="Wed Apr 21 10:23:29 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3446305" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]¶Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2148" _type="ConsoleOutput" date="Wed Apr 21 10:23:30 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3447391" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2149" _type="ShellCommand" date="Wed Apr 21 10:23:31 EDT 2021" starttimestamp="1619011563329" timestamp="3448110" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2150" _type="RunCommand" date="Wed Apr 21 10:23:31 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3448269" type="Run" />
  <Command __id="2151" _type="RunCommand" date="Wed Apr 21 10:23:31 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3448269" type="Run" />
  <Command __id="2152" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:23:35 EDT 2021" starttimestamp="1619011563329" timestamp="3452051" />
  <Command __id="2153" _type="RunCommand" date="Wed Apr 21 10:23:35 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3452212" type="Run" />
  <Command __id="2154" _type="RunCommand" date="Wed Apr 21 10:23:35 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3452212" type="Run" />
  <Command __id="2155" _type="ShellCommand" date="Wed Apr 21 10:23:36 EDT 2021" starttimestamp="1619011563329" timestamp="3453010" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2156" _type="ConsoleOutput" date="Wed Apr 21 10:23:36 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3453110" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]¶Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2157" _type="ConsoleOutput" date="Wed Apr 21 10:23:36 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3453233" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2158" _type="ConsoleOutput" date="Wed Apr 21 10:23:40 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3457184" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, a, )]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2159" _type="ConsoleOutput" date="Wed Apr 21 10:23:40 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3457412" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2160" _type="ExceptionCommand" date="Wed Apr 21 10:23:51 EDT 2021" starttimestamp="1619011563329" timestamp="3467862" type="Exception">
    <exceptionString><![CDATA[Testing Expression []
class java.lang.NullPointerException
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2161" _type="ExceptionCommand" date="Wed Apr 21 10:23:52 EDT 2021" starttimestamp="1619011563329" timestamp="3469058" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	... 57 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2162" _type="ExceptionCommand" date="Wed Apr 21 10:23:53 EDT 2021" starttimestamp="1619011563329" timestamp="3470076" type="Exception">
    <exceptionString><![CDATA[Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
class java.lang.NullPointerException
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2163" _type="ExceptionCommand" date="Wed Apr 21 10:23:54 EDT 2021" starttimestamp="1619011563329" timestamp="3471408" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2164" _type="ExceptionCommand" date="Wed Apr 21 10:23:59 EDT 2021" starttimestamp="1619011563329" timestamp="3476269" type="Exception">
    <exceptionString><![CDATA[Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
class java.lang.NullPointerException
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2165" _type="ExceptionCommand" date="Wed Apr 21 10:24:00 EDT 2021" starttimestamp="1619011563329" timestamp="3477398" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2166" _type="ExceptionCommand" date="Wed Apr 21 10:24:03 EDT 2021" starttimestamp="1619011563329" timestamp="3480342" type="Exception">
    <exceptionString><![CDATA[Testing Expression []
class java.lang.NullPointerException
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4719)
	at bus.uigen.oadapters.PrimitiveAdapter.uiComponentValueChanged(PrimitiveAdapter.java:215)
	at bus.uigen.visitors.UpdateAdapterVisitor.visit(UpdateAdapterVisitor.java:20)
	at bus.uigen.visitors.AdapterVisitor.visit(AdapterVisitor.java:671)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:159)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:172)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:28)
	at bus.uigen.uiFrame.subDoUpdateAll(uiFrame.java:3409)
	at bus.uigen.uiFrame.doUpdateAll(uiFrame.java:3395)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1788)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2167" _type="ExceptionCommand" date="Wed Apr 21 10:24:04 EDT 2021" starttimestamp="1619011563329" timestamp="3481382" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4719)
	at bus.uigen.oadapters.PrimitiveAdapter.uiComponentValueChanged(PrimitiveAdapter.java:215)
	at bus.uigen.visitors.UpdateAdapterVisitor.visit(UpdateAdapterVisitor.java:20)
	at bus.uigen.visitors.AdapterVisitor.visit(AdapterVisitor.java:671)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:159)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverseRange(AdapterVisitor.java:172)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:134)
	at bus.uigen.visitors.AdapterVisitor.traverse(AdapterVisitor.java:28)
	at bus.uigen.uiFrame.subDoUpdateAll(uiFrame.java:3409)
	at bus.uigen.uiFrame.doUpdateAll(uiFrame.java:3395)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1788)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	... 72 more
Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
class java.lang.NullPointerException
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2168" _type="ExceptionCommand" date="Wed Apr 21 10:24:06 EDT 2021" starttimestamp="1619011563329" timestamp="3483387" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaExp(MathEditorPanel.java:345)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2169" _type="ShellCommand" date="Wed Apr 21 10:24:08 EDT 2021" starttimestamp="1619011563329" timestamp="3485076" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2170" _type="RunCommand" date="Wed Apr 21 10:24:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3485258" type="Run" />
  <Command __id="2171" _type="RunCommand" date="Wed Apr 21 10:24:08 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3485258" type="Run" />
  <Command __id="2172" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:24:12 EDT 2021" starttimestamp="1619011563329" timestamp="3489469" />
  <Command __id="2173" _type="RunCommand" date="Wed Apr 21 10:24:12 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3489637" type="Run" />
  <Command __id="2174" _type="RunCommand" date="Wed Apr 21 10:24:12 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3489637" type="Run" />
  <Command __id="2175" _type="ShellCommand" date="Wed Apr 21 10:24:13 EDT 2021" starttimestamp="1619011563329" timestamp="3490429" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2176" _type="ConsoleOutput" date="Wed Apr 21 10:24:13 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3490529" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327"), Diff(EQUAL,"¶W*** public void components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL,".addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit"), Diff(DELETE,"ly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable"), Diff(INSERT," property caretPosition of  MathEditorPanel ignored"), Diff(EQUAL," as it is not in "), Diff(DELETE,"editable "), Diff(EQUAL,"property names list. ¶"), Diff(DELETE,"¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as "), Diff(INSERT," Associate annotation @Visible(false) w"), Diff(EQUAL,"it"), Diff(INSERT,"h"), Diff(EQUAL," i"), Diff(DELETE,"s not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x"), Diff(INSERT,"ts getter.¶W*** Implicitly editable property: caretPosition"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: "), Diff(DELETE,"y"), Diff(INSERT,"image"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="2177" _type="ConsoleOutput" date="Wed Apr 21 10:24:13 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3490655" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2178" _type="ConsoleOutput" date="Wed Apr 21 10:24:16 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3493412" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [x]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2179" _type="ConsoleOutput" date="Wed Apr 21 10:24:16 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="3493633" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [x]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2180" _type="ExceptionCommand" date="Wed Apr 21 10:24:18 EDT 2021" starttimestamp="1619011563329" timestamp="3495370" type="Exception">
    <exceptionString><![CDATA[Testing Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
class java.lang.NullPointerException
java.lang.NullPointerException
Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Testing Expression [s, q, r, t, (, a, ), e]
Testing add-sub Expression [s, q, r, t, (, a, ), e]
Testing multi div Expression [s, q, r, t, (, a, ), e]
Testing function Expression [s, q, r, t, (, a, ), e]
Testing parenthesis Expression [s, q, r, t, (, a, ), e]
Parenthesis Expression [q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, x, }]
Parenthesis Expression [q, r, t, (, a, ), e, ^, {, x]
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaSqrt(MathEditorPanel.java:356)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2181" _type="ExceptionCommand" date="Wed Apr 21 10:24:20 EDT 2021" starttimestamp="1619011563329" timestamp="3497623" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at components.mathEditor.MathEditorPanel.javaSqrt(MathEditorPanel.java:356)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2182" _type="ExceptionCommand" date="Wed Apr 21 10:24:23 EDT 2021" starttimestamp="1619011563329" timestamp="3500381" type="Exception">
    <exceptionString><![CDATA[Testing Expression [s, q, r, t, (, a, ), +, e, ^, {, x, }]
Testing add-sub Expression [s, q, r, t, (, a, ), +, e, ^, {, x, }]
class java.lang.NullPointerException
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [e, ^, {, x, }]
Testing add-sub Expression [e, ^, {, x, }]
Testing multi div Expression [e, ^, {, x, }]
Testing Expression [e]
Testing Expression [{, x, }]
Testing add-sub Expression [{, x, }]
Testing multi div Expression [{, x, }]
Testing function Expression [{, x, }]
Testing parenthesis Expression [{, x, }]
Parenthesis Expression [x]
Testing function Expression [e, ^, {, x, }]
Testing parenthesis Expression [e, ^, {, x, }]
Parenthesis Expression [^, {, x]
Testing multi div Expression [s, q, r, t, (, a, ), +, e, ^, {, x, }]
Testing Expression [s, q, r, t, (, a, ), +, e]
Testing add-sub Expression [s, q, r, t, (, a, ), +, e]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [e]
Testing Expression [{, x, }]
Testing add-sub Expression [{, x, }]
Testing multi div Expression [{, x, }]
Testing function Expression [{, x, }]
Testing parenthesis Expression [{, x, }]
Parenthesis Expression [x]
Testing function Expression [s, q, r, t, (, a, ), +, e, ^, {, x, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), +, e, ^, {, x, }]
Parenthesis Expression [q, r, t, (, a, ), +, e, ^, {, x]
java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <DocumentChange __id="1996" _type="Insert" date="Wed Apr 21 10:04:03 EDT 2021" docASTNodeCount="1630" docActiveCodeLength="10831" docExpressionCount="1186" docLength="10831" length="16" offset="2904" repeat="14" starttimestamp="1619011563329" timestamp="2280105" timestamp2="2285908">
    <text><![CDATA[tln("Rendered");]]></text>
  </DocumentChange>
  <DocumentChange __id="2062" _type="Delete" date="Wed Apr 21 10:08:10 EDT 2021" docASTNodeCount="1626" docActiveCodeLength="10807" docExpressionCount="1182" docLength="10807" endLine="92" length="24" offset="2924" repeat="2" startLine="91" starttimestamp="1619011563329" timestamp="2527178" timestamp2="2527423">
    <text><![CDATA[
		if (image == null) {]]></text>
  </DocumentChange>
  <DocumentChange __id="2069" _type="Delete" date="Wed Apr 21 10:08:12 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10802" docExpressionCount="1183" docLength="10802" endLine="93" length="5" offset="3010" repeat="2" startLine="92" starttimestamp="1619011563329" timestamp="2529653" timestamp2="2530003">
    <text><![CDATA[
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="2074" _type="Delete" date="Wed Apr 21 10:08:14 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" endLine="92" length="1" offset="2928" startLine="92" starttimestamp="1619011563329" timestamp="2530786">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="2183" _type="ExceptionCommand" date="Wed Apr 21 10:24:25 EDT 2021" starttimestamp="1619011563329" timestamp="3502007" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.SetCommand.execute(SetCommand.java:148)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:329)
	at bus.uigen.sadapters.BeanToRecord.set(BeanToRecord.java:274)
	at bus.uigen.oadapters.ClassAdapter.set(ClassAdapter.java:202)
	at bus.uigen.oadapters.ClassAdapter.childUIComponentValueChanged(ClassAdapter.java:229)
	at bus.uigen.oadapters.ObjectAdapter.uiComponentValueChanged(ObjectAdapter.java:4846)
	at bus.uigen.WidgetAdapter.uiComponentValueChanged(WidgetAdapter.java:396)
	at bus.uigen.adapters.TextComponentAdapter.uiComponentValueChanged(TextComponentAdapter.java:296)
	at bus.uigen.adapters.TextComponentAdapter.actionPerformed(TextComponentAdapter.java:367)
	at bus.uigen.widgets.swing.SwingTextFieldEventForwarder.actionPerformed(SwingTextFieldEventForwarder.java:41)
	at java.desktop/javax.swing.JTextField.fireActionPerformed(JTextField.java:508)
	at java.desktop/javax.swing.JTextField.postActionEvent(JTextField.java:723)
	at java.desktop/javax.swing.JTextField$NotifyAction.actionPerformed(JTextField.java:839)
	at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
	at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
	at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2948)
	at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
	at java.desktop/java.awt.Component.processEvent(Component.java:6366)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:871)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1140)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1010)
	at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:836)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4847)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: java.lang.NullPointerException
	at parser.TexTreeBuilder.getTexVector(TexTreeBuilder.java:22)
	at parser.TexTreeBuilder.build(TexTreeBuilder.java:14)
	at components.mathEditor.MathEditorPanel.setJavaExpression(MathEditorPanel.java:79)
	... 57 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2184" _type="ShellCommand" date="Wed Apr 21 10:24:25 EDT 2021" starttimestamp="1619011563329" timestamp="3502366" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2185" _type="RunCommand" date="Wed Apr 21 10:24:25 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3502543" type="Run" />
  <Command __id="2186" _type="RunCommand" date="Wed Apr 21 10:24:25 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3502544" type="Run" />
  <Command __id="2187" _type="MoveCaretCommand" caretOffset="1346" date="Wed Apr 21 10:24:26 EDT 2021" docOffset="2373" starttimestamp="1619011563329" timestamp="3502861" />
  <Command __id="2188" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:28:28 EDT 2021" docASTNodeCount="1375" docActiveCodeLength="7559" docExpressionCount="897" docLength="7559" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3745599">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Arrays;¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶¶public class JavaExpressionParser {¶	public static final char COMMA = ',', PLUS = '+', MINUS = '-', TIMES = '*', DIVIDES = '/', CARET = '^', EQUALS = '=', LP = '(', RP = ')';¶	public enum FunctionName{¶		SQRT ("sqrt"),¶		POW ("pow"),¶		EXP ("exp"),¶		LOG ("log"),¶		SIN ("sin"),¶		COS ("cos"),¶		TAN ("tan"),¶		MIN ("min"),¶		MAX ("max");¶		public String name;¶		FunctionName(String newName){¶			name = newName;¶		}¶	}¶	¶	¶	public JavaExpressionParser(){¶		¶	}¶	¶	public Vector<Character> trim(Vector<Character> aVector){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : aVector) {¶			if (c != ' ') {¶				newVector.add(c);¶			}¶		}¶		return newVector;¶	}¶	¶	public boolean isExpression(Vector<Character> aVector) {¶		System.out.println("Testing Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		return isAtomicExpression(aVector) || isAddSubExpression(aVector) || isMultiDivExpression(aVector) || isExpExpression(aVector) || isFunctionExpression(aVector) || isParenthesisExpression(aVector);¶	}¶	public boolean isAddSubExpression(Vector<Character> aVector) {¶		System.out.println("Testing add-sub Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isAddOrSub(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isMultiDivExpression(Vector<Character> aVector) {¶		System.out.println("Testing multi div Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isMultiOrDiv(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isExpExpression(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isCaret(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isFunctionExpression(Vector<Character> aVector) {¶		System.out.println("Testing function Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (!isFunctionName(truncate(aVector, 0, pt)) && pt < aVector.size()) {¶			pt ++;¶		}¶		if (aVector.size() == pt) return false;¶		return isFunctionParameters(truncate(aVector, pt, aVector.size()));¶	}¶	public boolean isFunctionParameters(Vector<Character> aVector) {¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size()-1)) && isParameters(truncateBoth(aVector));¶	}¶	public boolean isParameters(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		if (isExpression(aVector)) return true;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isComma(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isParameters(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isParenthesisExpression(Vector<Character> aVector) {¶		System.out.println("Testing parenthesis Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		System.out.println("Parenthesis Expression " + truncateBoth(aVector));¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size() - 1)) && isExpression(truncateBoth(aVector));¶	}¶	public boolean isFunctionName(Vector<Character> aVector) {¶		for (FunctionName functionName : FunctionName.values()) {¶			if (compare(aVector, functionName.name)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	public boolean isAtomicExpression(Vector<Character> aVector) {¶		return isNumber(aVector) || isVariable(aVector);¶	}¶	public boolean isNumber(Vector<Character> aVector) {¶		return isUnsignedNumber(aVector) || (isSign(aVector.get(0)) && isUnsignedNumber(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedNumber(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isNonZeroDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isUnsignedVariable(aVector);¶		}¶		return isUnsignedVariable(aVector) || (isSign(aVector.get(0)) && isUnsignedVariable(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetter(aVector.get(0));¶		}¶		return isLetter(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetterOrDigit(aVector.get(0));¶		}¶		return isLetterOrDigit(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterOrDigit(char aChar) {¶		return isLetter(aChar) || isDigit(aChar);¶	}¶	public boolean isSign(char aChar) {¶		return aChar == PLUS || aChar == MINUS; ¶	}¶	public boolean isNonZeroDigit(char aChar) {¶		return aChar <= '9' && aChar >= '1';¶	}¶	public boolean isDigit(char aChar) {¶		return Character.isDigit(aChar);¶	}¶	public boolean isLetter(char aChar) {¶		return Character.isLetter(aChar);¶	}¶	public boolean isComma(char aChar) {¶		return aChar == COMMA;¶	}¶	public boolean isRightParenthesis(char aChar) {¶		return aChar == RP;¶	}¶	public boolean isLeftParenthesis(char aChar) {¶		return aChar == LP;¶	}¶	public boolean isAddOrSub(char aChar) {¶		return aChar == PLUS || aChar == MINUS;¶	}¶	public boolean isMultiOrDiv(char aChar) {¶		return aChar == TIMES || aChar == DIVIDES;¶	}¶	public boolean isCaret(char aChar) {¶		return CARET == aChar;¶	}¶	public Vector<Character> truncate(Vector<Character> aVector, int start, int end){¶		Vector<Character> newVector = new Vector<Character>();¶		for (int i = start; i < end; i ++) {¶			newVector.add(aVector.get(i));¶		}¶		return newVector;¶	}¶	public Vector<Character> truncateLeft(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size());¶	}¶	public Vector<Character> truncateRight(Vector<Character> aVector){¶		return truncate(aVector, 0, aVector.size()-1);¶	}¶	public Vector<Character> truncateBoth(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size()-1);¶	}¶	public int find(Vector<Character> aVector, char aChar, int start) {¶		for (int i = start; i < aVector.size(); i ++) {¶			if (aVector.get(i) == aChar) {¶				return i;¶			}¶		}¶		return -1;¶	}¶	public boolean compare(Vector<Character> aVector, String aString) {¶		if (aVector.size() != aString.length()) {¶			return false;¶		}¶		for (int i = 0; i < aVector.size(); i ++) {¶			if (aVector.get(i) != aString.charAt(i)) {¶				return false;¶			}¶		}¶		return true;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2189" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 10:28:29 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="3745700" />
  <Command __id="2190" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:28:37 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3753975">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaExp", AttributeNames.ICON, "image/exp.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaSqrt", AttributeNames.ICON, "image/sqrt.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2191" _type="SelectTextCommand" caretOffset="406" date="Wed Apr 21 10:28:37 EDT 2021" end="407" start="406" starttimestamp="1619011563329" timestamp="3754075" />
  <Command __id="2192" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:28:39 EDT 2021" docASTNodeCount="400" docActiveCodeLength="2662" docExpressionCount="272" docLength="2662" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3756370">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mainpanel\MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.beans.PropertyChangeEvent;¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶¶import components.composedGraph.ComposedGraph;¶import components.composedGraph.ComposedGraphInterface;¶import components.page.pages.PageInterface;¶import exporter.Exporter;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"currentPage"})¶@EditablePropertyNames({})¶public class MainPanel implements MainPanelInterface{¶	¶	private List<PageInterface> pages = new ArrayList<PageInterface> ();¶	private PageInterface currentPage;¶	private int currentPageIndex = 0;¶	¶	public MainPanel() {¶		¶	}¶	¶¶	@Override¶	public List<PageInterface> getPages() {¶		return pages;¶	}¶¶	@Override¶	public void setPages(List<PageInterface> newPages) {¶		pages = newPages;¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Label(">")¶	@Column(2)¶	@Row(0)¶	@Override¶	public void nextPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == pages.size() - 1) {¶			setCurrentPageIndex(0);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() + 1);¶		}¶	}¶¶	@PreferredWidgetClass(JButton.class)¶	@Label("<")¶	@Column(0)¶	@Row(0)¶	@Override¶	public void prevPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == 0) {¶			setCurrentPageIndex(pages.size() - 1);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() - 1);¶		}¶	}¶¶	@Override¶	public int getCurrentPageIndex() {¶		return currentPageIndex;¶	}¶¶	@Override¶	public void setCurrentPageIndex(int newPageIndex) {¶		currentPageIndex = newPageIndex;¶		setCurrentPage(pages.get(currentPageIndex));¶	}¶¶	@Override¶	@Column(1)¶	@ComponentWidth(200)¶	public PageInterface getCurrentPage() {¶		return currentPage;¶	}¶¶	@Override¶	public void setCurrentPage(PageInterface newPage) {¶		currentPage = newPage;¶	}¶¶	@Override¶	public void clearPages() {¶		pages.clear();¶	}¶	¶	@Override¶	public void addPage(PageInterface newPage) {¶		getPages().add(newPage);¶		newPage.addPropertyChangeListener(this);¶		setCurrentPageIndex(getCurrentPageIndex());¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2193" _type="MoveCaretCommand" caretOffset="601" date="Wed Apr 21 10:28:39 EDT 2021" docOffset="1266" starttimestamp="1619011563329" timestamp="3756458" />
  <Command __id="2194" _type="MoveCaretCommand" caretOffset="1435" date="Wed Apr 21 10:28:40 EDT 2021" docOffset="2100" starttimestamp="1619011563329" timestamp="3756925" />
  <Command __id="2195" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:28:42 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3759280">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		"), Diff(DELETE,"¶		if (image == null) {¶	"), Diff(INSERT,"System.out.println("Rendered");¶		¶"), Diff(EQUAL,"		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		"), Diff(DELETE,"}¶		"), Diff(EQUAL,"¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		System.out.println("Rendered");
		
		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp(x)");
		setJavaExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "sqrt(a)");
		setJavaExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="2196" _type="MoveCaretCommand" caretOffset="1346" date="Wed Apr 21 10:28:42 EDT 2021" docOffset="2373" starttimestamp="1619011563329" timestamp="3759364" />
  <DocumentChange __id="2197" _type="Insert" date="Wed Apr 21 10:31:55 EDT 2021" docASTNodeCount="1628" docActiveCodeLength="10805" docExpressionCount="1185" docLength="10805" length="4" offset="2373" repeat="4" starttimestamp="1619011563329" timestamp="3951987" timestamp2="3952724">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <Command __id="2198" _type="InsertStringCommand" date="Wed Apr 21 10:31:55 EDT 2021" starttimestamp="1619011563329" timestamp="3951990" timestamp2="3951990">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="2200" _type="InsertStringCommand" date="Wed Apr 21 10:31:55 EDT 2021" starttimestamp="1619011563329" timestamp="3952391" timestamp2="3952391">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2202" _type="InsertStringCommand" date="Wed Apr 21 10:31:55 EDT 2021" starttimestamp="1619011563329" timestamp="3952646" timestamp2="3952646">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2204" _type="InsertStringCommand" date="Wed Apr 21 10:31:56 EDT 2021" starttimestamp="1619011563329" timestamp="3952728" timestamp2="3952728">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="2205" _type="Delete" date="Wed Apr 21 10:31:56 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" endLine="74" length="4" offset="2373" repeat="4" startLine="74" starttimestamp="1619011563329" timestamp="3952857" timestamp2="3953458">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <Command __id="2206" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:31:56 EDT 2021" starttimestamp="1619011563329" timestamp="3952859" />
  <Command __id="2208" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:31:56 EDT 2021" starttimestamp="1619011563329" timestamp="3953182" />
  <Command __id="2210" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:31:56 EDT 2021" starttimestamp="1619011563329" timestamp="3953328" />
  <Command __id="2212" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:31:56 EDT 2021" starttimestamp="1619011563329" timestamp="3953460" />
  <Command __id="2213" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:31:57 EDT 2021" starttimestamp="1619011563329" timestamp="3953893" />
  <Command __id="2214" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:31:57 EDT 2021" starttimestamp="1619011563329" timestamp="3954001" />
  <Command __id="2215" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:31:57 EDT 2021" starttimestamp="1619011563329" timestamp="3954020" />
  <Command __id="2217" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 10:31:58 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="3955099" />
  <Command __id="2218" _type="SelectTextCommand" caretOffset="293" date="Wed Apr 21 10:32:09 EDT 2021" end="321" start="293" starttimestamp="1619011563329" timestamp="3966532" />
  <Command __id="2219" _type="MoveCaretCommand" caretOffset="293" date="Wed Apr 21 10:32:10 EDT 2021" docOffset="371" starttimestamp="1619011563329" timestamp="3966694" />
  <Command __id="2220" _type="SelectTextCommand" caretOffset="321" date="Wed Apr 21 10:32:11 EDT 2021" end="321" start="293" starttimestamp="1619011563329" timestamp="3967990" />
  <Command __id="2221" _type="MoveCaretCommand" caretOffset="321" date="Wed Apr 21 10:32:11 EDT 2021" docOffset="399" starttimestamp="1619011563329" timestamp="3968138" />
  <Command __id="2222" _type="SelectTextCommand" caretOffset="321" date="Wed Apr 21 10:32:12 EDT 2021" end="321" start="293" starttimestamp="1619011563329" timestamp="3969292" />
  <Command __id="2223" _type="MoveCaretCommand" caretOffset="296" date="Wed Apr 21 10:32:12 EDT 2021" docOffset="374" starttimestamp="1619011563329" timestamp="3969450" />
  <Command __id="2224" _type="SelectTextCommand" caretOffset="321" date="Wed Apr 21 10:32:14 EDT 2021" end="321" start="293" starttimestamp="1619011563329" timestamp="3971195" />
  <Command __id="2225" _type="MoveCaretCommand" caretOffset="321" date="Wed Apr 21 10:32:14 EDT 2021" docOffset="399" starttimestamp="1619011563329" timestamp="3971375" />
  <Command __id="2226" _type="SelectTextCommand" caretOffset="293" date="Wed Apr 21 10:32:23 EDT 2021" end="321" start="293" starttimestamp="1619011563329" timestamp="3980349" />
  <Command __id="2216" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:31:58 EDT 2021" docASTNodeCount="1036" docActiveCodeLength="6331" docExpressionCount="709" docLength="6331" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3954998">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionTreeParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶public class JavaExpressionTreeParser {¶	private DefaultMutableTreeNode rootNode;¶	private JTree tree;¶	private JavaExpressionParser parser = new JavaExpressionParser();¶	¶	public JavaExpressionTreeParser(Vector<Character> aVector) {¶		if (parser.isExpression(aVector)) {¶			rootNode = new DefaultMutableTreeNode(aVector);¶			tree = new JTree(rootNode);¶			parse(rootNode);¶		}¶	}¶	¶	public void parse(DefaultMutableTreeNode thisNode) {¶		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();¶		if (parser.isAtomicExpression(aVector)) {¶			return;¶		}¶		¶		if (parser.isAddSubExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isAddOrSub(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		if (parser.isMultiDivExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isMultiOrDiv(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		if (parser.isFunctionExpression(aVector)) {¶			int pt = 0;¶			while (!parser.isFunctionName(parser.truncate(aVector, 0, pt)) && pt < aVector.size()) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorFunction = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childFunction = new DefaultMutableTreeNode(vectorFunction);¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt + 1, aVector.size() - 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, aVector.size() - 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childFunction);¶			thisNode.add(childLeft);¶			thisNode.add(childMid);¶			parseParameters(childMid);¶			thisNode.add(childRight);¶			return;¶		}¶		¶		if (parser.isExpExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isCaret(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		¶		if (parser.isParenthesisExpression(aVector)) {¶			Vector<Character> vectorLeft = new Vector<Character>();¶			vectorLeft.add('(');¶			¶			Vector<Character> vectorMid = parser.truncateBoth(aVector);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = new Vector<Character>();¶			vectorRight.add(')');¶			¶			thisNode.add(new DefaultMutableTreeNode(vectorLeft));¶			thisNode.add(childMid);¶			thisNode.add(new DefaultMutableTreeNode(vectorRight));¶			parse(childMid);¶			return;¶		}¶		¶		¶		¶	}¶	¶	public void parseParameters(DefaultMutableTreeNode thisNode) {¶		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();¶		if (parser.isExpression(aVector)) {¶			parse(thisNode);¶			return;¶		}¶		¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!parser.isComma(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isParameters(parser.truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		¶		Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶		DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶		¶		Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶		DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶		¶		Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶		DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶		¶		thisNode.add(childLeft);¶		parse(childLeft);¶		thisNode.add(childMid);¶		thisNode.add(childRight);¶		parseParameters(childRight);¶		return;¶		¶	}¶	¶	public JTree getTree() {¶		return tree;¶	}¶	¶	public DefaultMutableTreeNode getRoot() {¶		return rootNode;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2227" _type="SelectTextCommand" caretOffset="162" date="Wed Apr 21 10:32:26 EDT 2021" end="219" start="162" starttimestamp="1619011563329" timestamp="3983083" />
  <Command __id="2228" _type="CopyCommand" date="Wed Apr 21 10:32:26 EDT 2021" starttimestamp="1619011563329" timestamp="3983583" />
  <Command __id="2230" _type="MoveCaretCommand" caretOffset="1346" date="Wed Apr 21 10:32:30 EDT 2021" docOffset="2373" starttimestamp="1619011563329" timestamp="3986817" />
  <Command __id="2229" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:32:30 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" projectName="TaskBox" starttimestamp="1619011563329" timestamp="3986728">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		System.out.println("Rendered");¶		¶		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2231" _type="MoveCaretCommand" caretOffset="2110" date="Wed Apr 21 10:32:32 EDT 2021" docOffset="3137" starttimestamp="1619011563329" timestamp="3989262" />
  <DocumentChange __id="2232" _type="Replace" date="Wed Apr 21 10:32:37 EDT 2021" docASTNodeCount="1633" docActiveCodeLength="10858" docExpressionCount="1187" docLength="10858" endLine="74" insertionLength="59" int_docASTNodeCount="1625" int_docActiveCodeLength="10799" int_docExpressionCount="1183" int_docLength="10799" length="2" offset="2371" startLine="74" starttimestamp="1619011563329" timestamp="3994267">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		JavaExpressionParser parser = new JavaExpressionParser();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2233" _type="Insert" date="Wed Apr 21 10:32:37 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10895" docExpressionCount="1190" docLength="10895" length="37" offset="601" repeat="2" starttimestamp="1619011563329" timestamp="3994295" timestamp2="3994296">
    <text><![CDATA[
import parser.JavaExpressionParser;]]></text>
  </DocumentChange>
  <Command __id="2235" _type="PasteCommand" date="Wed Apr 21 10:32:37 EDT 2021" starttimestamp="1619011563329" timestamp="3994328" />
  <Command __id="2236" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:32:38 EDT 2021" starttimestamp="1619011563329" timestamp="3994979" />
  <Command __id="2237" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:32:38 EDT 2021" starttimestamp="1619011563329" timestamp="3995076" />
  <Command __id="2238" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:32:38 EDT 2021" starttimestamp="1619011563329" timestamp="3995098" />
  <DocumentChange __id="2239" _type="Insert" date="Wed Apr 21 10:32:38 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10904" docExpressionCount="1190" docLength="10904" length="9" offset="2467" repeat="5" starttimestamp="1619011563329" timestamp="3995548" timestamp2="3997283">
    <text><![CDATA[
		if ()]]></text>
  </DocumentChange>
  <Command __id="2240" _type="InsertStringCommand" date="Wed Apr 21 10:32:38 EDT 2021" starttimestamp="1619011563329" timestamp="3995556" timestamp2="3995556">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2242" _type="InsertStringCommand" date="Wed Apr 21 10:32:40 EDT 2021" starttimestamp="1619011563329" timestamp="3996836" timestamp2="3996836">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2244" _type="InsertStringCommand" date="Wed Apr 21 10:32:40 EDT 2021" starttimestamp="1619011563329" timestamp="3996872" timestamp2="3996872">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2246" _type="InsertStringCommand" date="Wed Apr 21 10:32:40 EDT 2021" starttimestamp="1619011563329" timestamp="3997013" timestamp2="3997013">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2248" _type="InsertStringCommand" date="Wed Apr 21 10:32:40 EDT 2021" starttimestamp="1619011563329" timestamp="3997287" timestamp2="3997287">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2249" _type="InsertStringCommand" date="Wed Apr 21 10:32:40 EDT 2021" starttimestamp="1619011563329" timestamp="3997358" timestamp2="3997358">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2250" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:32:44 EDT 2021" docASTNodeCount="513" docActiveCodeLength="2878" docExpressionCount="375" docLength="3985" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4001359">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\LatexExample.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"/*¶ * Simple Java LaTex example¶ * http://www.heatonresearch.com/¶ * ¶ * Copyright 2013 Heaton Research, Inc.¶ *¶ * Licensed under the Apache License, Version 2.0 (the "License");¶ * you may not use this file except in compliance with the License.¶ * You may obtain a copy of the License at¶ *¶ *     http://www.apache.org/licenses/LICENSE-2.0¶ *¶ * Unless required by applicable law or agreed to in writing, software¶ * distributed under the License is distributed on an "AS IS" BASIS,¶ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.¶ * See the License for the specific language governing permissions and¶ * limitations under the License.¶ *   ¶ * For more information on Heaton Research copyrights, licenses ¶ * and trademarks visit:¶ * http://www.heatonresearch.com/copyright¶ */¶¶package components.mathEditor;¶¶import java.awt.BorderLayout;¶import java.awt.Color;¶import java.awt.Container;¶import java.awt.Graphics;¶import java.awt.Graphics2D;¶import java.awt.GridLayout;¶import java.awt.Insets;¶import java.awt.event.ActionEvent;¶import java.awt.event.ActionListener;¶import java.awt.image.BufferedImage;¶import java.io.File;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JFrame;¶import javax.swing.JLabel;¶import javax.swing.JOptionPane;¶import javax.swing.JPanel;¶import javax.swing.JScrollPane;¶import javax.swing.JTextArea;¶¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶¶public class LatexExample extends JFrame implements ActionListener {¶	¶	private JTextArea latexSource;¶	private JButton btnRender;¶	private JPanel drawingArea;¶¶	public LatexExample() {¶		this.setTitle("JLatexMath Example");¶		this.setSize(500, 500);¶		Container content = this.getContentPane();¶		content.setLayout(new GridLayout(2, 1));¶		this.latexSource = new JTextArea();¶		¶		JPanel editorArea = new JPanel();¶		editorArea.setLayout(new BorderLayout());¶		editorArea.add(new JScrollPane(this.latexSource),BorderLayout.CENTER);¶		editorArea.add(btnRender = new JButton("Render"),BorderLayout.SOUTH);		¶		¶		content.add(editorArea);¶		content.add(this.drawingArea = new JPanel());		¶		this.btnRender.addActionListener(this);¶		¶		this.latexSource.setText("x=\\frac{-b \\pm \\sqrt {b^2-4ac}}{2a}");¶	}¶¶	public void render() {¶		try {¶			// get the text¶			String latex = this.latexSource.getText();¶			¶			// create a formula¶			TeXFormula formula = new TeXFormula(latex);¶			¶			¶			// render the formla to an icon of the same size as the formula.¶			TeXIcon icon = formula¶					.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶			¶			// insert a border ¶			icon.setInsets(new Insets(5, 5, 5, 5));¶¶			// now create an actual image of the rendered equation¶			BufferedImage image = new BufferedImage(icon.getIconWidth(),¶					icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶			Graphics2D g2 = image.createGraphics();¶			g2.setColor(Color.white);¶			g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶			JLabel jl = new JLabel();¶			jl.setForeground(new Color(0, 0, 0));¶			icon.paintIcon(jl, g2, 0, 0);¶			// at this point the image is created, you could also save it with ImageIO¶			¶			File outputfile = new File("image.png");¶			ImageIO.write(image, "png", outputfile);¶			¶			// now draw it to the screen			¶			Graphics g = this.drawingArea.getGraphics();¶			g.drawImage(image,0,0,null);¶		} catch (Exception ex) {¶			ex.printStackTrace();¶			JOptionPane.showMessageDialog(null, ex.getMessage(), "Error",¶					JOptionPane.INFORMATION_MESSAGE);		¶		}¶¶	}¶¶	public static void main(String[] args) {¶		LatexExample frame = new LatexExample();		¶		frame.setVisible(true);¶	}¶¶	@Override¶	public void actionPerformed(ActionEvent e) {¶		if( e.getSource() == this.btnRender ) {¶			render();¶		}¶		¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2251" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 10:32:44 EDT 2021" docOffset="4" starttimestamp="1619011563329" timestamp="4001454" />
  <Command __id="2252" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:33:30 EDT 2021" docASTNodeCount="400" docActiveCodeLength="2662" docExpressionCount="272" docLength="2662" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4047138">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mainpanel\MainPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mainpanel;¶¶import java.beans.PropertyChangeEvent;¶import java.util.ArrayList;¶import java.util.List;¶import javax.swing.JButton;¶¶import components.composedGraph.ComposedGraph;¶import components.composedGraph.ComposedGraphInterface;¶import components.page.pages.PageInterface;¶import exporter.Exporter;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Label;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"currentPage"})¶@EditablePropertyNames({})¶public class MainPanel implements MainPanelInterface{¶	¶	private List<PageInterface> pages = new ArrayList<PageInterface> ();¶	private PageInterface currentPage;¶	private int currentPageIndex = 0;¶	¶	public MainPanel() {¶		¶	}¶	¶¶	@Override¶	public List<PageInterface> getPages() {¶		return pages;¶	}¶¶	@Override¶	public void setPages(List<PageInterface> newPages) {¶		pages = newPages;¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Label(">")¶	@Column(2)¶	@Row(0)¶	@Override¶	public void nextPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == pages.size() - 1) {¶			setCurrentPageIndex(0);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() + 1);¶		}¶	}¶¶	@PreferredWidgetClass(JButton.class)¶	@Label("<")¶	@Column(0)¶	@Row(0)¶	@Override¶	public void prevPage() {¶		if (pages.size() == 0) return;¶		if (currentPageIndex == 0) {¶			setCurrentPageIndex(pages.size() - 1);¶		}¶		else {¶			setCurrentPageIndex(getCurrentPageIndex() - 1);¶		}¶	}¶¶	@Override¶	public int getCurrentPageIndex() {¶		return currentPageIndex;¶	}¶¶	@Override¶	public void setCurrentPageIndex(int newPageIndex) {¶		currentPageIndex = newPageIndex;¶		setCurrentPage(pages.get(currentPageIndex));¶	}¶¶	@Override¶	@Column(1)¶	@ComponentWidth(200)¶	public PageInterface getCurrentPage() {¶		return currentPage;¶	}¶¶	@Override¶	public void setCurrentPage(PageInterface newPage) {¶		currentPage = newPage;¶	}¶¶	@Override¶	public void clearPages() {¶		pages.clear();¶	}¶	¶	@Override¶	public void addPage(PageInterface newPage) {¶		getPages().add(newPage);¶		newPage.addPropertyChangeListener(this);¶		setCurrentPageIndex(getCurrentPageIndex());¶	}¶¶	@Override¶	public void propertyChange(PropertyChangeEvent evt) {¶		¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2253" _type="MoveCaretCommand" caretOffset="1435" date="Wed Apr 21 10:33:30 EDT 2021" docOffset="2100" starttimestamp="1619011563329" timestamp="4047220" />
  <Command __id="2255" _type="MoveCaretCommand" caretOffset="1412" date="Wed Apr 21 10:33:34 EDT 2021" docOffset="2476" starttimestamp="1619011563329" timestamp="4051638" />
  <Command __id="2256" _type="MoveCaretCommand" caretOffset="1441" date="Wed Apr 21 10:33:35 EDT 2021" docOffset="2505" starttimestamp="1619011563329" timestamp="4052088" />
  <Command __id="2257" _type="SelectTextCommand" caretOffset="1405" date="Wed Apr 21 10:33:37 EDT 2021" end="1412" start="1405" starttimestamp="1619011563329" timestamp="4053823" />
  <Command __id="2254" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:33:34 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10904" docExpressionCount="1190" docLength="10904" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4051550">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶"), Diff(INSERT,"import parser.JavaExpressionParser;¶"), Diff(EQUAL,"import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		"), Diff(INSERT,"JavaExpressionParser parser = new JavaExpressionParser();¶		if ()"), Diff(EQUAL,"¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		System.out.println("Rendered");¶		¶		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionParser;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		JavaExpressionParser parser = new JavaExpressionParser();
		if ()
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		System.out.println("Rendered");
		
		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp(x)");
		setJavaExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "sqrt(a)");
		setJavaExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="2258" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:42 EDT 2021" starttimestamp="1619011563329" timestamp="4058856" />
  <Command __id="2259" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:33:42 EDT 2021" starttimestamp="1619011563329" timestamp="4059109" />
  <Command __id="2260" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:33:42 EDT 2021" starttimestamp="1619011563329" timestamp="4059271" />
  <Command __id="2261" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:33:42 EDT 2021" starttimestamp="1619011563329" timestamp="4059424" />
  <Command __id="2262" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:33:42 EDT 2021" starttimestamp="1619011563329" timestamp="4059559" />
  <Command __id="2263" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="4059698" />
  <Command __id="2264" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_NEXT" date="Wed Apr 21 10:33:43 EDT 2021" starttimestamp="1619011563329" timestamp="4059853" />
  <DocumentChange __id="2265" _type="Insert" date="Wed Apr 21 10:33:44 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10915" docExpressionCount="1196" docLength="10915" length="11" offset="2475" repeat="11" starttimestamp="1619011563329" timestamp="4060728" timestamp2="4064504">
    <text><![CDATA[parser.isEx]]></text>
  </DocumentChange>
  <Command __id="2266" _type="InsertStringCommand" date="Wed Apr 21 10:33:44 EDT 2021" starttimestamp="1619011563329" timestamp="4060734" timestamp2="4060734">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2268" _type="InsertStringCommand" date="Wed Apr 21 10:33:44 EDT 2021" starttimestamp="1619011563329" timestamp="4060929" timestamp2="4060929">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2270" _type="InsertStringCommand" date="Wed Apr 21 10:33:45 EDT 2021" starttimestamp="1619011563329" timestamp="4062292" timestamp2="4062292">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2272" _type="InsertStringCommand" date="Wed Apr 21 10:33:46 EDT 2021" starttimestamp="1619011563329" timestamp="4062682" timestamp2="4062682">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2274" _type="InsertStringCommand" date="Wed Apr 21 10:33:46 EDT 2021" starttimestamp="1619011563329" timestamp="4062757" timestamp2="4062757">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2276" _type="InsertStringCommand" date="Wed Apr 21 10:33:46 EDT 2021" starttimestamp="1619011563329" timestamp="4062834" timestamp2="4062834">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2278" _type="InsertStringCommand" date="Wed Apr 21 10:33:46 EDT 2021" starttimestamp="1619011563329" timestamp="4063446" timestamp2="4063446">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2279" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:33:46 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="4063448" />
  <Command __id="2284" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:33:48 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="4064891" />
  <DocumentChange __id="2285" _type="Replace" date="Wed Apr 21 10:33:48 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10935" docExpressionCount="1197" docLength="10935" endLine="76" insertionLength="24" int_docASTNodeCount="1639" int_docActiveCodeLength="10911" int_docExpressionCount="1192" int_docLength="10911" length="4" offset="2482" startLine="76" starttimestamp="1619011563329" timestamp="4064894">
    <deletedText><![CDATA[isEx]]></deletedText>
    <insertedText><![CDATA[isExpExpression(aVector)]]></insertedText>
  </DocumentChange>
  <Command __id="2286" _type="InsertStringCommand" date="Wed Apr 21 10:33:48 EDT 2021" starttimestamp="1619011563329" timestamp="4064922" timestamp2="4064922">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2287" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4065712" />
  <Command __id="2288" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066219" />
  <Command __id="2289" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066251" />
  <Command __id="2290" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066280" />
  <Command __id="2291" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066312" />
  <Command __id="2292" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066343" />
  <Command __id="2293" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066374" />
  <Command __id="2294" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066421" />
  <Command __id="2295" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066452" />
  <Command __id="2296" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066483" />
  <Command __id="2297" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066514" />
  <Command __id="2298" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:33:49 EDT 2021" starttimestamp="1619011563329" timestamp="4066545" />
  <Command __id="2300" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:33:50 EDT 2021" starttimestamp="1619011563329" timestamp="4067062" />
  <Command __id="2302" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:33:50 EDT 2021" starttimestamp="1619011563329" timestamp="4067220" />
  <Command __id="2304" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:33:50 EDT 2021" starttimestamp="1619011563329" timestamp="4067365" />
  <Command __id="2305" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:33:51 EDT 2021" starttimestamp="1619011563329" timestamp="4067813" />
  <Command __id="2306" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:33:51 EDT 2021" starttimestamp="1619011563329" timestamp="4067917" />
  <Command __id="2307" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:33:51 EDT 2021" starttimestamp="1619011563329" timestamp="4067950" />
  <Command __id="2308" _type="MoveCaretCommand" caretOffset="1479" date="Wed Apr 21 10:33:51 EDT 2021" docOffset="2543" starttimestamp="1619011563329" timestamp="4068548" />
  <Command __id="2309" _type="MoveCaretCommand" caretOffset="1571" date="Wed Apr 21 10:33:52 EDT 2021" docOffset="2635" starttimestamp="1619011563329" timestamp="4068845" />
  <DocumentChange __id="2299" _type="Delete" date="Wed Apr 21 10:33:50 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10932" docExpressionCount="1197" docLength="10932" endLine="76" length="3" offset="2484" repeat="3" startLine="76" starttimestamp="1619011563329" timestamp="4067059" timestamp2="4067363">
    <text><![CDATA[Exp]]></text>
  </DocumentChange>
  <Command __id="2310" _type="SelectTextCommand" caretOffset="1612" date="Wed Apr 21 10:33:54 EDT 2021" end="1632" start="1612" starttimestamp="1619011563329" timestamp="4071133" />
  <Command __id="2311" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:33:59 EDT 2021" docASTNodeCount="1375" docActiveCodeLength="7559" docExpressionCount="897" docLength="7559" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4076630">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Arrays;¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶¶public class JavaExpressionParser {¶	public static final char COMMA = ',', PLUS = '+', MINUS = '-', TIMES = '*', DIVIDES = '/', CARET = '^', EQUALS = '=', LP = '(', RP = ')';¶	public enum FunctionName{¶		SQRT ("sqrt"),¶		POW ("pow"),¶		EXP ("exp"),¶		LOG ("log"),¶		SIN ("sin"),¶		COS ("cos"),¶		TAN ("tan"),¶		MIN ("min"),¶		MAX ("max");¶		public String name;¶		FunctionName(String newName){¶			name = newName;¶		}¶	}¶	¶	¶	public JavaExpressionParser(){¶		¶	}¶	¶	public Vector<Character> trim(Vector<Character> aVector){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : aVector) {¶			if (c != ' ') {¶				newVector.add(c);¶			}¶		}¶		return newVector;¶	}¶	¶	public boolean isExpression(Vector<Character> aVector) {¶		System.out.println("Testing Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		return isAtomicExpression(aVector) || isAddSubExpression(aVector) || isMultiDivExpression(aVector) || isExpExpression(aVector) || isFunctionExpression(aVector) || isParenthesisExpression(aVector);¶	}¶	public boolean isAddSubExpression(Vector<Character> aVector) {¶		System.out.println("Testing add-sub Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isAddOrSub(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isMultiDivExpression(Vector<Character> aVector) {¶		System.out.println("Testing multi div Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isMultiOrDiv(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isExpExpression(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isCaret(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isFunctionExpression(Vector<Character> aVector) {¶		System.out.println("Testing function Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (!isFunctionName(truncate(aVector, 0, pt)) && pt < aVector.size()) {¶			pt ++;¶		}¶		if (aVector.size() == pt) return false;¶		return isFunctionParameters(truncate(aVector, pt, aVector.size()));¶	}¶	public boolean isFunctionParameters(Vector<Character> aVector) {¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size()-1)) && isParameters(truncateBoth(aVector));¶	}¶	public boolean isParameters(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		if (isExpression(aVector)) return true;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isComma(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isParameters(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isParenthesisExpression(Vector<Character> aVector) {¶		System.out.println("Testing parenthesis Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		System.out.println("Parenthesis Expression " + truncateBoth(aVector));¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size() - 1)) && isExpression(truncateBoth(aVector));¶	}¶	public boolean isFunctionName(Vector<Character> aVector) {¶		for (FunctionName functionName : FunctionName.values()) {¶			if (compare(aVector, functionName.name)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	public boolean isAtomicExpression(Vector<Character> aVector) {¶		return isNumber(aVector) || isVariable(aVector);¶	}¶	public boolean isNumber(Vector<Character> aVector) {¶		return isUnsignedNumber(aVector) || (isSign(aVector.get(0)) && isUnsignedNumber(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedNumber(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isNonZeroDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isUnsignedVariable(aVector);¶		}¶		return isUnsignedVariable(aVector) || (isSign(aVector.get(0)) && isUnsignedVariable(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetter(aVector.get(0));¶		}¶		return isLetter(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetterOrDigit(aVector.get(0));¶		}¶		return isLetterOrDigit(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterOrDigit(char aChar) {¶		return isLetter(aChar) || isDigit(aChar);¶	}¶	public boolean isSign(char aChar) {¶		return aChar == PLUS || aChar == MINUS; ¶	}¶	public boolean isNonZeroDigit(char aChar) {¶		return aChar <= '9' && aChar >= '1';¶	}¶	public boolean isDigit(char aChar) {¶		return Character.isDigit(aChar);¶	}¶	public boolean isLetter(char aChar) {¶		return Character.isLetter(aChar);¶	}¶	public boolean isComma(char aChar) {¶		return aChar == COMMA;¶	}¶	public boolean isRightParenthesis(char aChar) {¶		return aChar == RP;¶	}¶	public boolean isLeftParenthesis(char aChar) {¶		return aChar == LP;¶	}¶	public boolean isAddOrSub(char aChar) {¶		return aChar == PLUS || aChar == MINUS;¶	}¶	public boolean isMultiOrDiv(char aChar) {¶		return aChar == TIMES || aChar == DIVIDES;¶	}¶	public boolean isCaret(char aChar) {¶		return CARET == aChar;¶	}¶	public Vector<Character> truncate(Vector<Character> aVector, int start, int end){¶		Vector<Character> newVector = new Vector<Character>();¶		for (int i = start; i < end; i ++) {¶			newVector.add(aVector.get(i));¶		}¶		return newVector;¶	}¶	public Vector<Character> truncateLeft(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size());¶	}¶	public Vector<Character> truncateRight(Vector<Character> aVector){¶		return truncate(aVector, 0, aVector.size()-1);¶	}¶	public Vector<Character> truncateBoth(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size()-1);¶	}¶	public int find(Vector<Character> aVector, char aChar, int start) {¶		for (int i = start; i < aVector.size(); i ++) {¶			if (aVector.get(i) == aChar) {¶				return i;¶			}¶		}¶		return -1;¶	}¶	public boolean compare(Vector<Character> aVector, String aString) {¶		if (aVector.size() != aString.length()) {¶			return false;¶		}¶		for (int i = 0; i < aVector.size(); i ++) {¶			if (aVector.get(i) != aString.charAt(i)) {¶				return false;¶			}¶		}¶		return true;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2312" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 10:34:00 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="4076715" />
  <Command __id="2313" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:34:04 EDT 2021" docASTNodeCount="1036" docActiveCodeLength="6331" docExpressionCount="709" docLength="6331" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4081566">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionTreeParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶public class JavaExpressionTreeParser {¶	private DefaultMutableTreeNode rootNode;¶	private JTree tree;¶	private JavaExpressionParser parser = new JavaExpressionParser();¶	¶	public JavaExpressionTreeParser(Vector<Character> aVector) {¶		if (parser.isExpression(aVector)) {¶			rootNode = new DefaultMutableTreeNode(aVector);¶			tree = new JTree(rootNode);¶			parse(rootNode);¶		}¶	}¶	¶	public void parse(DefaultMutableTreeNode thisNode) {¶		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();¶		if (parser.isAtomicExpression(aVector)) {¶			return;¶		}¶		¶		if (parser.isAddSubExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isAddOrSub(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		if (parser.isMultiDivExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isMultiOrDiv(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		if (parser.isFunctionExpression(aVector)) {¶			int pt = 0;¶			while (!parser.isFunctionName(parser.truncate(aVector, 0, pt)) && pt < aVector.size()) {¶				pt ++;¶			}¶			¶			Vector<Character> vectorFunction = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childFunction = new DefaultMutableTreeNode(vectorFunction);¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt + 1, aVector.size() - 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, aVector.size() - 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childFunction);¶			thisNode.add(childLeft);¶			thisNode.add(childMid);¶			parseParameters(childMid);¶			thisNode.add(childRight);¶			return;¶		}¶		¶		if (parser.isExpExpression(aVector)) {¶			int pt = 0;¶			while (pt < aVector.size() && ¶					(!parser.isCaret(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isExpression(parser.truncate(aVector, pt + 1, aVector.size())))) {¶				pt ++;¶			}¶			¶			¶			Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶			DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶			¶			Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶			DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶			¶			thisNode.add(childLeft);¶			parse(childLeft);¶			thisNode.add(childMid);¶			thisNode.add(childRight);¶			parse(childRight);¶			return;¶		}¶		¶		¶		if (parser.isParenthesisExpression(aVector)) {¶			Vector<Character> vectorLeft = new Vector<Character>();¶			vectorLeft.add('(');¶			¶			Vector<Character> vectorMid = parser.truncateBoth(aVector);¶			DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶			¶			Vector<Character> vectorRight = new Vector<Character>();¶			vectorRight.add(')');¶			¶			thisNode.add(new DefaultMutableTreeNode(vectorLeft));¶			thisNode.add(childMid);¶			thisNode.add(new DefaultMutableTreeNode(vectorRight));¶			parse(childMid);¶			return;¶		}¶		¶		¶		¶	}¶	¶	public void parseParameters(DefaultMutableTreeNode thisNode) {¶		Vector<Character> aVector = (Vector<Character>) thisNode.getUserObject();¶		if (parser.isExpression(aVector)) {¶			parse(thisNode);¶			return;¶		}¶		¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!parser.isComma(aVector.get(pt)) || !parser.isExpression(parser.truncate(aVector, 0, pt)) || !parser.isParameters(parser.truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		¶		Vector<Character> vectorLeft = parser.truncate(aVector, 0, pt);¶		DefaultMutableTreeNode childLeft = new DefaultMutableTreeNode(vectorLeft);¶		¶		Vector<Character> vectorMid = parser.truncate(aVector, pt, pt + 1);¶		DefaultMutableTreeNode childMid = new DefaultMutableTreeNode(vectorMid);¶		¶		Vector<Character> vectorRight = parser.truncate(aVector, pt + 1, aVector.size());¶		DefaultMutableTreeNode childRight = new DefaultMutableTreeNode(vectorRight);¶		¶		thisNode.add(childLeft);¶		parse(childLeft);¶		thisNode.add(childMid);¶		thisNode.add(childRight);¶		parseParameters(childRight);¶		return;¶		¶	}¶	¶	public JTree getTree() {¶		return tree;¶	}¶	¶	public DefaultMutableTreeNode getRoot() {¶		return rootNode;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2314" _type="SelectTextCommand" caretOffset="162" date="Wed Apr 21 10:34:04 EDT 2021" end="219" start="162" starttimestamp="1619011563329" timestamp="4081652" />
  <Command __id="2316" _type="SelectTextCommand" caretOffset="1612" date="Wed Apr 21 10:34:09 EDT 2021" end="1632" start="1612" starttimestamp="1619011563329" timestamp="4085726" />
  <Command __id="2315" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:34:08 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10932" docExpressionCount="1197" docLength="10932" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4085639">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionParser;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		JavaExpressionParser parser = new JavaExpressionParser();¶		if ("), Diff(INSERT,"parser.isExpression(aVector)"), Diff(EQUAL,")¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		System.out.println("Rendered");¶		¶		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionParser;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		JavaExpressionParser parser = new JavaExpressionParser();
		if (parser.isExpression(aVector))
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));
		
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		System.out.println("Rendered");
		
		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "exp(x)");
		setJavaExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "sqrt(a)");
		setJavaExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="2317" _type="MoveCaretCommand" caretOffset="1635" date="Wed Apr 21 10:34:11 EDT 2021" docOffset="2699" starttimestamp="1619011563329" timestamp="4088283" />
  <Command __id="2318" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:34:14 EDT 2021" docASTNodeCount="973" docActiveCodeLength="5710" docExpressionCount="671" docLength="5710" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4091648">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\TexTreeBuilder.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Vector;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶public class TexTreeBuilder {¶	private DefaultMutableTreeNode root;¶	private JavaExpressionParser parser = new JavaExpressionParser();¶	¶	¶	public String build(DefaultMutableTreeNode aRoot) {¶		root = aRoot;¶		String resultString = "";¶		for (Character c : getTexVector(root)) {¶			resultString += c;¶		}¶		return resultString;¶	}¶	¶	public Vector<Character> getTexVector(DefaultMutableTreeNode thisNode) {¶		Vector<Character> childrenVector = new Vector<Character> ();¶		for (int i = 0; i < thisNode.getChildCount(); i ++) {¶			DefaultMutableTreeNode child = (DefaultMutableTreeNode) thisNode.getChildAt(i);¶			if (child.getChildCount() == 0) {¶				if (((Vector<Character>) child.getUserObject()).get(0) == '/') {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('\\');¶					fracVector.add('f');¶					fracVector.add('r');¶					fracVector.add('a');¶					fracVector.add('c');¶					fracVector.add('{');¶					fracVector = concat(fracVector, childrenVector);¶					fracVector.add('}');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i ++;¶					childrenVector = fracVector;¶				}¶				else if (((Vector<Character>) child.getUserObject()).get(0) == '^') {¶					Vector<Character> powerVector = new Vector<Character> ();¶					powerVector = concat(childrenVector, powerVector);¶					powerVector.add('^');¶					powerVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					if (nextChild.getChildCount() == 0) {¶						powerVector = concat(powerVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						powerVector = concat(powerVector, getTexVector(nextChild));¶					}¶					powerVector.add('}');¶					i ++;¶					childrenVector = powerVector;¶				}¶				else if (((Vector<Character>) child.getUserObject()).get(0) == '*') {¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);¶					DefaultMutableTreeNode prevChild = (DefaultMutableTreeNode) thisNode.getChildAt(i - 1);¶					Vector<Character> timesVector = new Vector<Character> ();¶					timesVector = concat(childrenVector, timesVector);¶					if (prevChild.getChildCount() == 0 && nextChild.getChildCount() == 0 ¶							&& parser.isNumber((Vector<Character>) prevChild.getUserObject()) ¶							&& parser.isUnsignedVariable((Vector<Character>) nextChild.getUserObject())) {¶					}¶					else {¶						timesVector.add(' ');¶						timesVector.add('\\');¶						timesVector.add('t');¶						timesVector.add('i');¶						timesVector.add('m');¶						timesVector.add('e');¶						timesVector.add('s');¶						timesVector.add(' ');¶						childrenVector = timesVector;¶					}¶				}¶				¶				else if (isSqrt((Vector<Character>) child.getUserObject()) ¶						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('\\');¶					fracVector.add('s');¶					fracVector.add('q');¶					fracVector.add('r');¶					fracVector.add('t');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i += 3;¶					childrenVector = fracVector;¶				}¶				¶				else if (isExp((Vector<Character>) child.getUserObject())¶						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {¶					Vector<Character> fracVector = new Vector<Character> ();¶					fracVector.add('e');¶					fracVector.add('^');¶					fracVector.add('{');¶					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);¶					if (nextChild.getChildCount() == 0) {¶						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));¶					}¶					else {¶						fracVector = concat(fracVector, getTexVector(nextChild));¶					}¶					fracVector.add('}');¶					i += 3;¶					childrenVector = fracVector;¶				}¶				¶				¶				¶			}¶			else {¶				childrenVector = concat(childrenVector, getTexVector(child));¶			}¶		}¶		"), Diff(INSERT,"¶		"), Diff(EQUAL,"if (thisNode.getChildCount() == 0) {¶			childrenVector = concat(childrenVector, "), Diff(DELETE,"getTexVector(thisNode"), Diff(INSERT,"(Vector<Character>) thisNode.getUserObject("), Diff(EQUAL,"));¶		}¶		"), Diff(INSERT,"¶		"), Diff(EQUAL,"return childrenVector;	¶	}¶	¶	public Vector<Character> concat(Vector<Character> vectorA, Vector<Character> vectorB){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : vectorA) {¶			newVector.add(c);¶		}¶		for (Character c : vectorB) {¶			newVector.add(c);¶		}¶		return newVector;¶	}¶	¶	public boolean isSqrt(Vector<Character> aVector) {¶		if (aVector.size() != 4) return false;¶		return aVector.get(0) == 's' && aVector.get(1) == 'q' && aVector.get(2) == 'r' && aVector.get(3) == 't';¶	}¶	¶	public boolean isExp(Vector<Character> aVector) {¶		if (aVector.size() != 3) return false;¶		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';¶	}¶	¶¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package parser;

import java.util.Vector;
import javax.swing.tree.DefaultMutableTreeNode;

public class TexTreeBuilder {
	private DefaultMutableTreeNode root;
	private JavaExpressionParser parser = new JavaExpressionParser();
	
	
	public String build(DefaultMutableTreeNode aRoot) {
		root = aRoot;
		String resultString = "";
		for (Character c : getTexVector(root)) {
			resultString += c;
		}
		return resultString;
	}
	
	public Vector<Character> getTexVector(DefaultMutableTreeNode thisNode) {
		Vector<Character> childrenVector = new Vector<Character> ();
		for (int i = 0; i < thisNode.getChildCount(); i ++) {
			DefaultMutableTreeNode child = (DefaultMutableTreeNode) thisNode.getChildAt(i);
			if (child.getChildCount() == 0) {
				if (((Vector<Character>) child.getUserObject()).get(0) == '/') {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('\\');
					fracVector.add('f');
					fracVector.add('r');
					fracVector.add('a');
					fracVector.add('c');
					fracVector.add('{');
					fracVector = concat(fracVector, childrenVector);
					fracVector.add('}');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i ++;
					childrenVector = fracVector;
				}
				else if (((Vector<Character>) child.getUserObject()).get(0) == '^') {
					Vector<Character> powerVector = new Vector<Character> ();
					powerVector = concat(childrenVector, powerVector);
					powerVector.add('^');
					powerVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					if (nextChild.getChildCount() == 0) {
						powerVector = concat(powerVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						powerVector = concat(powerVector, getTexVector(nextChild));
					}
					powerVector.add('}');
					i ++;
					childrenVector = powerVector;
				}
				else if (((Vector<Character>) child.getUserObject()).get(0) == '*') {
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 1);
					DefaultMutableTreeNode prevChild = (DefaultMutableTreeNode) thisNode.getChildAt(i - 1);
					Vector<Character> timesVector = new Vector<Character> ();
					timesVector = concat(childrenVector, timesVector);
					if (prevChild.getChildCount() == 0 && nextChild.getChildCount() == 0 
							&& parser.isNumber((Vector<Character>) prevChild.getUserObject()) 
							&& parser.isUnsignedVariable((Vector<Character>) nextChild.getUserObject())) {
					}
					else {
						timesVector.add(' ');
						timesVector.add('\\');
						timesVector.add('t');
						timesVector.add('i');
						timesVector.add('m');
						timesVector.add('e');
						timesVector.add('s');
						timesVector.add(' ');
						childrenVector = timesVector;
					}
				}
				
				else if (isSqrt((Vector<Character>) child.getUserObject()) 
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('\\');
					fracVector.add('s');
					fracVector.add('q');
					fracVector.add('r');
					fracVector.add('t');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				
				else if (isExp((Vector<Character>) child.getUserObject())
						&& parser.isExpression((Vector<Character>) ((DefaultMutableTreeNode) thisNode.getChildAt(i + 2)).getUserObject())) {
					Vector<Character> fracVector = new Vector<Character> ();
					fracVector.add('e');
					fracVector.add('^');
					fracVector.add('{');
					DefaultMutableTreeNode nextChild = (DefaultMutableTreeNode) thisNode.getChildAt(i + 2);
					if (nextChild.getChildCount() == 0) {
						fracVector = concat(fracVector, ((Vector<Character>) nextChild.getUserObject()));
					}
					else {
						fracVector = concat(fracVector, getTexVector(nextChild));
					}
					fracVector.add('}');
					i += 3;
					childrenVector = fracVector;
				}
				
				
				
			}
			else {
				childrenVector = concat(childrenVector, getTexVector(child));
			}
		}
		
		if (thisNode.getChildCount() == 0) {
			childrenVector = concat(childrenVector, (Vector<Character>) thisNode.getUserObject());
		}
		
		return childrenVector;	
	}
	
	public Vector<Character> concat(Vector<Character> vectorA, Vector<Character> vectorB){
		Vector<Character> newVector = new Vector<Character> ();
		for (Character c : vectorA) {
			newVector.add(c);
		}
		for (Character c : vectorB) {
			newVector.add(c);
		}
		return newVector;
	}
	
	public boolean isSqrt(Vector<Character> aVector) {
		if (aVector.size() != 4) return false;
		return aVector.get(0) == 's' && aVector.get(1) == 'q' && aVector.get(2) == 'r' && aVector.get(3) == 't';
	}
	
	public boolean isExp(Vector<Character> aVector) {
		if (aVector.size() != 3) return false;
		return aVector.get(0) == 'e' && aVector.get(1) == 'x' && aVector.get(2) == 'p';
	}
	


}
]]></snapshot>
  </Command>
  <Command __id="2319" _type="MoveCaretCommand" caretOffset="1253" date="Wed Apr 21 10:34:15 EDT 2021" docOffset="1302" starttimestamp="1619011563329" timestamp="4091732" />
  <Command __id="2321" _type="MoveCaretCommand" caretOffset="1635" date="Wed Apr 21 10:34:21 EDT 2021" docOffset="2699" starttimestamp="1619011563329" timestamp="4098359" />
  <Command __id="2320" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:34:21 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10932" docExpressionCount="1197" docLength="10932" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4098273">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionParser;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		JavaExpressionParser parser = new JavaExpressionParser();¶		if (parser.isExpression(aVector))¶		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		TexTreeBuilder builder = new TexTreeBuilder();¶		¶		setTexExpression(builder.build(treeParser.getRoot()));¶		¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		System.out.println("Rendered");¶		¶		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2322" _type="SelectTextCommand" caretOffset="1612" date="Wed Apr 21 10:34:25 EDT 2021" end="1632" start="1612" starttimestamp="1619011563329" timestamp="4102038" />
  <DocumentChange __id="2323" _type="Insert" date="Wed Apr 21 10:34:41 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10935" docExpressionCount="1197" docLength="10935" length="3" offset="2484" starttimestamp="1619011563329" timestamp="4118175">
    <text><![CDATA[Exp]]></text>
  </DocumentChange>
  <Command __id="2324" _type="UndoCommand" date="Wed Apr 21 10:34:41 EDT 2021" starttimestamp="1619011563329" timestamp="4118180" />
  <DocumentChange __id="2325" _type="Replace" date="Wed Apr 21 10:34:41 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10915" docExpressionCount="1196" docLength="10915" endLine="76" insertionLength="4" int_docASTNodeCount="1639" int_docActiveCodeLength="10911" int_docExpressionCount="1192" int_docLength="10911" length="24" offset="2482" startLine="76" starttimestamp="1619011563329" timestamp="4118493">
    <deletedText><![CDATA[isExpExpression(aVector)]]></deletedText>
    <insertedText><![CDATA[isEx]]></insertedText>
  </DocumentChange>
  <Command __id="2326" _type="UndoCommand" date="Wed Apr 21 10:34:41 EDT 2021" starttimestamp="1619011563329" timestamp="4118506" />
  <DocumentChange __id="2327" _type="Delete" date="Wed Apr 21 10:34:42 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10904" docExpressionCount="1190" docLength="10904" endLine="76" length="11" offset="2475" startLine="76" starttimestamp="1619011563329" timestamp="4118781">
    <text><![CDATA[parser.isEx]]></text>
  </DocumentChange>
  <Command __id="2328" _type="UndoCommand" date="Wed Apr 21 10:34:42 EDT 2021" starttimestamp="1619011563329" timestamp="4118788" />
  <Command __id="2330" _type="UndoCommand" date="Wed Apr 21 10:34:42 EDT 2021" starttimestamp="1619011563329" timestamp="4119044" />
  <Command __id="2332" _type="UndoCommand" date="Wed Apr 21 10:34:42 EDT 2021" starttimestamp="1619011563329" timestamp="4119334" />
  <Command __id="2333" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:34:43 EDT 2021" starttimestamp="1619011563329" timestamp="4120395" />
  <Command __id="2334" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:34:43 EDT 2021" starttimestamp="1619011563329" timestamp="4120496" />
  <Command __id="2335" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:34:43 EDT 2021" starttimestamp="1619011563329" timestamp="4120518" />
  <DocumentChange __id="2329" _type="Delete" date="Wed Apr 21 10:34:42 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10895" docExpressionCount="1190" docLength="10895" endLine="76" length="9" offset="2467" repeat="2" startLine="75" starttimestamp="1619011563329" timestamp="4119041" timestamp2="4119324">
    <text><![CDATA[
		if ()]]></text>
  </DocumentChange>
  <DocumentChange __id="2337" _type="Insert" date="Wed Apr 21 10:34:52 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10904" docExpressionCount="1190" docLength="10904" length="9" offset="2550" repeat="5" starttimestamp="1619011563329" timestamp="4128943" timestamp2="4129958">
    <text><![CDATA[
		if ()]]></text>
  </DocumentChange>
  <Command __id="2336" _type="MoveCaretCommand" caretOffset="1486" date="Wed Apr 21 10:34:51 EDT 2021" docOffset="2550" starttimestamp="1619011563329" timestamp="4128074" />
  <Command __id="2338" _type="InsertStringCommand" date="Wed Apr 21 10:34:52 EDT 2021" starttimestamp="1619011563329" timestamp="4128951" timestamp2="4128951">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2340" _type="InsertStringCommand" date="Wed Apr 21 10:34:52 EDT 2021" starttimestamp="1619011563329" timestamp="4129526" timestamp2="4129526">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2342" _type="InsertStringCommand" date="Wed Apr 21 10:34:52 EDT 2021" starttimestamp="1619011563329" timestamp="4129591" timestamp2="4129591">
    <data><![CDATA[f]]></data>
  </Command>
  <Command __id="2344" _type="InsertStringCommand" date="Wed Apr 21 10:34:53 EDT 2021" starttimestamp="1619011563329" timestamp="4129723" timestamp2="4129723">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2346" _type="InsertStringCommand" date="Wed Apr 21 10:34:53 EDT 2021" starttimestamp="1619011563329" timestamp="4129964" timestamp2="4129964">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2347" _type="InsertStringCommand" date="Wed Apr 21 10:34:53 EDT 2021" starttimestamp="1619011563329" timestamp="4130034" timestamp2="4130034">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2348" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:34:53 EDT 2021" starttimestamp="1619011563329" timestamp="4130501" />
  <Command __id="2350" _type="UndoCommand" date="Wed Apr 21 10:34:54 EDT 2021" starttimestamp="1619011563329" timestamp="4131599" />
  <Command __id="2352" _type="UndoCommand" date="Wed Apr 21 10:34:55 EDT 2021" starttimestamp="1619011563329" timestamp="4131834" />
  <Command __id="2356" _type="UndoCommand" date="Wed Apr 21 10:34:55 EDT 2021" starttimestamp="1619011563329" timestamp="4132180" />
  <Command __id="2358" _type="UndoCommand" date="Wed Apr 21 10:34:55 EDT 2021" starttimestamp="1619011563329" timestamp="4132518" />
  <Command __id="2360" _type="UndoCommand" date="Wed Apr 21 10:34:56 EDT 2021" starttimestamp="1619011563329" timestamp="4132761" />
  <Command __id="2362" _type="UndoCommand" date="Wed Apr 21 10:34:56 EDT 2021" starttimestamp="1619011563329" timestamp="4132978" />
  <Command __id="2364" _type="UndoCommand" date="Wed Apr 21 10:34:56 EDT 2021" starttimestamp="1619011563329" timestamp="4133217" />
  <Command __id="2366" _type="UndoCommand" date="Wed Apr 21 10:34:56 EDT 2021" starttimestamp="1619011563329" timestamp="4133535" />
  <Command __id="2368" _type="UndoCommand" date="Wed Apr 21 10:34:57 EDT 2021" starttimestamp="1619011563329" timestamp="4133915" />
  <Command __id="2369" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.upperCase" date="Wed Apr 21 10:34:58 EDT 2021" starttimestamp="1619011563329" timestamp="4135091" />
  <Command __id="2370" _type="SelectTextCommand" caretOffset="1899" date="Wed Apr 21 10:35:00 EDT 2021" end="1899" start="1897" starttimestamp="1619011563329" timestamp="4137081" />
  <Command __id="2371" _type="MoveCaretCommand" caretOffset="1549" date="Wed Apr 21 10:35:00 EDT 2021" docOffset="2576" starttimestamp="1619011563329" timestamp="4137582" />
  <Command __id="2372" _type="MoveCaretCommand" caretOffset="1897" date="Wed Apr 21 10:35:01 EDT 2021" docOffset="2924" starttimestamp="1619011563329" timestamp="4138208" />
  <DocumentChange __id="2349" _type="Delete" date="Wed Apr 21 10:34:54 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10895" docExpressionCount="1190" docLength="10895" endLine="77" length="9" offset="2550" repeat="2" startLine="76" starttimestamp="1619011563329" timestamp="4131595" timestamp2="4131823">
    <text><![CDATA[
		if ()]]></text>
  </DocumentChange>
  <DocumentChange __id="2353" _type="Delete" date="Wed Apr 21 10:34:55 EDT 2021" docASTNodeCount="1633" docActiveCodeLength="10858" docExpressionCount="1187" docLength="10858" endLine="19" length="37" offset="601" repeat="2" startLine="18" starttimestamp="1619011563329" timestamp="4132158" timestamp2="4132160">
    <text><![CDATA[
import parser.JavaExpressionParser;]]></text>
  </DocumentChange>
  <DocumentChange __id="2355" _type="Replace" date="Wed Apr 21 10:34:55 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" endLine="74" insertionLength="2" int_docASTNodeCount="1625" int_docActiveCodeLength="10799" int_docExpressionCount="1183" int_docLength="10799" length="59" offset="2371" startLine="74" starttimestamp="1619011563329" timestamp="4132162">
    <deletedText><![CDATA[		JavaExpressionParser parser = new JavaExpressionParser();]]></deletedText>
    <insertedText><![CDATA[		]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2357" _type="Insert" date="Wed Apr 21 10:34:55 EDT 2021" docASTNodeCount="1628" docActiveCodeLength="10805" docExpressionCount="1185" docLength="10805" length="4" offset="2373" starttimestamp="1619011563329" timestamp="4132516">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <DocumentChange __id="2359" _type="Delete" date="Wed Apr 21 10:34:56 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" endLine="74" length="4" offset="2373" startLine="74" starttimestamp="1619011563329" timestamp="4132755">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <DocumentChange __id="2361" _type="Insert" date="Wed Apr 21 10:34:56 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10802" docExpressionCount="1183" docLength="10802" length="1" offset="2928" starttimestamp="1619011563329" timestamp="4132972">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <DocumentChange __id="2363" _type="Insert" date="Wed Apr 21 10:34:56 EDT 2021" docASTNodeCount="1626" docActiveCodeLength="10807" docExpressionCount="1182" docLength="10807" length="5" offset="3010" repeat="2" starttimestamp="1619011563329" timestamp="4133213" timestamp2="4133530">
    <text><![CDATA[
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="2367" _type="Insert" date="Wed Apr 21 10:34:57 EDT 2021" docASTNodeCount="1626" docActiveCodeLength="10809" docExpressionCount="1182" docLength="10809" length="2" offset="2924" starttimestamp="1619011563329" timestamp="4133912">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="2373" _type="MoveCaretCommand" caretOffset="1034" date="Wed Apr 21 10:35:05 EDT 2021" docOffset="2061" starttimestamp="1619011563329" timestamp="4142280" />
  <DocumentChange __id="2374" _type="Delete" date="Wed Apr 21 10:35:06 EDT 2021" docASTNodeCount="1626" docActiveCodeLength="10807" docExpressionCount="1182" docLength="10807" endLine="92" length="2" offset="2924" startLine="91" starttimestamp="1619011563329" timestamp="4143401">
    <text><![CDATA[
]]></text>
  </DocumentChange>
  <Command __id="2375" _type="RedoCommand" date="Wed Apr 21 10:35:06 EDT 2021" starttimestamp="1619011563329" timestamp="4143413" />
  <DocumentChange __id="2376" _type="Delete" date="Wed Apr 21 10:35:06 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10802" docExpressionCount="1183" docLength="10802" endLine="93" length="5" offset="3010" repeat="2" startLine="92" starttimestamp="1619011563329" timestamp="4143606" timestamp2="4143795">
    <text><![CDATA[
		}]]></text>
  </DocumentChange>
  <Command __id="2377" _type="RedoCommand" date="Wed Apr 21 10:35:06 EDT 2021" starttimestamp="1619011563329" timestamp="4143613" />
  <Command __id="2379" _type="RedoCommand" date="Wed Apr 21 10:35:07 EDT 2021" starttimestamp="1619011563329" timestamp="4143803" />
  <DocumentChange __id="2380" _type="Delete" date="Wed Apr 21 10:35:07 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" endLine="92" length="1" offset="2928" startLine="92" starttimestamp="1619011563329" timestamp="4143980">
    <text><![CDATA[	]]></text>
  </DocumentChange>
  <Command __id="2381" _type="RedoCommand" date="Wed Apr 21 10:35:07 EDT 2021" starttimestamp="1619011563329" timestamp="4143984" />
  <DocumentChange __id="2382" _type="Insert" date="Wed Apr 21 10:35:07 EDT 2021" docASTNodeCount="1628" docActiveCodeLength="10805" docExpressionCount="1185" docLength="10805" length="4" offset="2373" starttimestamp="1619011563329" timestamp="4144153">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <Command __id="2383" _type="RedoCommand" date="Wed Apr 21 10:35:07 EDT 2021" starttimestamp="1619011563329" timestamp="4144161" />
  <DocumentChange __id="2384" _type="Delete" date="Wed Apr 21 10:35:07 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10801" docExpressionCount="1183" docLength="10801" endLine="74" length="4" offset="2373" startLine="74" starttimestamp="1619011563329" timestamp="4144299">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <Command __id="2385" _type="RedoCommand" date="Wed Apr 21 10:35:07 EDT 2021" starttimestamp="1619011563329" timestamp="4144304" />
  <DocumentChange __id="2386" _type="Replace" date="Wed Apr 21 10:35:07 EDT 2021" docASTNodeCount="1633" docActiveCodeLength="10858" docExpressionCount="1187" docLength="10858" endLine="74" insertionLength="59" int_docASTNodeCount="1625" int_docActiveCodeLength="10799" int_docExpressionCount="1183" int_docLength="10799" length="2" offset="2371" startLine="74" starttimestamp="1619011563329" timestamp="4144453">
    <deletedText><![CDATA[		]]></deletedText>
    <insertedText><![CDATA[		JavaExpressionParser parser = new JavaExpressionParser();]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2387" _type="Insert" date="Wed Apr 21 10:35:07 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10895" docExpressionCount="1190" docLength="10895" length="37" offset="601" repeat="2" starttimestamp="1619011563329" timestamp="4144454" timestamp2="4144457">
    <text><![CDATA[
import parser.JavaExpressionParser;]]></text>
  </DocumentChange>
  <Command __id="2389" _type="RedoCommand" date="Wed Apr 21 10:35:07 EDT 2021" starttimestamp="1619011563329" timestamp="4144497" />
  <Command __id="2391" _type="RedoCommand" date="Wed Apr 21 10:35:07 EDT 2021" starttimestamp="1619011563329" timestamp="4144618" />
  <Command __id="2393" _type="RedoCommand" date="Wed Apr 21 10:35:08 EDT 2021" starttimestamp="1619011563329" timestamp="4145420" />
  <Command __id="2394" _type="MoveCaretCommand" caretOffset="2559" date="Wed Apr 21 10:35:10 EDT 2021" docOffset="2559" starttimestamp="1619011563329" timestamp="4147262" />
  <Command __id="2395" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:35:10 EDT 2021" starttimestamp="1619011563329" timestamp="4147551" />
  <Command __id="2396" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:10 EDT 2021" starttimestamp="1619011563329" timestamp="4147655" />
  <Command __id="2397" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:11 EDT 2021" starttimestamp="1619011563329" timestamp="4147674" />
  <DocumentChange __id="2390" _type="Insert" date="Wed Apr 21 10:35:07 EDT 2021" docASTNodeCount="1637" docActiveCodeLength="10904" docExpressionCount="1190" docLength="10904" length="9" offset="2550" repeat="2" starttimestamp="1619011563329" timestamp="4144615" timestamp2="4145415">
    <text><![CDATA[
		if ()]]></text>
  </DocumentChange>
  <DocumentChange __id="2399" _type="Insert" date="Wed Apr 21 10:35:12 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10923" docExpressionCount="1196" docLength="10923" length="19" offset="2558" repeat="19" starttimestamp="1619011563329" timestamp="4149450" timestamp2="4153275">
    <text><![CDATA[parser.isExpression]]></text>
  </DocumentChange>
  <DocumentChange __id="2427" _type="Replace" date="Wed Apr 21 10:35:16 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10932" docExpressionCount="1197" docLength="10932" endLine="77" insertionLength="21" int_docASTNodeCount="1639" int_docActiveCodeLength="10911" int_docExpressionCount="1192" int_docLength="10911" length="12" offset="2565" startLine="77" starttimestamp="1619011563329" timestamp="4153605">
    <deletedText><![CDATA[isExpression]]></deletedText>
    <insertedText><![CDATA[isExpression(aVector)]]></insertedText>
  </DocumentChange>
  <Command __id="2398" _type="MoveCaretCommand" caretOffset="2558" date="Wed Apr 21 10:35:12 EDT 2021" docOffset="2558" starttimestamp="1619011563329" timestamp="4148853" />
  <Command __id="2400" _type="InsertStringCommand" date="Wed Apr 21 10:35:12 EDT 2021" starttimestamp="1619011563329" timestamp="4149456" timestamp2="4149456">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2402" _type="InsertStringCommand" date="Wed Apr 21 10:35:12 EDT 2021" starttimestamp="1619011563329" timestamp="4149488" timestamp2="4149488">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2404" _type="InsertStringCommand" date="Wed Apr 21 10:35:12 EDT 2021" starttimestamp="1619011563329" timestamp="4149632" timestamp2="4149632">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2406" _type="InsertStringCommand" date="Wed Apr 21 10:35:13 EDT 2021" starttimestamp="1619011563329" timestamp="4149883" timestamp2="4149883">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2408" _type="InsertStringCommand" date="Wed Apr 21 10:35:13 EDT 2021" starttimestamp="1619011563329" timestamp="4149981" timestamp2="4149981">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2410" _type="InsertStringCommand" date="Wed Apr 21 10:35:14 EDT 2021" starttimestamp="1619011563329" timestamp="4150811" timestamp2="4150811">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2412" _type="InsertStringCommand" date="Wed Apr 21 10:35:14 EDT 2021" starttimestamp="1619011563329" timestamp="4151037" timestamp2="4151037">
    <data><![CDATA[.]]></data>
  </Command>
  <Command __id="2413" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="true" date="Wed Apr 21 10:35:14 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="4151038" />
  <Command __id="2426" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:35:16 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="4153601" />
  <Command __id="2428" _type="InsertStringCommand" date="Wed Apr 21 10:35:16 EDT 2021" starttimestamp="1619011563329" timestamp="4153631" timestamp2="4153631">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2430" _type="InsertStringCommand" date="Wed Apr 21 10:35:18 EDT 2021" starttimestamp="1619011563329" timestamp="4154916" timestamp2="4154916">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2432" _type="InsertStringCommand" date="Wed Apr 21 10:35:18 EDT 2021" starttimestamp="1619011563329" timestamp="4155171" timestamp2="4155171">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2433" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:35:18 EDT 2021" start_end="START" starttimestamp="1619011563329" timestamp="4155470" />
  <Command __id="2434" _type="EclipseCommand" commandID="org.eclipse.ui.edit.text.contentAssist.proposals" date="Wed Apr 21 10:35:18 EDT 2021" starttimestamp="1619011563329" timestamp="4155554" />
  <Command __id="2435" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:35:19 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="4155771" />
  <Command __id="2437" _type="InsertStringCommand" date="Wed Apr 21 10:35:19 EDT 2021" starttimestamp="1619011563329" timestamp="4155778" timestamp2="4155778">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2438" _type="AssistCommand" assist_type="CONTENT_ASSIST" auto_activated="false" date="Wed Apr 21 10:35:20 EDT 2021" start_end="END" starttimestamp="1619011563329" timestamp="4157068" />
  <Command __id="2439" _type="MoveCaretCommand" caretOffset="2590" date="Wed Apr 21 10:35:20 EDT 2021" docOffset="2590" starttimestamp="1619011563329" timestamp="4157153" />
  <Command __id="2441" _type="InsertStringCommand" date="Wed Apr 21 10:35:21 EDT 2021" starttimestamp="1619011563329" timestamp="4157914" timestamp2="4157914">
    <data><![CDATA[{]]></data>
  </Command>
  <Command __id="2443" _type="InsertStringCommand" date="Wed Apr 21 10:35:21 EDT 2021" starttimestamp="1619011563329" timestamp="4157976" timestamp2="4157976">
    <data><![CDATA[}]]></data>
  </Command>
  <Command __id="2444" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.COLUMN_PREVIOUS" date="Wed Apr 21 10:35:22 EDT 2021" starttimestamp="1619011563329" timestamp="4158952" />
  <Command __id="2446" _type="InsertStringCommand" date="Wed Apr 21 10:35:22 EDT 2021" starttimestamp="1619011563329" timestamp="4159216" timestamp2="4159216">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2447" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:35:22 EDT 2021" starttimestamp="1619011563329" timestamp="4159460" />
  <Command __id="2448" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:22 EDT 2021" starttimestamp="1619011563329" timestamp="4159564" />
  <Command __id="2449" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:22 EDT 2021" starttimestamp="1619011563329" timestamp="4159584" />
  <Command __id="2450" _type="SelectTextCommand" caretOffset="2606" date="Wed Apr 21 10:35:25 EDT 2021" end="2714" start="2606" starttimestamp="1619011563329" timestamp="4161980" />
  <Command __id="2451" _type="CopyCommand" date="Wed Apr 21 10:35:25 EDT 2021" starttimestamp="1619011563329" timestamp="4162111" />
  <Command __id="2453" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:26 EDT 2021" starttimestamp="1619011563329" timestamp="4162971" />
  <Command __id="2454" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Wed Apr 21 10:35:26 EDT 2021" starttimestamp="1619011563329" timestamp="4163494" />
  <Command __id="2455" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Wed Apr 21 10:35:26 EDT 2021" starttimestamp="1619011563329" timestamp="4163650" />
  <Command __id="2456" _type="InsertStringCommand" date="Wed Apr 21 10:35:27 EDT 2021" starttimestamp="1619011563329" timestamp="4164242" timestamp2="4164242">
    <data><![CDATA[	]]></data>
  </Command>
  <Command __id="2458" _type="PasteCommand" date="Wed Apr 21 10:35:27 EDT 2021" starttimestamp="1619011563329" timestamp="4164661" />
  <Command __id="2459" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 10:35:28 EDT 2021" starttimestamp="1619011563329" timestamp="4165057" />
  <Command __id="2460" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Wed Apr 21 10:35:28 EDT 2021" starttimestamp="1619011563329" timestamp="4165331" />
  <Command __id="2461" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_UP" date="Wed Apr 21 10:35:28 EDT 2021" starttimestamp="1619011563329" timestamp="4165487" />
  <Command __id="2463" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:29 EDT 2021" starttimestamp="1619011563329" timestamp="4165868" />
  <Command __id="2465" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:29 EDT 2021" starttimestamp="1619011563329" timestamp="4166026" />
  <Command __id="2467" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:29 EDT 2021" starttimestamp="1619011563329" timestamp="4166176" />
  <Command __id="2469" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:29 EDT 2021" starttimestamp="1619011563329" timestamp="4166506" />
  <Command __id="2470" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:35:30 EDT 2021" starttimestamp="1619011563329" timestamp="4166910" />
  <Command __id="2471" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:30 EDT 2021" starttimestamp="1619011563329" timestamp="4167020" />
  <Command __id="2472" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:30 EDT 2021" starttimestamp="1619011563329" timestamp="4167040" />
  <Command __id="2473" _type="MoveCaretCommand" caretOffset="2711" date="Wed Apr 21 10:35:31 EDT 2021" docOffset="2711" starttimestamp="1619011563329" timestamp="4167934" />
  <Command __id="2475" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:31 EDT 2021" starttimestamp="1619011563329" timestamp="4168351" />
  <Command __id="2477" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:31 EDT 2021" starttimestamp="1619011563329" timestamp="4168502" />
  <Command __id="2479" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:32 EDT 2021" starttimestamp="1619011563329" timestamp="4168708" />
  <Command __id="2480" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 10:35:32 EDT 2021" starttimestamp="1619011563329" timestamp="4169191" />
  <Command __id="2482" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:32 EDT 2021" starttimestamp="1619011563329" timestamp="4169524" />
  <Command __id="2484" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:33 EDT 2021" starttimestamp="1619011563329" timestamp="4169705" />
  <Command __id="2486" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:35:33 EDT 2021" starttimestamp="1619011563329" timestamp="4169889" />
  <Command __id="2487" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:35:33 EDT 2021" starttimestamp="1619011563329" timestamp="4170219" />
  <Command __id="2488" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:33 EDT 2021" starttimestamp="1619011563329" timestamp="4170322" />
  <Command __id="2489" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:35:33 EDT 2021" starttimestamp="1619011563329" timestamp="4170343" />
  <Command __id="2490" _type="MoveCaretCommand" caretOffset="2707" date="Wed Apr 21 10:35:34 EDT 2021" docOffset="2707" starttimestamp="1619011563329" timestamp="4170802" />
  <Command __id="2491" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:35:38 EDT 2021" starttimestamp="1619011563329" timestamp="4174949" />
  <Command __id="2492" _type="RunCommand" date="Wed Apr 21 10:35:38 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4175131" type="Run" />
  <Command __id="2493" _type="RunCommand" date="Wed Apr 21 10:35:38 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4175131" type="Run" />
  <Command __id="2494" _type="ShellCommand" date="Wed Apr 21 10:35:39 EDT 2021" starttimestamp="1619011563329" timestamp="4175926" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2495" _type="ConsoleOutput" date="Wed Apr 21 10:35:39 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4176024" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2496" _type="ConsoleOutput" date="Wed Apr 21 10:35:39 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4176167" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2497" _type="ConsoleOutput" date="Wed Apr 21 10:35:41 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4178019" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2498" _type="ConsoleOutput" date="Wed Apr 21 10:35:41 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4178242" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2499" _type="ConsoleOutput" date="Wed Apr 21 10:35:43 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4180644" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2500" _type="ShellCommand" date="Wed Apr 21 10:35:44 EDT 2021" starttimestamp="1619011563329" timestamp="4181361" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2501" _type="RunCommand" date="Wed Apr 21 10:35:44 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4181537" type="Run" />
  <Command __id="2502" _type="RunCommand" date="Wed Apr 21 10:35:44 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4181537" type="Run" />
  <Command __id="2503" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:35:49 EDT 2021" starttimestamp="1619011563329" timestamp="4185839" />
  <Command __id="2504" _type="RunCommand" date="Wed Apr 21 10:35:49 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4186009" type="Run" />
  <Command __id="2505" _type="RunCommand" date="Wed Apr 21 10:35:49 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4186009" type="Run" />
  <Command __id="2506" _type="ShellCommand" date="Wed Apr 21 10:35:50 EDT 2021" starttimestamp="1619011563329" timestamp="4186805" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2507" _type="ConsoleOutput" date="Wed Apr 21 10:35:50 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4186908" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Testing Expression [a]¶Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2508" _type="ConsoleOutput" date="Wed Apr 21 10:35:50 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4187035" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2509" _type="ConsoleOutput" date="Wed Apr 21 10:35:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4189215" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2510" _type="ConsoleOutput" date="Wed Apr 21 10:35:52 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4189485" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2511" _type="ConsoleOutput" date="Wed Apr 21 10:35:53 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4190661" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e, x, p, (, x, ), a]¶Testing add-sub Expression [e, x, p, (, x, ), a]¶Testing multi div Expression [e, x, p, (, x, ), a]¶Testing function Expression [e, x, p, (, x, ), a]¶Testing parenthesis Expression [e, x, p, (, x, ), a]¶Parenthesis Expression [x, p, (, x, )]¶Testing Expression [e, x, p, (, x, ), a]¶Testing add-sub Expression [e, x, p, (, x, ), a]¶Testing multi div Expression [e, x, p, (, x, ), a]¶Testing function Expression [e, x, p, (, x, ), a]¶Testing parenthesis Expression [e, x, p, (, x, ), a]¶Parenthesis Expression [x, p, (, x, )]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2512" _type="ConsoleOutput" date="Wed Apr 21 10:35:56 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4192880" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing add-sub Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing multi div Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing function Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"Expression [x]¶Testing add-sub"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Parenthesis"), Diff(INSERT,"]¶Testing multi div"), Diff(EQUAL," Expression ["), Diff(INSERT,"e, "), Diff(EQUAL,"x, p, (, x, )]¶Testing "), Diff(INSERT,"function "), Diff(EQUAL,"Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Testing add-sub"), Diff(INSERT,"]¶Testing Expression [x]¶Testing Expression [x]¶Testing"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div"), Diff(INSERT,"add-sub"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function"), Diff(INSERT,"multi div"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"function"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Parenthesis Expression [x, p, (, x, )]"), Diff(INSERT,"]¶Testing Expression [x]¶Testing Expression [x]¶Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2513" _type="ShellCommand" date="Wed Apr 21 10:36:01 EDT 2021" starttimestamp="1619011563329" timestamp="4198123" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2514" _type="RunCommand" date="Wed Apr 21 10:36:01 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4198293" type="Run" />
  <Command __id="2515" _type="RunCommand" date="Wed Apr 21 10:36:01 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4198293" type="Run" />
  <Command __id="2516" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:36:05 EDT 2021" starttimestamp="1619011563329" timestamp="4202032" />
  <Command __id="2517" _type="RunCommand" date="Wed Apr 21 10:36:05 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4202101" type="Run" />
  <Command __id="2518" _type="RunCommand" date="Wed Apr 21 10:36:05 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4202101" type="Run" />
  <Command __id="2519" _type="ShellCommand" date="Wed Apr 21 10:36:06 EDT 2021" starttimestamp="1619011563329" timestamp="4202897" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2520" _type="ConsoleOutput" date="Wed Apr 21 10:36:06 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4202996" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2521" _type="ConsoleOutput" date="Wed Apr 21 10:36:06 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4203120" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2522" _type="ConsoleOutput" date="Wed Apr 21 10:36:10 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4207284" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, a, )]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [e, x, p, (, a, )]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2523" _type="ConsoleOutput" date="Wed Apr 21 10:36:10 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4207628" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2524" _type="ConsoleOutput" date="Wed Apr 21 10:36:14 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4211090" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing Expression [e, x, p, (, x, ), e]¶Testing add-sub Expression [e, x, p, (, x, ), e]¶Testing multi div Expression [e, x, p, (, x, ), e]¶Testing function Expression [e, x, p, (, x, ), e]¶Testing parenthesis Expression [e, x, p, (, x, ), e]¶Parenthesis Expression [x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Parenthesis Expression [x, p, (, x, ), e, ^, {, a]¶Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing Expression [e, x, p, (, x, ), e]¶Testing add-sub Expression [e, x, p, (, x, ), e]¶Testing multi div Expression [e, x, p, (, x, ), e]¶Testing function Expression [e, x, p, (, x, ), e]¶Testing parenthesis Expression [e, x, p, (, x, ), e]¶Parenthesis Expression [x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Parenthesis Expression [x, p, (, x, ), e, ^, {, a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2525" _type="ConsoleOutput" date="Wed Apr 21 10:36:17 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4214050" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing Expression [e, x, p, (, x, ), e]
Testing add-sub Expression [e, x, p, (, x, ), e]
Testing multi div Expression [e, x, p, (, x, ), e]
Testing function Expression [e, x, p, (, x, ), e]
Testing parenthesis Expression [e, x, p, (, x, ), e]
Parenthesis Expression [x, p, (, x, )]
Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]
Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]
Parenthesis Expression [x, p, (, x, ), e, ^, {, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing Expression [e, x, p, (, x, ), e]¶Testing add-sub Expression [e, x, p, (, x, ), e]¶Testing multi div Expression [e, x, p, (, x, ), e]¶Testing function Expression [e, x, p, (, x, ), e]¶Testing parenthesis Expression [e, x, p, (, x, ), e]¶Parenthesis Expression [x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Parenthesis Expression [x, p, (, x, ), e, ^, {, a]¶Testing Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing add-sub Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing multi div Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing Expression [e, x, p, (, x, ), e]¶Testing add-sub Expression [e, x, p, (, x, ), e]¶Testing multi div Expression [e, x, p, (, x, ), e]¶Testing function Expression [e, x, p, (, x, ), e]¶Testing parenthesis Expression [e, x, p, (, x, ), e]¶Parenthesis Expression [x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Testing parenthesis Expression [e, x, p, (, x, ), e, ^, {, a, }]¶Parenthesis Expression [x, p, (, x, ), e, ^, {, a]¶")]]]></diff>
  </Command>
  <Command __id="2526" _type="ConsoleOutput" date="Wed Apr 21 10:36:22 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4218942" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression []
Testing Expression []
Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing Expression [s, q, r, t, (, a, ), e]
Testing add-sub Expression [s, q, r, t, (, a, ), e]
Testing multi div Expression [s, q, r, t, (, a, ), e]
Testing function Expression [s, q, r, t, (, a, ), e]
Testing parenthesis Expression [s, q, r, t, (, a, ), e]
Parenthesis Expression [q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]
Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing Expression [s, q, r, t, (, a, ), e]
Testing add-sub Expression [s, q, r, t, (, a, ), e]
Testing multi div Expression [s, q, r, t, (, a, ), e]
Testing function Expression [s, q, r, t, (, a, ), e]
Testing parenthesis Expression [s, q, r, t, (, a, ), e]
Parenthesis Expression [q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"]¶Testing Expression []¶Testing Expression [s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing multi div Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing multi div Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing function Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing parenthesis Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Parenthesis Expression ["), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing function Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing parenthesis Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Parenthesis Expression ["), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a]¶Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing multi div Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing multi div Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing function Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"q"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"r, t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Testing parenthesis Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e]¶Parenthesis Expression ["), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", )]¶Testing function Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Testing parenthesis Expression ["), Diff(DELETE,"e"), Diff(INSERT,"s, q"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a, }]¶Parenthesis Expression ["), Diff(DELETE,"x"), Diff(INSERT,"q, r"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"t"), Diff(EQUAL,", (, "), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,", ), e, ^, {, a]¶")]]]></diff>
  </Command>
  <Command __id="2527" _type="ConsoleOutput" date="Wed Apr 21 10:36:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4221364" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression []
Testing Expression []
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression []¶Testing Expression []¶"), Diff(DELETE,"Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing Expression [s, q, r, t, (, a, ), e]¶Testing add-sub Expression [s, q, r, t, (, a, ), e]¶Testing multi div Expression [s, q, r, t, (, a, ), e]¶Testing function Expression [s, q, r, t, (, a, ), e]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]¶Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing Expression [s, q, r, t, (, a, ), e]¶Testing add-sub Expression [s, q, r, t, (, a, ), e]¶Testing multi div Expression [s, q, r, t, (, a, ), e]¶Testing function Expression [s, q, r, t, (, a, ), e]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]¶")]]]></diff>
  </Command>
  <Command __id="2528" _type="ConsoleOutput" date="Wed Apr 21 10:36:26 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4222782" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing Expression [s, q, r, t, (, a, ), e]
Testing add-sub Expression [s, q, r, t, (, a, ), e]
Testing multi div Expression [s, q, r, t, (, a, ), e]
Testing function Expression [s, q, r, t, (, a, ), e]
Testing parenthesis Expression [s, q, r, t, (, a, ), e]
Parenthesis Expression [q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]
Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing Expression [s, q, r, t, (, a, ), e]
Testing add-sub Expression [s, q, r, t, (, a, ), e]
Testing multi div Expression [s, q, r, t, (, a, ), e]
Testing function Expression [s, q, r, t, (, a, ), e]
Testing parenthesis Expression [s, q, r, t, (, a, ), e]
Parenthesis Expression [q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]
Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"]¶Testing Expression ["), Diff(INSERT,"s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing Expression [s, q, r, t, (, a, ), e]¶Testing add-sub Expression [s, q, r, t, (, a, ), e]¶Testing multi div Expression [s, q, r, t, (, a, ), e]¶Testing function Expression [s, q, r, t, (, a, ), e]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]¶Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing Expression [s, q, r, t, (, a, ), e]¶Testing add-sub Expression [s, q, r, t, (, a, ), e]¶Testing multi div Expression [s, q, r, t, (, a, ), e]¶Testing function Expression [s, q, r, t, (, a, ), e]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2553" _type="RunCommand" date="Wed Apr 21 10:36:35 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4231915" type="Run" />
  <Command __id="2554" _type="RunCommand" date="Wed Apr 21 10:36:35 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4231916" type="Run" />
  <Command __id="2555" _type="SelectTextCommand" caretOffset="9724" date="Wed Apr 21 10:37:05 EDT 2021" end="9727" start="9724" starttimestamp="1619011563329" timestamp="4261791" />
  <Command __id="2557" _type="InsertStringCommand" date="Wed Apr 21 10:37:05 EDT 2021" starttimestamp="1619011563329" timestamp="4262381" timestamp2="4262381">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="2559" _type="InsertStringCommand" date="Wed Apr 21 10:37:05 EDT 2021" starttimestamp="1619011563329" timestamp="4262590" timestamp2="4262590">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2561" _type="InsertStringCommand" date="Wed Apr 21 10:37:06 EDT 2021" starttimestamp="1619011563329" timestamp="4262752" timestamp2="4262752">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2563" _type="InsertStringCommand" date="Wed Apr 21 10:37:06 EDT 2021" starttimestamp="1619011563329" timestamp="4262834" timestamp2="4262834">
    <data><![CDATA[a]]></data>
  </Command>
  <DocumentChange __id="2429" _type="Replace" date="Wed Apr 21 10:35:18 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10926" docExpressionCount="1197" docLength="10926" endLine="77" insertionLength="1" int_docASTNodeCount="1643" int_docActiveCodeLength="10925" int_docExpressionCount="1196" int_docLength="10925" length="7" offset="2578" startLine="77" starttimestamp="1619011563329" timestamp="4154908">
    <deletedText><![CDATA[aVector]]></deletedText>
    <insertedText><![CDATA[r]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2431" _type="Insert" date="Wed Apr 21 10:35:18 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10927" docExpressionCount="1197" docLength="10927" length="1" offset="2579" starttimestamp="1619011563329" timestamp="4155170">
    <text><![CDATA[o]]></text>
  </DocumentChange>
  <DocumentChange __id="2436" _type="Replace" date="Wed Apr 21 10:35:19 EDT 2021" docASTNodeCount="1644" docActiveCodeLength="10935" docExpressionCount="1197" docLength="10935" endLine="77" insertionLength="10" int_docASTNodeCount="1643" int_docActiveCodeLength="10925" int_docExpressionCount="1196" int_docLength="10925" length="2" offset="2578" startLine="77" starttimestamp="1619011563329" timestamp="4155774">
    <deletedText><![CDATA[ro]]></deletedText>
    <insertedText><![CDATA[rootVector]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2440" _type="Insert" date="Wed Apr 21 10:35:21 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10947" docExpressionCount="1194" docLength="10947" length="12" offset="2590" repeat="3" starttimestamp="1619011563329" timestamp="4157910" timestamp2="4159208">
    <text><![CDATA[ {
			
		}]]></text>
  </DocumentChange>
  <DocumentChange __id="2452" _type="Delete" date="Wed Apr 21 10:35:26 EDT 2021" docASTNodeCount="1626" docActiveCodeLength="10839" docExpressionCount="1182" docLength="10839" endLine="82" length="108" offset="2606" startLine="80" starttimestamp="1619011563329" timestamp="4162962">
    <text><![CDATA[TexTreeBuilder builder = new TexTreeBuilder();
		
		setTexExpression(builder.build(treeParser.getRoot()));]]></text>
  </DocumentChange>
  <DocumentChange __id="2457" _type="Replace" date="Wed Apr 21 10:35:27 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10949" docExpressionCount="1194" docLength="10949" endLine="78" insertionLength="113" int_docASTNodeCount="1626" int_docActiveCodeLength="10836" int_docExpressionCount="1182" int_docLength="10836" length="3" offset="2594" startLine="78" starttimestamp="1619011563329" timestamp="4164655">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			TexTreeBuilder builder = new TexTreeBuilder();
			
			setTexExpression(builder.build(treeParser.getRoot()));]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2462" _type="Delete" date="Wed Apr 21 10:35:29 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10944" docExpressionCount="1194" docLength="10944" endLine="79" length="5" offset="2643" repeat="4" startLine="78" starttimestamp="1619011563329" timestamp="4165866" timestamp2="4166496">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2474" _type="Delete" date="Wed Apr 21 10:35:31 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10940" docExpressionCount="1194" docLength="10940" endLine="81" length="4" offset="2707" repeat="3" startLine="80" starttimestamp="1619011563329" timestamp="4168347" timestamp2="4168701">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2481" _type="Delete" date="Wed Apr 21 10:35:32 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10936" docExpressionCount="1194" docLength="10936" endLine="81" length="4" offset="2707" repeat="3" startLine="80" starttimestamp="1619011563329" timestamp="4169522" timestamp2="4169879">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2556" _type="Replace" date="Wed Apr 21 10:37:05 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10934" docExpressionCount="1194" docLength="10934" endLine="343" insertionLength="1" int_docASTNodeCount="1643" int_docActiveCodeLength="10933" int_docExpressionCount="1194" int_docLength="10933" length="3" offset="9724" startLine="343" starttimestamp="1619011563329" timestamp="4262375">
    <deletedText><![CDATA[Tex]]></deletedText>
    <insertedText><![CDATA[J]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2558" _type="Insert" date="Wed Apr 21 10:37:05 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10937" docExpressionCount="1194" docLength="10937" length="3" offset="9725" repeat="3" starttimestamp="1619011563329" timestamp="4262587" timestamp2="4262831">
    <text><![CDATA[ava]]></text>
  </DocumentChange>
  <DocumentChange __id="2565" _type="Delete" date="Wed Apr 21 10:37:08 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10934" docExpressionCount="1194" docLength="10934" endLine="354" length="3" offset="10013" startLine="354" starttimestamp="1619011563329" timestamp="4264745">
    <text><![CDATA[Tex]]></text>
  </DocumentChange>
  <DocumentChange __id="2567" _type="Insert" date="Wed Apr 21 10:37:08 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10938" docExpressionCount="1194" docLength="10938" length="4" offset="10013" repeat="4" starttimestamp="1619011563329" timestamp="4265053" timestamp2="4265476">
    <text><![CDATA[Java]]></text>
  </DocumentChange>
  <Command __id="2564" _type="SelectTextCommand" caretOffset="10013" date="Wed Apr 21 10:37:07 EDT 2021" end="10016" start="10013" starttimestamp="1619011563329" timestamp="4264337" />
  <Command __id="2566" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:37:08 EDT 2021" starttimestamp="1619011563329" timestamp="4264747" />
  <Command __id="2568" _type="InsertStringCommand" date="Wed Apr 21 10:37:08 EDT 2021" starttimestamp="1619011563329" timestamp="4265056" timestamp2="4265056">
    <data><![CDATA[J]]></data>
  </Command>
  <Command __id="2570" _type="InsertStringCommand" date="Wed Apr 21 10:37:08 EDT 2021" starttimestamp="1619011563329" timestamp="4265257" timestamp2="4265257">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2572" _type="InsertStringCommand" date="Wed Apr 21 10:37:08 EDT 2021" starttimestamp="1619011563329" timestamp="4265404" timestamp2="4265404">
    <data><![CDATA[v]]></data>
  </Command>
  <Command __id="2574" _type="InsertStringCommand" date="Wed Apr 21 10:37:08 EDT 2021" starttimestamp="1619011563329" timestamp="4265479" timestamp2="4265479">
    <data><![CDATA[a]]></data>
  </Command>
  <Command __id="2575" _type="MoveCaretCommand" caretOffset="9882" date="Wed Apr 21 10:37:09 EDT 2021" docOffset="9882" starttimestamp="1619011563329" timestamp="4266132" />
  <Command __id="2576" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:37:09 EDT 2021" starttimestamp="1619011563329" timestamp="4266321" />
  <Command __id="2577" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:37:09 EDT 2021" starttimestamp="1619011563329" timestamp="4266417" />
  <Command __id="2578" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:37:09 EDT 2021" starttimestamp="1619011563329" timestamp="4266436" />
  <Command __id="2580" _type="SelectTextCommand" caretOffset="406" date="Wed Apr 21 10:37:12 EDT 2021" end="407" start="406" starttimestamp="1619011563329" timestamp="4269472" />
  <Command __id="2581" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:37:14 EDT 2021" starttimestamp="1619011563329" timestamp="4271443" />
  <Command __id="2582" _type="RunCommand" date="Wed Apr 21 10:37:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4271613" type="Run" />
  <Command __id="2583" _type="RunCommand" date="Wed Apr 21 10:37:14 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4271613" type="Run" />
  <Command __id="2584" _type="ShellCommand" date="Wed Apr 21 10:37:15 EDT 2021" starttimestamp="1619011563329" timestamp="4272403" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2585" _type="ConsoleOutput" date="Wed Apr 21 10:37:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4272520" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing Expression [s, q, r, t, (, a, ), e]¶Testing add-sub Expression [s, q, r, t, (, a, ), e]¶Testing multi div Expression [s, q, r, t, (, a, ), e]¶Testing function Expression [s, q, r, t, (, a, ), e]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]¶Testing Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing add-sub Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing multi div Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing Expression [s, q, r, t, (, a, ), e]¶Testing add-sub Expression [s, q, r, t, (, a, ), e]¶Testing multi div Expression [s, q, r, t, (, a, ), e]¶Testing function Expression [s, q, r, t, (, a, ), e]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Testing parenthesis Expression [s, q, r, t, (, a, ), e, ^, {, a, }]¶Parenthesis Expression [q, r, t, (, a, ), e, ^, {, a]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2586" _type="ConsoleOutput" date="Wed Apr 21 10:37:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4272637" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2587" _type="ConsoleOutput" date="Wed Apr 21 10:37:18 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4274899" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2588" _type="ConsoleOutput" date="Wed Apr 21 10:37:18 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4275171" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2589" _type="ConsoleOutput" date="Wed Apr 21 10:37:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4277456" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2590" _type="ShellCommand" date="Wed Apr 21 10:37:21 EDT 2021" starttimestamp="1619011563329" timestamp="4278306" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2591" _type="RunCommand" date="Wed Apr 21 10:37:21 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4278487" type="Run" />
  <Command __id="2592" _type="RunCommand" date="Wed Apr 21 10:37:21 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4278487" type="Run" />
  <Command __id="2593" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:37:26 EDT 2021" starttimestamp="1619011563329" timestamp="4282959" />
  <Command __id="2594" _type="RunCommand" date="Wed Apr 21 10:37:26 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4283124" type="Run" />
  <Command __id="2595" _type="RunCommand" date="Wed Apr 21 10:37:26 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4283124" type="Run" />
  <Command __id="2596" _type="ShellCommand" date="Wed Apr 21 10:37:27 EDT 2021" starttimestamp="1619011563329" timestamp="4283923" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2597" _type="ConsoleOutput" date="Wed Apr 21 10:37:27 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4284017" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2598" _type="ConsoleOutput" date="Wed Apr 21 10:37:27 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4284139" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2599" _type="ConsoleOutput" date="Wed Apr 21 10:37:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4291551" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, a, )]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [e, x, p, (, a, )]
Testing add-sub Expression [e, x, p, (, a, )]
Testing multi div Expression [e, x, p, (, a, )]
Testing function Expression [e, x, p, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2600" _type="ConsoleOutput" date="Wed Apr 21 10:37:35 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4291780" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [e, x, p, (, a, )]¶Testing add-sub Expression [e, x, p, (, a, )]¶Testing multi div Expression [e, x, p, (, a, )]¶Testing function Expression [e, x, p, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2579" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:37:12 EDT 2021" docASTNodeCount="500" docActiveCodeLength="3984" docExpressionCount="374" docLength="3984" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4269339">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\MathMain.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import java.util.Vector;¶import javax.swing.text.JTextComponent;¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.uiFrame;¶import bus.uigen.attributes.AttributeNames;¶import bus.uigen.oadapters.ClassAdapter;¶import bus.uigen.oadapters.ObjectAdapter;¶import components.caret.MathPanelCaretListener;¶import components.mathEditor.MathEditorPanel;¶¶public class MathMain {¶	public static MathEditorPanel panel;¶	public static OEFrame frame;¶	¶	public static void main(String[] args) {¶		panel = new MathEditorPanel();¶		frame = ObjectEditor.edit(panel);¶		¶		setCaretPositionListener();¶		setButtonImage();¶	}¶	¶	public static void setButtonImage() {¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.ICON, "image/dot.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "CrossProduct", AttributeNames.ICON, "image/times.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Divide", AttributeNames.ICON, "image/div.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Neq", AttributeNames.ICON, "image/neq.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ge", AttributeNames.ICON, "image/ge.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Le", AttributeNames.ICON, "image/le.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Approximate", AttributeNames.ICON, "image/approx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Not", AttributeNames.ICON, "image/not.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Inf", AttributeNames.ICON, "image/inf.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Pm", AttributeNames.ICON, "image/pm.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Dot", AttributeNames.ICON, "image/dotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ddot", AttributeNames.ICON, "image/ddotx.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SuperScript", AttributeNames.ICON, "image/superscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "SubScript", AttributeNames.ICON, "image/subscript.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Fraction", AttributeNames.ICON, "image/fraction.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sqrt", AttributeNames.ICON, "image/sqrt.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Floor", AttributeNames.ICON, "image/floor.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Ceil", AttributeNames.ICON, "image/ceil.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Integral", AttributeNames.ICON, "image/integral.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "Sum", AttributeNames.ICON, "image/sum.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaExp", AttributeNames.ICON, "image/exp.png");¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "JavaSqrt", AttributeNames.ICON, "image/sqrt.png");¶		¶		¶		ObjectEditor.setMethodAttribute(MathEditorPanel.class, "DotProduct", AttributeNames.EXPLANATION, "some text");¶	}¶	¶	public static void setCaretPositionListener() {¶		uiFrame aUIFrame = (uiFrame) frame;¶		ClassAdapter adapter = (ClassAdapter) aUIFrame.getTopAdapter();¶		Vector<ObjectAdapter> children = adapter.getChildrenVector();¶		¶		ObjectAdapter observableAdapter = null;¶		¶		for (ObjectAdapter child : children) {¶			if (child.getComponentName().equals("mathExpression")) {¶				observableAdapter = child;¶				break;¶			}¶		}¶		¶		MathPanelCaretListener listener = new MathPanelCaretListener(panel);¶		¶		if (observableAdapter != null && (observableAdapter.getUIComponent().getPhysicalComponent()) instanceof JTextComponent) {¶			((JTextComponent) observableAdapter.getUIComponent().getPhysicalComponent()).addCaretListener(listener);¶		}¶	}¶¶}¶")]]]></diff>
  </Command>
  <Command __id="2601" _type="ShellCommand" date="Wed Apr 21 10:37:38 EDT 2021" starttimestamp="1619011563329" timestamp="4294949" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2602" _type="RunCommand" date="Wed Apr 21 10:37:38 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4295129" type="Run" />
  <Command __id="2603" _type="RunCommand" date="Wed Apr 21 10:37:38 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4295129" type="Run" />
  <Command __id="2604" _type="MoveCaretCommand" caretOffset="1930" date="Wed Apr 21 10:37:39 EDT 2021" docOffset="2283" starttimestamp="1619011563329" timestamp="4295724" />
  <Command __id="2605" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:37:40 EDT 2021" docASTNodeCount="146" docActiveCodeLength="904" docExpressionCount="108" docLength="904" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4296988">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\main\TaskPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package main;¶¶import bus.uigen.OEFrame;¶import bus.uigen.ObjectEditor;¶import bus.uigen.attributes.AttributeNames;¶import components.composedGraph.ComposedGraph;¶import components.mainpanel.MainPanel;¶import components.mainpanel.MainPanelInterface;¶import components.page.pages.Page;¶import exporter.Exporter;¶¶public class TaskPanel {¶¶	public static void main(String[] args) {¶		MainPanelInterface panel = new MainPanel();¶		panel.addPage(new Page("Example task I", "", 0));¶		panel.addPage(new Page("Example task II", "", 1));¶		¶		ObjectEditor.setPropertyAttribute(Page.class, "answer", AttributeNames.SCROLLED, true);¶		ObjectEditor.setMethodAttribute(ComposedGraph.class, "addLine", AttributeNames.ICON, "Test");¶		¶		OEFrame frame = ObjectEditor.edit(panel);¶		¶		"), Diff(DELETE,"¶		¶		¶		"), Diff(EQUAL,"frame.setSize(700, 1000);¶		frame.setLocation(0, 0);¶		Exporter.export(panel, "example.json");¶¶	}¶¶}¶")]]]></diff>
    <snapshot><![CDATA[package main;

import bus.uigen.OEFrame;
import bus.uigen.ObjectEditor;
import bus.uigen.attributes.AttributeNames;
import components.composedGraph.ComposedGraph;
import components.mainpanel.MainPanel;
import components.mainpanel.MainPanelInterface;
import components.page.pages.Page;
import exporter.Exporter;

public class TaskPanel {

	public static void main(String[] args) {
		MainPanelInterface panel = new MainPanel();
		panel.addPage(new Page("Example task I", "", 0));
		panel.addPage(new Page("Example task II", "", 1));
		
		ObjectEditor.setPropertyAttribute(Page.class, "answer", AttributeNames.SCROLLED, true);
		ObjectEditor.setMethodAttribute(ComposedGraph.class, "addLine", AttributeNames.ICON, "Test");
		
		OEFrame frame = ObjectEditor.edit(panel);
		
		frame.setSize(700, 1000);
		frame.setLocation(0, 0);
		Exporter.export(panel, "example.json");

	}

}
]]></snapshot>
  </Command>
  <Command __id="2606" _type="MoveCaretCommand" caretOffset="514" date="Wed Apr 21 10:37:40 EDT 2021" docOffset="791" starttimestamp="1619011563329" timestamp="4297099" />
  <Command __id="2608" _type="MoveCaretCommand" caretOffset="0" date="Wed Apr 21 10:37:42 EDT 2021" docOffset="0" starttimestamp="1619011563329" timestamp="4299319" />
  <Command __id="2609" _type="MoveCaretCommand" caretOffset="5092" date="Wed Apr 21 10:39:55 EDT 2021" docOffset="5196" starttimestamp="1619011563329" timestamp="4432058" />
  <Command __id="2610" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:40:04 EDT 2021" starttimestamp="1619011563329" timestamp="4441338" />
  <Command __id="2611" _type="RunCommand" date="Wed Apr 21 10:40:04 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4441504" type="Run" />
  <Command __id="2612" _type="RunCommand" date="Wed Apr 21 10:40:04 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4441504" type="Run" />
  <Command __id="2613" _type="ShellCommand" date="Wed Apr 21 10:40:05 EDT 2021" starttimestamp="1619011563329" timestamp="4442301" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2614" _type="ConsoleOutput" date="Wed Apr 21 10:40:05 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4442402" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327"), Diff(EQUAL,"¶W*** public void components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL,".addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit"), Diff(DELETE,"ly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable"), Diff(INSERT," property caretPosition of  MathEditorPanel ignored"), Diff(EQUAL," as it is not in "), Diff(DELETE,"editable "), Diff(EQUAL,"property names list. ¶"), Diff(DELETE,"¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as "), Diff(INSERT," Associate annotation @Visible(false) w"), Diff(EQUAL,"it"), Diff(INSERT,"h"), Diff(EQUAL," i"), Diff(DELETE,"s not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x"), Diff(INSERT,"ts getter.¶W*** Implicitly editable property: caretPosition"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: "), Diff(DELETE,"y"), Diff(INSERT,"image"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="2615" _type="ConsoleOutput" date="Wed Apr 21 10:40:05 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4442529" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2616" _type="ConsoleOutput" date="Wed Apr 21 10:40:09 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4445741" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2617" _type="ConsoleOutput" date="Wed Apr 21 10:40:09 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4445967" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2618" _type="ConsoleOutput" date="Wed Apr 21 10:40:10 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4447147" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e, x, p, (, x, ), a]¶Testing add-sub Expression [e, x, p, (, x, ), a]¶Testing multi div Expression [e, x, p, (, x, ), a]¶Testing function Expression [e, x, p, (, x, ), a]¶Testing parenthesis Expression [e, x, p, (, x, ), a]¶Parenthesis Expression [x, p, (, x, )]¶Testing Expression [e, x, p, (, x, ), a]¶Testing add-sub Expression [e, x, p, (, x, ), a]¶Testing multi div Expression [e, x, p, (, x, ), a]¶Testing function Expression [e, x, p, (, x, ), a]¶Testing parenthesis Expression [e, x, p, (, x, ), a]¶Parenthesis Expression [x, p, (, x, )]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2619" _type="ConsoleOutput" date="Wed Apr 21 10:40:12 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4448909" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing add-sub Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing multi div Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing function Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"Expression [x]¶Testing add-sub"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Parenthesis"), Diff(INSERT,"]¶Testing multi div"), Diff(EQUAL," Expression ["), Diff(INSERT,"e, "), Diff(EQUAL,"x, p, (, x, )]¶Testing "), Diff(INSERT,"function "), Diff(EQUAL,"Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Testing add-sub"), Diff(INSERT,"]¶Testing Expression [x]¶Testing Expression [x]¶Testing"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div"), Diff(INSERT,"add-sub"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function"), Diff(INSERT,"multi div"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"function"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Parenthesis Expression [x, p, (, x, )]"), Diff(INSERT,"]¶Testing Expression [x]¶Testing Expression [x]¶Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2620" _type="ConsoleOutput" date="Wed Apr 21 10:40:18 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4454781" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2621" _type="ConsoleOutput" date="Wed Apr 21 10:40:21 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4458209" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2607" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:37:42 EDT 2021" docASTNodeCount="1375" docActiveCodeLength="7559" docExpressionCount="897" docLength="7559" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4299233">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\parser\JavaExpressionParser.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package parser;¶¶import java.util.Arrays;¶import java.util.Vector;¶¶import javax.swing.JTree;¶import javax.swing.tree.DefaultMutableTreeNode;¶¶¶public class JavaExpressionParser {¶	public static final char COMMA = ',', PLUS = '+', MINUS = '-', TIMES = '*', DIVIDES = '/', CARET = '^', EQUALS = '=', LP = '(', RP = ')';¶	public enum FunctionName{¶		SQRT ("sqrt"),¶		POW ("pow"),¶		EXP ("exp"),¶		LOG ("log"),¶		SIN ("sin"),¶		COS ("cos"),¶		TAN ("tan"),¶		MIN ("min"),¶		MAX ("max");¶		public String name;¶		FunctionName(String newName){¶			name = newName;¶		}¶	}¶	¶	¶	public JavaExpressionParser(){¶		¶	}¶	¶	public Vector<Character> trim(Vector<Character> aVector){¶		Vector<Character> newVector = new Vector<Character> ();¶		for (Character c : aVector) {¶			if (c != ' ') {¶				newVector.add(c);¶			}¶		}¶		return newVector;¶	}¶	¶	public boolean isExpression(Vector<Character> aVector) {¶		System.out.println("Testing Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		return isAtomicExpression(aVector) || isAddSubExpression(aVector) || isMultiDivExpression(aVector) || isExpExpression(aVector) || isFunctionExpression(aVector) || isParenthesisExpression(aVector);¶	}¶	public boolean isAddSubExpression(Vector<Character> aVector) {¶		System.out.println("Testing add-sub Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isAddOrSub(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isMultiDivExpression(Vector<Character> aVector) {¶		System.out.println("Testing multi div Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isMultiOrDiv(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isExpExpression(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isCaret(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isExpression(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isFunctionExpression(Vector<Character> aVector) {¶		System.out.println("Testing function Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		int pt = 0;¶		while (!isFunctionName(truncate(aVector, 0, pt)) && pt < aVector.size()) {¶			pt ++;¶		}¶		if (aVector.size() == pt) return false;¶		return isFunctionParameters(truncate(aVector, pt, aVector.size()));¶	}¶	public boolean isFunctionParameters(Vector<Character> aVector) {¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size()-1)) && isParameters(truncateBoth(aVector));¶	}¶	public boolean isParameters(Vector<Character> aVector) {¶		if (aVector.size() == 0) return false;¶		if (isExpression(aVector)) return true;¶		int pt = 0;¶		while (pt < aVector.size() && ¶				(!isComma(aVector.get(pt)) || !isExpression(truncate(aVector, 0, pt)) || !isParameters(truncate(aVector, pt + 1, aVector.size())))) {¶			pt ++;¶		}¶		if (pt == aVector.size()) return false;¶		return true;¶	}¶	public boolean isParenthesisExpression(Vector<Character> aVector) {¶		System.out.println("Testing parenthesis Expression " + aVector);¶		if (aVector.size() == 0) return false;¶		System.out.println("Parenthesis Expression " + truncateBoth(aVector));¶		return isLeftParenthesis(aVector.get(0)) && isRightParenthesis(aVector.get(aVector.size() - 1)) && isExpression(truncateBoth(aVector));¶	}¶	public boolean isFunctionName(Vector<Character> aVector) {¶		for (FunctionName functionName : FunctionName.values()) {¶			if (compare(aVector, functionName.name)) {¶				return true;¶			}¶		}¶		return false;¶	}¶	public boolean isAtomicExpression(Vector<Character> aVector) {¶		return isNumber(aVector) || isVariable(aVector);¶	}¶	public boolean isNumber(Vector<Character> aVector) {¶		return isUnsignedNumber(aVector) || (isSign(aVector.get(0)) && isUnsignedNumber(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedNumber(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isNonZeroDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isUnsignedVariable(aVector);¶		}¶		return isUnsignedVariable(aVector) || (isSign(aVector.get(0)) && isUnsignedVariable(truncateLeft(aVector)));¶	}¶	public boolean isUnsignedVariable(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetter(aVector.get(0));¶		}¶		return isLetter(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isDigit(aVector.get(0));¶		}¶		return isDigit(aVector.get(0)) && isDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterDigitString(Vector<Character> aVector) {¶		if (aVector.size() == 1) {¶			return isLetterOrDigit(aVector.get(0));¶		}¶		return isLetterOrDigit(aVector.get(0)) && isLetterDigitString(truncateLeft(aVector));¶	}¶	public boolean isLetterOrDigit(char aChar) {¶		return isLetter(aChar) || isDigit(aChar);¶	}¶	public boolean isSign(char aChar) {¶		return aChar == PLUS || aChar == MINUS; ¶	}¶	public boolean isNonZeroDigit(char aChar) {¶		return aChar <= '9' && aChar >= '1';¶	}¶	public boolean isDigit(char aChar) {¶		return Character.isDigit(aChar);¶	}¶	public boolean isLetter(char aChar) {¶		return Character.isLetter(aChar);¶	}¶	public boolean isComma(char aChar) {¶		return aChar == COMMA;¶	}¶	public boolean isRightParenthesis(char aChar) {¶		return aChar == RP;¶	}¶	public boolean isLeftParenthesis(char aChar) {¶		return aChar == LP;¶	}¶	public boolean isAddOrSub(char aChar) {¶		return aChar == PLUS || aChar == MINUS;¶	}¶	public boolean isMultiOrDiv(char aChar) {¶		return aChar == TIMES || aChar == DIVIDES;¶	}¶	public boolean isCaret(char aChar) {¶		return CARET == aChar;¶	}¶	public Vector<Character> truncate(Vector<Character> aVector, int start, int end){¶		Vector<Character> newVector = new Vector<Character>();¶		for (int i = start; i < end; i ++) {¶			newVector.add(aVector.get(i));¶		}¶		return newVector;¶	}¶	public Vector<Character> truncateLeft(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size());¶	}¶	public Vector<Character> truncateRight(Vector<Character> aVector){¶		return truncate(aVector, 0, aVector.size()-1);¶	}¶	public Vector<Character> truncateBoth(Vector<Character> aVector){¶		return truncate(aVector, 1, aVector.size()-1);¶	}¶	public int find(Vector<Character> aVector, char aChar, int start) {¶		for (int i = start; i < aVector.size(); i ++) {¶			if (aVector.get(i) == aChar) {¶				return i;¶			}¶		}¶		return -1;¶	}¶	public boolean compare(Vector<Character> aVector, String aString) {¶		if (aVector.size() != aString.length()) {¶			return false;¶		}¶		for (int i = 0; i < aVector.size(); i ++) {¶			if (aVector.get(i) != aString.charAt(i)) {¶				return false;¶			}¶		}¶		return true;¶	}¶}¶")]]]></diff>
  </Command>
  <Command __id="2622" _type="ShellCommand" date="Wed Apr 21 10:40:26 EDT 2021" starttimestamp="1619011563329" timestamp="4462683" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2623" _type="RunCommand" date="Wed Apr 21 10:40:26 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4462871" type="Run" />
  <Command __id="2624" _type="RunCommand" date="Wed Apr 21 10:40:26 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4462871" type="Run" />
  <Command __id="2625" _type="MoveCaretCommand" caretOffset="4404" date="Wed Apr 21 10:40:26 EDT 2021" docOffset="4508" starttimestamp="1619011563329" timestamp="4463235" />
  <Command __id="2627" _type="MoveCaretCommand" caretOffset="9882" date="Wed Apr 21 10:44:46 EDT 2021" docOffset="9882" starttimestamp="1619011563329" timestamp="4723359" />
  <Command __id="2628" _type="MoveCaretCommand" caretOffset="1950" date="Wed Apr 21 10:44:51 EDT 2021" docOffset="1950" starttimestamp="1619011563329" timestamp="4727696" />
  <Command __id="2629" _type="MoveCaretCommand" caretOffset="2013" date="Wed Apr 21 10:44:51 EDT 2021" docOffset="2013" starttimestamp="1619011563329" timestamp="4728026" />
  <Command __id="2630" _type="MoveCaretCommand" caretOffset="2401" date="Wed Apr 21 10:44:51 EDT 2021" docOffset="2401" starttimestamp="1619011563329" timestamp="4728529" />
  <Command __id="2631" _type="MoveCaretCommand" caretOffset="3094" date="Wed Apr 21 10:44:53 EDT 2021" docOffset="3094" starttimestamp="1619011563329" timestamp="4729873" />
  <Command __id="2632" _type="MoveCaretCommand" caretOffset="3148" date="Wed Apr 21 10:44:53 EDT 2021" docOffset="3148" starttimestamp="1619011563329" timestamp="4730175" />
  <Command __id="2633" _type="MoveCaretCommand" caretOffset="3193" date="Wed Apr 21 10:44:53 EDT 2021" docOffset="3193" starttimestamp="1619011563329" timestamp="4730583" />
  <Command __id="2634" _type="MoveCaretCommand" caretOffset="3198" date="Wed Apr 21 10:44:54 EDT 2021" docOffset="3198" starttimestamp="1619011563329" timestamp="4730861" />
  <Command __id="2635" _type="MoveCaretCommand" caretOffset="3055" date="Wed Apr 21 10:44:54 EDT 2021" docOffset="3055" starttimestamp="1619011563329" timestamp="4731320" />
  <Command __id="2636" _type="MoveCaretCommand" caretOffset="3020" date="Wed Apr 21 10:44:55 EDT 2021" docOffset="3020" starttimestamp="1619011563329" timestamp="4731689" />
  <Command __id="2637" _type="SelectTextCommand" caretOffset="2997" date="Wed Apr 21 10:44:56 EDT 2021" end="3051" start="2997" starttimestamp="1619011563329" timestamp="4732924" />
  <Command __id="2638" _type="MoveCaretCommand" caretOffset="3055" date="Wed Apr 21 10:44:56 EDT 2021" docOffset="3055" starttimestamp="1619011563329" timestamp="4733143" />
  <Command __id="2639" _type="SelectTextCommand" caretOffset="3022" date="Wed Apr 21 10:44:57 EDT 2021" end="3055" start="3022" starttimestamp="1619011563329" timestamp="4734257" />
  <Command __id="2640" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:45:07 EDT 2021" starttimestamp="1619011563329" timestamp="4744309" />
  <Command __id="2641" _type="RunCommand" date="Wed Apr 21 10:45:07 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4744481" type="Run" />
  <Command __id="2642" _type="RunCommand" date="Wed Apr 21 10:45:07 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4744481" type="Run" />
  <Command __id="2643" _type="ShellCommand" date="Wed Apr 21 10:45:08 EDT 2021" starttimestamp="1619011563329" timestamp="4745275" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2644" _type="ConsoleOutput" date="Wed Apr 21 10:45:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4745374" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2645" _type="ConsoleOutput" date="Wed Apr 21 10:45:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4745501" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2646" _type="ConsoleOutput" date="Wed Apr 21 10:45:12 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4748752" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2647" _type="ShellCommand" date="Wed Apr 21 10:45:12 EDT 2021" starttimestamp="1619011563329" timestamp="4749603" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2648" _type="RunCommand" date="Wed Apr 21 10:45:13 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4749776" type="Run" />
  <Command __id="2649" _type="RunCommand" date="Wed Apr 21 10:45:13 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4749776" type="Run" />
  <Command __id="2650" _type="MoveCaretCommand" caretOffset="3059" date="Wed Apr 21 10:45:13 EDT 2021" docOffset="3059" starttimestamp="1619011563329" timestamp="4750607" />
  <Command __id="2651" _type="MoveCaretCommand" caretOffset="3050" date="Wed Apr 21 10:45:14 EDT 2021" docOffset="3050" starttimestamp="1619011563329" timestamp="4750999" />
  <Command __id="2652" _type="MoveCaretCommand" caretOffset="3054" date="Wed Apr 21 10:45:14 EDT 2021" docOffset="3054" starttimestamp="1619011563329" timestamp="4751459" />
  <Command __id="2653" _type="MoveCaretCommand" caretOffset="3055" date="Wed Apr 21 10:45:15 EDT 2021" docOffset="3055" starttimestamp="1619011563329" timestamp="4751998" />
  <Command __id="2654" _type="MoveCaretCommand" caretOffset="3020" date="Wed Apr 21 10:45:15 EDT 2021" docOffset="3020" starttimestamp="1619011563329" timestamp="4752330" />
  <Command __id="2626" _type="DiffBasedFileOpenCommand" date="Wed Apr 21 10:44:46 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10938" docExpressionCount="1194" docLength="10938" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4723258">
    <filePath><![CDATA[C:\Users\leleo\eclipse-workspace\TaskBox\src\components\mathEditor\MathEditorPanel.java]]></filePath>
    <diff><![CDATA[[Diff(EQUAL,"package components.mathEditor;¶¶import java.awt.Color;¶import java.awt.Graphics2D;¶import java.awt.Insets;¶import java.awt.image.BufferedImage;¶import java.beans.PropertyChangeEvent;¶import java.beans.PropertyChangeListener;¶import java.io.File;¶import java.io.IOException;¶import java.util.Vector;¶¶import javax.imageio.ImageIO;¶import javax.swing.JButton;¶import javax.swing.JLabel;¶import org.scilab.forge.jlatexmath.TeXConstants;¶import org.scilab.forge.jlatexmath.TeXFormula;¶import org.scilab.forge.jlatexmath.TeXIcon;¶import components.listenersupport.PropertyListenerSupport;¶import parser.JavaExpressionParser;¶import parser.JavaExpressionTreeParser;¶import parser.TexTreeBuilder;¶import util.annotations.Column;¶import util.annotations.ComponentHeight;¶import util.annotations.ComponentWidth;¶import util.annotations.EditablePropertyNames;¶import util.annotations.Explanation;¶import util.annotations.PreferredWidgetClass;¶import util.annotations.PropertyNames;¶import util.annotations.Row;¶import util.annotations.StructurePattern;¶import util.annotations.StructurePatternNames;¶¶¶@StructurePattern(StructurePatternNames.BEAN_PATTERN)¶@PropertyNames({"image", "texExpression", "javaExpression"})¶@EditablePropertyNames({"texExpression", "javaExpression"})¶public class MathEditorPanel {¶	private String texExpression = "", javaExpression = "";¶	private int imageHeight = 100, imageWidth = 400;¶	private int caretPosition;¶	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();¶	private MathExpressionImageInterface image = null;¶¶	¶¶	public MathExpressionImageInterface getImage() {¶		return image;¶	}¶	¶	¶	public void setImage(MathExpressionImageInterface newImage) {¶		image = newImage;¶	}¶	¶	@Row(0)¶	public String getTexExpression() {¶		return texExpression;¶	}¶	¶	@Row(4)¶	public String getJavaExpression() {¶		return javaExpression;¶	}¶	¶	public void setJavaExpression(String newJavaExpression) {¶		String oldJavaExpression = javaExpression;¶		javaExpression = newJavaExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));¶		¶		Vector<Character> rootVector = new Vector<Character> ();¶		for (int i = 0; i < javaExpression.length(); i ++) {¶			rootVector.add(javaExpression.charAt(i));¶		}¶		JavaExpressionParser parser = new JavaExpressionParser();¶		"), Diff(DELETE,"if (parser.isExpression(aVector))¶		"), Diff(EQUAL,"JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);¶		"), Diff(INSERT,"if (parser.isExpression(rootVector)) {¶			"), Diff(EQUAL,"TexTreeBuilder builder = new TexTreeBuilder();¶		"), Diff(DELETE,"¶	"), Diff(EQUAL,"	setTexExpression(builder.build(treeParser.getRoot()));¶		"), Diff(INSERT,"}"), Diff(EQUAL,"¶	}¶	¶	¶	public void setTexExpression(String newTexExpression) {¶		String oldTexExpression = texExpression;¶		texExpression = newTexExpression;¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));¶		¶		render(texExpression);¶		System.out.println("Rendered");¶		¶		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");¶		¶		getImage().setImageFileName("data/latex.png");¶		getImage().setHeight(imageHeight);¶		getImage().setWidth(imageWidth);¶	}¶	¶	public int getCaretPosition() {¶		return caretPosition;¶	}¶	¶	public void setCaretPosition(int newPosition) {¶		int oldPosition = caretPosition;¶		caretPosition = newPosition;¶		System.out.println(caretPosition);¶		propertyListenerSupport.notifyAllListeners(¶				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));¶	}¶	¶	public void addPropertyChangeListener(PropertyChangeListener aListener) {¶		propertyListenerSupport.addElement(aListener);    ¶    }¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dotProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\cdot");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	@Explanation("cross pruduct")¶	public void crossProduct() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\times");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void divide() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\div");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void neq() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\neq");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ge() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ge");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void le() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\le");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void approximate() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\approx");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(7)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void not() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\not");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(8)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void inf() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\infty");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(1)¶	@Column(9)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void pm() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\pm");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(5)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void dot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\dot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(6)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ddot() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\ddot{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void superScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "^{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void subScript() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "_{x}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(0)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void fraction() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\frac{a}{b}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(2)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void sqrt() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sqrt{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(3)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void floor() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lfloor x \\rfloor");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(2)¶	@Column(4)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void ceil() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\lceil x \\rceil");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(2)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void integral() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\int^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(3)¶	@Column(1)¶	@ComponentHeight(60)¶	@ComponentWidth(30)¶	public void sum() {¶		StringBuffer buffer = new StringBuffer(getTexExpression());¶		buffer.insert(caretPosition, "\\sum^{b}_{a}");¶		setTexExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(0)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaExp() {¶		StringBuffer buffer = new StringBuffer(get"), Diff(DELETE,"Tex"), Diff(INSERT,"Java"), Diff(EQUAL,"Expression());¶		buffer.insert(caretPosition, "exp(x)");¶		setJavaExpression(buffer.toString());¶	}¶	¶	@PreferredWidgetClass(JButton.class)¶	@Row(5)¶	@Column(1)¶	@ComponentHeight(30)¶	@ComponentWidth(30)¶	public void javaSqrt() {¶		StringBuffer buffer = new StringBuffer(get"), Diff(DELETE,"Tex"), Diff(INSERT,"Java"), Diff(EQUAL,"Expression());¶		buffer.insert(caretPosition, "sqrt(a)");¶		setJavaExpression(buffer.toString());¶	}¶	¶ 	public void render(String latexString) {¶		TeXFormula formula = new TeXFormula(latexString);¶		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);¶		icon.setInsets(new Insets(5, 5, 5, 5));¶		BufferedImage image = new BufferedImage(icon.getIconWidth(),¶				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);¶		Graphics2D g2 = image.createGraphics();¶		g2.setColor(Color.white);¶		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());¶		JLabel jl = new JLabel();¶		jl.setForeground(new Color(0, 0, 0));¶		icon.paintIcon(jl, g2, 0, 0);¶		imageHeight = image.getHeight();¶		imageWidth = image.getWidth();¶		File outputfile = new File("data/latex.png");¶		try {¶			ImageIO.write(image, "png", outputfile);¶		} catch (IOException e) {¶			e.printStackTrace();¶		}¶	}¶}¶")]]]></diff>
    <snapshot><![CDATA[package components.mathEditor;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import java.util.Vector;

import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JLabel;
import org.scilab.forge.jlatexmath.TeXConstants;
import org.scilab.forge.jlatexmath.TeXFormula;
import org.scilab.forge.jlatexmath.TeXIcon;
import components.listenersupport.PropertyListenerSupport;
import parser.JavaExpressionParser;
import parser.JavaExpressionTreeParser;
import parser.TexTreeBuilder;
import util.annotations.Column;
import util.annotations.ComponentHeight;
import util.annotations.ComponentWidth;
import util.annotations.EditablePropertyNames;
import util.annotations.Explanation;
import util.annotations.PreferredWidgetClass;
import util.annotations.PropertyNames;
import util.annotations.Row;
import util.annotations.StructurePattern;
import util.annotations.StructurePatternNames;


@StructurePattern(StructurePatternNames.BEAN_PATTERN)
@PropertyNames({"image", "texExpression", "javaExpression"})
@EditablePropertyNames({"texExpression", "javaExpression"})
public class MathEditorPanel {
	private String texExpression = "", javaExpression = "";
	private int imageHeight = 100, imageWidth = 400;
	private int caretPosition;
	private PropertyListenerSupport propertyListenerSupport = new PropertyListenerSupport();
	private MathExpressionImageInterface image = null;

	

	public MathExpressionImageInterface getImage() {
		return image;
	}
	
	
	public void setImage(MathExpressionImageInterface newImage) {
		image = newImage;
	}
	
	@Row(0)
	public String getTexExpression() {
		return texExpression;
	}
	
	@Row(4)
	public String getJavaExpression() {
		return javaExpression;
	}
	
	public void setJavaExpression(String newJavaExpression) {
		String oldJavaExpression = javaExpression;
		javaExpression = newJavaExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "javaExpression", oldJavaExpression, javaExpression));
		
		Vector<Character> rootVector = new Vector<Character> ();
		for (int i = 0; i < javaExpression.length(); i ++) {
			rootVector.add(javaExpression.charAt(i));
		}
		JavaExpressionParser parser = new JavaExpressionParser();
		JavaExpressionTreeParser treeParser = new JavaExpressionTreeParser(rootVector);
		if (parser.isExpression(rootVector)) {
			TexTreeBuilder builder = new TexTreeBuilder();
			setTexExpression(builder.build(treeParser.getRoot()));
		}
	}
	
	
	public void setTexExpression(String newTexExpression) {
		String oldTexExpression = texExpression;
		texExpression = newTexExpression;
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));
		
		render(texExpression);
		System.out.println("Rendered");
		
		image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);
	}
	
	public int getCaretPosition() {
		return caretPosition;
	}
	
	public void setCaretPosition(int newPosition) {
		int oldPosition = caretPosition;
		caretPosition = newPosition;
		System.out.println(caretPosition);
		propertyListenerSupport.notifyAllListeners(
				new PropertyChangeEvent(this, "caretPosition", oldPosition, caretPosition));
	}
	
	public void addPropertyChangeListener(PropertyChangeListener aListener) {
		propertyListenerSupport.addElement(aListener);    
    }
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dotProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\cdot");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	@Explanation("cross pruduct")
	public void crossProduct() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\times");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void divide() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\div");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void neq() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\neq");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ge() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ge");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void le() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\le");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void approximate() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\approx");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(7)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void not() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\not");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(8)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void inf() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\infty");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(1)
	@Column(9)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void pm() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\pm");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(5)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void dot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\dot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(6)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ddot() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\ddot{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void superScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "^{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void subScript() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "_{x}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(0)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void fraction() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\frac{a}{b}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(2)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void sqrt() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sqrt{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(3)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void floor() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lfloor x \\rfloor");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(2)
	@Column(4)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void ceil() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\lceil x \\rceil");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(2)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void integral() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\int^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(3)
	@Column(1)
	@ComponentHeight(60)
	@ComponentWidth(30)
	public void sum() {
		StringBuffer buffer = new StringBuffer(getTexExpression());
		buffer.insert(caretPosition, "\\sum^{b}_{a}");
		setTexExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(0)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaExp() {
		StringBuffer buffer = new StringBuffer(getJavaExpression());
		buffer.insert(caretPosition, "exp(x)");
		setJavaExpression(buffer.toString());
	}
	
	@PreferredWidgetClass(JButton.class)
	@Row(5)
	@Column(1)
	@ComponentHeight(30)
	@ComponentWidth(30)
	public void javaSqrt() {
		StringBuffer buffer = new StringBuffer(getJavaExpression());
		buffer.insert(caretPosition, "sqrt(a)");
		setJavaExpression(buffer.toString());
	}
	
 	public void render(String latexString) {
		TeXFormula formula = new TeXFormula(latexString);
		TeXIcon icon = formula.createTeXIcon(TeXConstants.STYLE_DISPLAY, 20);
		icon.setInsets(new Insets(5, 5, 5, 5));
		BufferedImage image = new BufferedImage(icon.getIconWidth(),
				icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);
		Graphics2D g2 = image.createGraphics();
		g2.setColor(Color.white);
		g2.fillRect(0, 0, icon.getIconWidth(), icon.getIconHeight());
		JLabel jl = new JLabel();
		jl.setForeground(new Color(0, 0, 0));
		icon.paintIcon(jl, g2, 0, 0);
		imageHeight = image.getHeight();
		imageWidth = image.getWidth();
		File outputfile = new File("data/latex.png");
		try {
			ImageIO.write(image, "png", outputfile);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
]]></snapshot>
  </Command>
  <Command __id="2655" _type="MoveCaretCommand" caretOffset="2401" date="Wed Apr 21 10:45:23 EDT 2021" docOffset="2401" starttimestamp="1619011563329" timestamp="4760609" />
  <Command __id="2656" _type="MoveCaretCommand" caretOffset="2513" date="Wed Apr 21 10:45:24 EDT 2021" docOffset="2513" starttimestamp="1619011563329" timestamp="4761129" />
  <Command __id="2657" _type="MoveCaretCommand" caretOffset="2707" date="Wed Apr 21 10:45:25 EDT 2021" docOffset="2707" starttimestamp="1619011563329" timestamp="4761731" />
  <Command __id="2659" _type="InsertStringCommand" date="Wed Apr 21 10:45:26 EDT 2021" starttimestamp="1619011563329" timestamp="4763448" timestamp2="4763448">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2660" _type="SelectTextCommand" caretOffset="2665" date="Wed Apr 21 10:45:32 EDT 2021" end="2702" start="2665" starttimestamp="1619011563329" timestamp="4768974" />
  <Command __id="2661" _type="MoveCaretCommand" caretOffset="2665" date="Wed Apr 21 10:45:32 EDT 2021" docOffset="2665" starttimestamp="1619011563329" timestamp="4769195" />
  <Command __id="2662" _type="SelectTextCommand" caretOffset="2700" date="Wed Apr 21 10:45:34 EDT 2021" end="2700" start="2665" starttimestamp="1619011563329" timestamp="4770906" />
  <Command __id="2663" _type="MoveCaretCommand" caretOffset="2702" date="Wed Apr 21 10:45:35 EDT 2021" docOffset="2702" starttimestamp="1619011563329" timestamp="4771946" />
  <Command __id="2664" _type="SelectTextCommand" caretOffset="2648" date="Wed Apr 21 10:45:40 EDT 2021" end="2665" start="2648" starttimestamp="1619011563329" timestamp="4776687" />
  <Command __id="2666" _type="InsertStringCommand" date="Wed Apr 21 10:45:40 EDT 2021" starttimestamp="1619011563329" timestamp="4777627" timestamp2="4777627">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2668" _type="InsertStringCommand" date="Wed Apr 21 10:45:41 EDT 2021" starttimestamp="1619011563329" timestamp="4777683" timestamp2="4777683">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2670" _type="InsertStringCommand" date="Wed Apr 21 10:45:41 EDT 2021" starttimestamp="1619011563329" timestamp="4777884" timestamp2="4777884">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2672" _type="InsertStringCommand" date="Wed Apr 21 10:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="4778741" timestamp2="4778741">
    <data><![CDATA[E]]></data>
  </Command>
  <Command __id="2674" _type="InsertStringCommand" date="Wed Apr 21 10:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="4778950" timestamp2="4778950">
    <data><![CDATA[x]]></data>
  </Command>
  <Command __id="2676" _type="InsertStringCommand" date="Wed Apr 21 10:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="4779161" timestamp2="4779161">
    <data><![CDATA[p]]></data>
  </Command>
  <Command __id="2678" _type="InsertStringCommand" date="Wed Apr 21 10:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="4779342" timestamp2="4779342">
    <data><![CDATA[r]]></data>
  </Command>
  <Command __id="2680" _type="InsertStringCommand" date="Wed Apr 21 10:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="4779408" timestamp2="4779408">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2682" _type="InsertStringCommand" date="Wed Apr 21 10:45:42 EDT 2021" starttimestamp="1619011563329" timestamp="4779669" timestamp2="4779669">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2684" _type="InsertStringCommand" date="Wed Apr 21 10:45:43 EDT 2021" starttimestamp="1619011563329" timestamp="4779841" timestamp2="4779841">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2686" _type="InsertStringCommand" date="Wed Apr 21 10:45:43 EDT 2021" starttimestamp="1619011563329" timestamp="4779919" timestamp2="4779919">
    <data><![CDATA[i]]></data>
  </Command>
  <Command __id="2688" _type="InsertStringCommand" date="Wed Apr 21 10:45:43 EDT 2021" starttimestamp="1619011563329" timestamp="4780018" timestamp2="4780018">
    <data><![CDATA[o]]></data>
  </Command>
  <Command __id="2690" _type="InsertStringCommand" date="Wed Apr 21 10:45:43 EDT 2021" starttimestamp="1619011563329" timestamp="4780134" timestamp2="4780134">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2692" _type="InsertStringCommand" date="Wed Apr 21 10:45:43 EDT 2021" starttimestamp="1619011563329" timestamp="4780393" timestamp2="4780393">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2694" _type="InsertStringCommand" date="Wed Apr 21 10:45:44 EDT 2021" starttimestamp="1619011563329" timestamp="4780734" timestamp2="4780734">
    <data><![CDATA[=]]></data>
  </Command>
  <Command __id="2696" _type="InsertStringCommand" date="Wed Apr 21 10:45:44 EDT 2021" starttimestamp="1619011563329" timestamp="4780807" timestamp2="4780807">
    <data><![CDATA[ ]]></data>
  </Command>
  <Command __id="2697" _type="MoveCaretCommand" caretOffset="2699" date="Wed Apr 21 10:45:45 EDT 2021" docOffset="2699" starttimestamp="1619011563329" timestamp="4782291" />
  <Command __id="2698" _type="MoveCaretCommand" caretOffset="2700" date="Wed Apr 21 10:45:46 EDT 2021" docOffset="2700" starttimestamp="1619011563329" timestamp="4782755" />
  <Command __id="2700" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:45:46 EDT 2021" starttimestamp="1619011563329" timestamp="4783227" />
  <Command __id="2701" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:45:46 EDT 2021" starttimestamp="1619011563329" timestamp="4783558" />
  <Command __id="2702" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:45:46 EDT 2021" starttimestamp="1619011563329" timestamp="4783666" />
  <Command __id="2703" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:45:47 EDT 2021" starttimestamp="1619011563329" timestamp="4783687" />
  <Command __id="2704" _type="SelectTextCommand" caretOffset="2862" date="Wed Apr 21 10:45:49 EDT 2021" end="2992" start="2862" starttimestamp="1619011563329" timestamp="4785825" />
  <Command __id="2705" _type="CopyCommand" date="Wed Apr 21 10:45:49 EDT 2021" starttimestamp="1619011563329" timestamp="4786007" />
  <Command __id="2706" _type="MoveCaretCommand" caretOffset="2700" date="Wed Apr 21 10:45:49 EDT 2021" docOffset="2700" starttimestamp="1619011563329" timestamp="4786584" />
  <Command __id="2708" _type="InsertStringCommand" date="Wed Apr 21 10:45:50 EDT 2021" starttimestamp="1619011563329" timestamp="4787220" timestamp2="4787220">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2710" _type="PasteCommand" date="Wed Apr 21 10:45:50 EDT 2021" starttimestamp="1619011563329" timestamp="4787439" />
  <Command __id="2711" _type="SelectTextCommand" caretOffset="3136" date="Wed Apr 21 10:45:53 EDT 2021" end="3158" start="3136" starttimestamp="1619011563329" timestamp="4789753" />
  <Command __id="2712" _type="CopyCommand" date="Wed Apr 21 10:45:53 EDT 2021" starttimestamp="1619011563329" timestamp="4789881" />
  <Command __id="2713" _type="MoveCaretCommand" caretOffset="2994" date="Wed Apr 21 10:45:57 EDT 2021" docOffset="2994" starttimestamp="1619011563329" timestamp="4794417" />
  <Command __id="2714" _type="MoveCaretCommand" caretOffset="2841" date="Wed Apr 21 10:45:58 EDT 2021" docOffset="2841" starttimestamp="1619011563329" timestamp="4795159" />
  <Command __id="2715" _type="MoveCaretCommand" caretOffset="2823" date="Wed Apr 21 10:45:58 EDT 2021" docOffset="2823" starttimestamp="1619011563329" timestamp="4795600" />
  <Command __id="2716" _type="SelectTextCommand" caretOffset="2802" date="Wed Apr 21 10:46:00 EDT 2021" end="2818" start="2802" starttimestamp="1619011563329" timestamp="4797178" />
  <Command __id="2718" _type="InsertStringCommand" date="Wed Apr 21 10:46:01 EDT 2021" starttimestamp="1619011563329" timestamp="4797799" timestamp2="4797799">
    <data><![CDATA[n]]></data>
  </Command>
  <Command __id="2720" _type="InsertStringCommand" date="Wed Apr 21 10:46:01 EDT 2021" starttimestamp="1619011563329" timestamp="4798000" timestamp2="4798000">
    <data><![CDATA[u]]></data>
  </Command>
  <Command __id="2722" _type="InsertStringCommand" date="Wed Apr 21 10:46:01 EDT 2021" starttimestamp="1619011563329" timestamp="4798198" timestamp2="4798198">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2724" _type="InsertStringCommand" date="Wed Apr 21 10:46:01 EDT 2021" starttimestamp="1619011563329" timestamp="4798338" timestamp2="4798338">
    <data><![CDATA[l]]></data>
  </Command>
  <Command __id="2725" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:46:01 EDT 2021" starttimestamp="1619011563329" timestamp="4798650" />
  <Command __id="2726" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:46:02 EDT 2021" starttimestamp="1619011563329" timestamp="4798752" />
  <Command __id="2727" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:46:02 EDT 2021" starttimestamp="1619011563329" timestamp="4798776" />
  <Command __id="2728" _type="MoveCaretCommand" caretOffset="2824" date="Wed Apr 21 10:46:02 EDT 2021" docOffset="2824" starttimestamp="1619011563329" timestamp="4799565" />
  <Command __id="2730" _type="InsertStringCommand" date="Wed Apr 21 10:46:03 EDT 2021" starttimestamp="1619011563329" timestamp="4800069" timestamp2="4800069">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2732" _type="PasteCommand" date="Wed Apr 21 10:46:03 EDT 2021" starttimestamp="1619011563329" timestamp="4800287" />
  <Command __id="2733" _type="MoveCaretCommand" caretOffset="3173" date="Wed Apr 21 10:46:04 EDT 2021" docOffset="3173" starttimestamp="1619011563329" timestamp="4801227" />
  <Command __id="2734" _type="MoveCaretCommand" caretOffset="3208" date="Wed Apr 21 10:46:04 EDT 2021" docOffset="3208" starttimestamp="1619011563329" timestamp="4801596" />
  <Command __id="2735" _type="SelectTextCommand" caretOffset="3216" date="Wed Apr 21 10:46:06 EDT 2021" end="3297" start="3216" starttimestamp="1619011563329" timestamp="4803474" />
  <Command __id="2736" _type="CopyCommand" date="Wed Apr 21 10:46:06 EDT 2021" starttimestamp="1619011563329" timestamp="4803651" />
  <Command __id="2737" _type="MoveCaretCommand" caretOffset="2851" date="Wed Apr 21 10:46:07 EDT 2021" docOffset="2851" starttimestamp="1619011563329" timestamp="4804073" />
  <Command __id="2739" _type="InsertStringCommand" date="Wed Apr 21 10:46:07 EDT 2021" starttimestamp="1619011563329" timestamp="4804532" timestamp2="4804532">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2741" _type="PasteCommand" date="Wed Apr 21 10:46:08 EDT 2021" starttimestamp="1619011563329" timestamp="4804700" />
  <Command __id="2742" _type="SelectTextCommand" caretOffset="3391" date="Wed Apr 21 10:46:10 EDT 2021" end="3511" start="3391" starttimestamp="1619011563329" timestamp="4806867" />
  <Command __id="2743" _type="CopyCommand" date="Wed Apr 21 10:46:10 EDT 2021" starttimestamp="1619011563329" timestamp="4807026" />
  <Command __id="2744" _type="MoveCaretCommand" caretOffset="2937" date="Wed Apr 21 10:46:11 EDT 2021" docOffset="2937" starttimestamp="1619011563329" timestamp="4807847" />
  <Command __id="2746" _type="InsertStringCommand" date="Wed Apr 21 10:46:11 EDT 2021" starttimestamp="1619011563329" timestamp="4808461" timestamp2="4808461">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2748" _type="PasteCommand" date="Wed Apr 21 10:46:11 EDT 2021" starttimestamp="1619011563329" timestamp="4808638" />
  <Command __id="2749" _type="MoveCaretCommand" caretOffset="2511" date="Wed Apr 21 10:46:12 EDT 2021" docOffset="2511" starttimestamp="1619011563329" timestamp="4809282" />
  <Command __id="2750" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:46:12 EDT 2021" starttimestamp="1619011563329" timestamp="4809559" />
  <Command __id="2751" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:46:12 EDT 2021" starttimestamp="1619011563329" timestamp="4809669" />
  <Command __id="2752" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:46:13 EDT 2021" starttimestamp="1619011563329" timestamp="4809689" />
  <Command __id="2753" _type="SelectTextCommand" caretOffset="2790" date="Wed Apr 21 10:46:13 EDT 2021" end="2790" start="2271" starttimestamp="1619011563329" timestamp="4809863" />
  <Command __id="2754" _type="MoveCaretCommand" caretOffset="2851" date="Wed Apr 21 10:46:13 EDT 2021" docOffset="2851" starttimestamp="1619011563329" timestamp="4810022" />
  <Command __id="2755" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:46:17 EDT 2021" starttimestamp="1619011563329" timestamp="4814634" />
  <Command __id="2756" _type="RunCommand" date="Wed Apr 21 10:46:18 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4814798" type="Run" />
  <Command __id="2757" _type="RunCommand" date="Wed Apr 21 10:46:18 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4814798" type="Run" />
  <Command __id="2758" _type="ShellCommand" date="Wed Apr 21 10:46:18 EDT 2021" starttimestamp="1619011563329" timestamp="4815592" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2759" _type="ConsoleOutput" date="Wed Apr 21 10:46:19 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4815697" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327"), Diff(EQUAL,"¶W*** public void components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL,".addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit"), Diff(DELETE,"ly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable"), Diff(INSERT," property caretPosition of  MathEditorPanel ignored"), Diff(EQUAL," as it is not in "), Diff(DELETE,"editable "), Diff(EQUAL,"property names list. ¶"), Diff(DELETE,"¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as "), Diff(INSERT," Associate annotation @Visible(false) w"), Diff(EQUAL,"it"), Diff(INSERT,"h"), Diff(EQUAL," i"), Diff(DELETE,"s not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x"), Diff(INSERT,"ts getter.¶W*** Implicitly editable property: caretPosition"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: "), Diff(DELETE,"y"), Diff(INSERT,"image"), Diff(EQUAL," of class class components.mathEditor.MathE"), Diff(DELETE,"xpressionImage"), Diff(INSERT,"ditorPanel"), Diff(EQUAL," not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="2760" _type="ConsoleOutput" date="Wed Apr 21 10:46:19 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4815823" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2761" _type="ConsoleOutput" date="Wed Apr 21 10:46:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4817597" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2762" _type="ConsoleOutput" date="Wed Apr 21 10:46:21 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4817901" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [a, ), s, q, r, t, (, a]
Testing add-sub Expression [a, ), s, q, r, t, (, a]
Testing multi div Expression [a, ), s, q, r, t, (, a]
Testing function Expression [a, ), s, q, r, t, (, a]
Testing parenthesis Expression [a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (]
Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [a, ), s, q, r, t, (, a]
Testing add-sub Expression [a, ), s, q, r, t, (, a]
Testing multi div Expression [a, ), s, q, r, t, (, a]
Testing function Expression [a, ), s, q, r, t, (, a]
Testing parenthesis Expression [a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (]
Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing add-sub Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing multi div Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing function Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing Expression ["), Diff(INSERT,"a, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶Testing add-sub Expression ["), Diff(INSERT,"a, ), "), Diff(EQUAL,"s, q, r, t, (, a"), Diff(DELETE,", )"), Diff(EQUAL,"]¶Testing multi div Expression ["), Diff(INSERT,"a, ), "), Diff(EQUAL,"s, q, r, t, (, a"), Diff(DELETE,", )"), Diff(EQUAL,"]¶Testing function Expression ["), Diff(INSERT,"a, ), "), Diff(EQUAL,"s, q, r, t, (, a"), Diff(DELETE,", )"), Diff(EQUAL,"]¶Testing "), Diff(INSERT,"parenthesis "), Diff(EQUAL,"Expression [a"), Diff(DELETE,"]¶Testing Expression ["), Diff(INSERT,", ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (]¶Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶Testing Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing add-sub Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing multi div Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing function Expression [s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing Expression ["), Diff(INSERT,"a, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶Testing "), Diff(INSERT,"add-sub "), Diff(EQUAL,"Expression ["), Diff(INSERT,"a, ), s, q, r, t, (, a]¶Testing multi div Expression [a, ), s, q, r, t, (, a]¶Testing function Expression [a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [a, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (]¶Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶")]]]></diff>
  </Command>
  <Command __id="2763" _type="ConsoleOutput" date="Wed Apr 21 10:46:22 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4819284" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing add-sub Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing multi div Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing function Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing parenthesis Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Parenthesis Expression [), s, q, r, t,"), Diff(INSERT," (, a, ), s, q, r, t,"), Diff(EQUAL," (]¶Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing add-sub Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing multi div Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing function Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing parenthesis Expression [a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Parenthesis Expression [), s, q, r, t,"), Diff(INSERT," (, a, ), s, q, r, t,"), Diff(EQUAL," (]¶Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶")]]]></diff>
  </Command>
  <Command __id="2764" _type="ConsoleOutput" date="Wed Apr 21 10:46:23 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4819765" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing add-sub Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing multi div Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing function Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing parenthesis Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t,"), Diff(INSERT," (, a, ), s, q, r, t,"), Diff(EQUAL," (]¶Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing add-sub Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing multi div Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing function Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Testing Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing add-sub Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing multi div Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing function Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Testing parenthesis Expression [a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t,"), Diff(INSERT," (, a, ), s, q, r, t,"), Diff(EQUAL," (]¶Testing parenthesis Expression [s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a,"), Diff(INSERT," ), s, q, r, t, (, a,"), Diff(EQUAL," )]¶Parenthesis Expression [q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (,"), Diff(INSERT," a, ), s, q, r, t, (,"), Diff(EQUAL," a]¶")]]]></diff>
  </Command>
  <Command __id="2765" _type="ConsoleOutput" date="Wed Apr 21 10:46:23 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4820623" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t,"), Diff(INSERT," (, a, ), s, q, r, t,"), Diff(EQUAL," (]¶Testing parenthesis Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression ["), Diff(INSERT,"x, p, (, x, ), s, "), Diff(EQUAL,"q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t,"), Diff(INSERT," (, a, ), s, q, r, t,"), Diff(EQUAL," (]¶Testing parenthesis Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression ["), Diff(INSERT,"x, p, (, x, ), s, "), Diff(EQUAL,"q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2766" _type="ConsoleOutput" date="Wed Apr 21 10:46:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4821012" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2767" _type="ConsoleOutput" date="Wed Apr 21 10:46:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4821247" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2768" _type="ConsoleOutput" date="Wed Apr 21 10:46:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4821417" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2769" _type="ConsoleOutput" date="Wed Apr 21 10:46:24 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4821639" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2770" _type="ConsoleOutput" date="Wed Apr 21 10:46:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4821752" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2771" _type="ConsoleOutput" date="Wed Apr 21 10:46:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4821987" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2772" _type="ConsoleOutput" date="Wed Apr 21 10:46:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4822113" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2773" _type="ConsoleOutput" date="Wed Apr 21 10:46:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4822282" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ),"), Diff(INSERT," e, x, p, (, x, ),"), Diff(EQUAL," s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶")]]]></diff>
  </Command>
  <Command __id="2774" _type="ConsoleOutput" date="Wed Apr 21 10:46:29 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4826447" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression []
Testing Expression []
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"add-sub "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing function Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]¶Parenthesis Expression [), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), e, x, p, (, x, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a, ), s, q, r, t, (, a]"), Diff(INSERT,"]¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2775" _type="ConsoleOutput" date="Wed Apr 21 10:46:29 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4826578" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(INSERT,"e, x, p, (, x, )"), Diff(EQUAL,"]¶Testing "), Diff(INSERT,"add-sub "), Diff(EQUAL,"Expression ["), Diff(DELETE,"]¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2776" _type="ConsoleOutput" date="Wed Apr 21 10:46:35 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4832312" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression []
Testing Expression []
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression []¶Testing Expression []¶"), Diff(EQUAL,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶")]]]></diff>
  </Command>
  <Command __id="2777" _type="ConsoleOutput" date="Wed Apr 21 10:46:40 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4837182" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
Testing Expression []
Testing Expression []
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Rendered¶"), Diff(EQUAL,"Testing Expression []¶Testing Expression ["), Diff(DELETE,"]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2778" _type="ConsoleOutput" date="Wed Apr 21 10:46:42 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4839545" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶"), Diff(DELETE,"Testing Expression []¶Testing Expression []¶")]]]></diff>
  </Command>
  <Command __id="2779" _type="ConsoleOutput" date="Wed Apr 21 10:46:58 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4854995" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2780" _type="ConsoleOutput" date="Wed Apr 21 10:47:01 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4858183" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2781" _type="ConsoleOutput" date="Wed Apr 21 10:47:02 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4859224" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶")]]]></diff>
  </Command>
  <Command __id="2782" _type="ConsoleOutput" date="Wed Apr 21 10:47:02 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4859460" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶")]]]></diff>
  </Command>
  <Command __id="2783" _type="ConsoleOutput" date="Wed Apr 21 10:47:06 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="4863314" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶"), Diff(EQUAL,"Testing Expression [a]¶Testing Expression [a]¶")]]]></diff>
  </Command>
  <Command __id="2784" _type="RunCommand" date="Wed Apr 21 10:47:07 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4864257" type="Run" />
  <Command __id="2785" _type="RunCommand" date="Wed Apr 21 10:47:07 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="4864257" type="Run" />
  <Command __id="2786" _type="ShellCommand" date="Wed Apr 21 10:47:08 EDT 2021" starttimestamp="1619011563329" timestamp="4864767" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2787" _type="MoveCaretCommand" caretOffset="2851" date="Wed Apr 21 10:47:08 EDT 2021" docOffset="2851" starttimestamp="1619011563329" timestamp="4864824" />
  <Command __id="2788" _type="MoveCaretCommand" caretOffset="2988" date="Wed Apr 21 10:47:08 EDT 2021" docOffset="2988" starttimestamp="1619011563329" timestamp="4865115" />
  <Command __id="2789" _type="MoveCaretCommand" caretOffset="2988" date="Wed Apr 21 10:47:08 EDT 2021" docOffset="2988" starttimestamp="1619011563329" timestamp="4865362" />
  <Command __id="2790" _type="MoveCaretCommand" caretOffset="2981" date="Wed Apr 21 10:47:08 EDT 2021" docOffset="2981" starttimestamp="1619011563329" timestamp="4865648" />
  <Command __id="2791" _type="SelectTextCommand" caretOffset="3069" date="Wed Apr 21 10:47:09 EDT 2021" end="3069" start="2890" starttimestamp="1619011563329" timestamp="4866021" />
  <Command __id="2792" _type="MoveCaretCommand" caretOffset="3073" date="Wed Apr 21 10:47:09 EDT 2021" docOffset="3073" starttimestamp="1619011563329" timestamp="4866189" />
  <Command __id="2793" _type="MoveCaretCommand" caretOffset="3064" date="Wed Apr 21 10:47:09 EDT 2021" docOffset="3064" starttimestamp="1619011563329" timestamp="4866513" />
  <Command __id="2794" _type="SelectTextCommand" caretOffset="2426" date="Wed Apr 21 10:47:10 EDT 2021" end="3069" start="2426" starttimestamp="1619011563329" timestamp="4867090" />
  <Command __id="2795" _type="MoveCaretCommand" caretOffset="2615" date="Wed Apr 21 10:47:10 EDT 2021" docOffset="2615" starttimestamp="1619011563329" timestamp="4867284" />
  <Command __id="2796" _type="SelectTextCommand" caretOffset="3069" date="Wed Apr 21 10:47:10 EDT 2021" end="3069" start="2554" starttimestamp="1619011563329" timestamp="4867660" />
  <Command __id="2797" _type="MoveCaretCommand" caretOffset="3073" date="Wed Apr 21 10:47:11 EDT 2021" docOffset="3073" starttimestamp="1619011563329" timestamp="4867811" />
  <Command __id="2798" _type="SelectTextCommand" caretOffset="2406" date="Wed Apr 21 10:47:11 EDT 2021" end="3049" start="2406" starttimestamp="1619011563329" timestamp="4868539" />
  <Command __id="2799" _type="MoveCaretCommand" caretOffset="2761" date="Wed Apr 21 10:47:12 EDT 2021" docOffset="2761" starttimestamp="1619011563329" timestamp="4868754" />
  <Command __id="2800" _type="SelectTextCommand" caretOffset="3046" date="Wed Apr 21 10:47:12 EDT 2021" end="3046" start="2405" starttimestamp="1619011563329" timestamp="4869143" />
  <Command __id="2801" _type="MoveCaretCommand" caretOffset="3046" date="Wed Apr 21 10:47:12 EDT 2021" docOffset="3046" starttimestamp="1619011563329" timestamp="4869310" />
  <Command __id="2802" _type="MoveCaretCommand" caretOffset="2974" date="Wed Apr 21 10:47:15 EDT 2021" docOffset="2974" starttimestamp="1619011563329" timestamp="4871877" />
  <Command __id="2803" _type="SelectTextCommand" caretOffset="2262" date="Wed Apr 21 10:47:15 EDT 2021" end="3069" start="2262" starttimestamp="1619011563329" timestamp="4872391" />
  <Command __id="2804" _type="MoveCaretCommand" caretOffset="2435" date="Wed Apr 21 10:47:15 EDT 2021" docOffset="2435" starttimestamp="1619011563329" timestamp="4872601" />
  <Command __id="2805" _type="SelectTextCommand" caretOffset="3365" date="Wed Apr 21 10:47:26 EDT 2021" end="3638" start="3365" starttimestamp="1619011563329" timestamp="4882821" />
  <Command __id="2806" _type="MoveCaretCommand" caretOffset="3425" date="Wed Apr 21 10:47:26 EDT 2021" docOffset="3425" starttimestamp="1619011563329" timestamp="4883026" />
  <Command __id="2807" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:49:24 EDT 2021" starttimestamp="1619011563329" timestamp="5001669" />
  <Command __id="2808" _type="RunCommand" date="Wed Apr 21 10:49:25 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5001835" type="Run" />
  <Command __id="2809" _type="RunCommand" date="Wed Apr 21 10:49:25 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5001835" type="Run" />
  <Command __id="2810" _type="ConsoleOutput" date="Wed Apr 21 10:49:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5001974" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [p, o, w, (, 1, ,, 2, )]
Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]
Testing multi div Expression [p, o, w, (, 1, ,, 2, )]
Testing function Expression [p, o, w, (, 1, ,, 2, )]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"a"), Diff(INSERT,"p, o, w, (, 1, ,, 2, )]¶Testing add-sub Expression [p, o, w, (, 1, ,, 2, )"), Diff(EQUAL,"]¶Testing "), Diff(INSERT,"multi div "), Diff(EQUAL,"Expression ["), Diff(DELETE,"a"), Diff(INSERT,"p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2"), Diff(EQUAL,"]¶")]]]></diff>
  </Command>
  <Command __id="2811" _type="ShellCommand" date="Wed Apr 21 10:49:25 EDT 2021" starttimestamp="1619011563329" timestamp="5002275" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2812" _type="ConsoleOutput" date="Wed Apr 21 10:49:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5002308" type="ConsoleOutput">
    <outputString><![CDATA[Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]
Testing multi div Expression [p, o, w, (, 1, ,, 2, )]
Testing function Expression [p, o, w, (, 1, ,, 2, )]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
Testing Expression [1, ,, 2]
Testing add-sub Expression [1, ,, 2]
Testing multi div Expression [1, ,, 2]
Testing function Expression [1, ,, 2]
Testing parenthesis Expression [1, ,, 2]
Parenthesis Expression [,]
Testing Expression [1]
Testing Expression [2]
Testing Expression [2]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [p, o, w, (, 1, ,, 2, )]¶"), Diff(EQUAL,"Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶"), Diff(INSERT,"Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [2]¶")]]]></diff>
  </Command>
  <Command __id="2813" _type="ShellCommand" date="Wed Apr 21 10:49:27 EDT 2021" starttimestamp="1619011563329" timestamp="5003857" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2814" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:49:30 EDT 2021" starttimestamp="1619011563329" timestamp="5007084" />
  <Command __id="2815" _type="RunCommand" date="Wed Apr 21 10:49:30 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5007151" type="Run" />
  <Command __id="2816" _type="ShellCommand" date="Wed Apr 21 10:49:31 EDT 2021" starttimestamp="1619011563329" timestamp="5007938" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2817" _type="ConsoleOutput" date="Wed Apr 21 10:49:31 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5008048" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing add-sub Expression [p, o, w, (, 1, ,, 2, )]¶Testing multi div Expression [p, o, w, (, 1, ,, 2, )]¶Testing function Expression [p, o, w, (, 1, ,, 2, )]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [1, ,, 2]¶Testing add-sub Expression [1, ,, 2]¶Testing multi div Expression [1, ,, 2]¶Testing function Expression [1, ,, 2]¶Testing parenthesis Expression [1, ,, 2]¶Parenthesis Expression [,]¶Testing Expression [1]¶Testing Expression [2]¶Testing Expression [2]"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2818" _type="ConsoleOutput" date="Wed Apr 21 10:49:31 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5008171" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2819" _type="ConsoleOutput" date="Wed Apr 21 10:49:34 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5011322" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2820" _type="ConsoleOutput" date="Wed Apr 21 10:49:37 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5014023" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing Expression [x, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), s, q, r, t, (, a]
Testing function Expression [x, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, a]
Testing Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing add-sub Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing multi div Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing function Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Testing Expression [x, ), s, q, r, t, (, a]
Testing add-sub Expression [x, ), s, q, r, t, (, a]
Testing multi div Expression [x, ), s, q, r, t, (, a]
Testing function Expression [x, ), s, q, r, t, (, a]
Testing parenthesis Expression [x, ), s, q, r, t, (, a]
Parenthesis Expression [), s, q, r, t, (]
Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]
Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing add-sub Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing multi div Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing function Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶Testing add-sub Expression ["), Diff(INSERT,"x, ), "), Diff(EQUAL,"s, q, r, t, (, a"), Diff(DELETE,", )"), Diff(EQUAL,"]¶Testing multi div Expression ["), Diff(INSERT,"x, ), "), Diff(EQUAL,"s, q, r, t, (, a"), Diff(DELETE,", )"), Diff(EQUAL,"]¶Testing function Expression ["), Diff(INSERT,"x, ), "), Diff(EQUAL,"s, q, r, t, (, a"), Diff(DELETE,", )"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"Expression [a]¶Testing Expression ["), Diff(INSERT,"parenthesis Expression [x, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶Testing Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing add-sub Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing multi div Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing function Expression ["), Diff(INSERT,"e, x, p, (, x, ), "), Diff(EQUAL,"s, q, r, t, (, a, )]¶Testing Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶Testing "), Diff(INSERT,"add-sub "), Diff(EQUAL,"Expression ["), Diff(INSERT,"x, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), s, q, r, t, (, a]¶Testing function Expression [x, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, "), Diff(EQUAL,"a]¶")]]]></diff>
  </Command>
  <Command __id="2821" _type="ConsoleOutput" date="Wed Apr 21 10:49:39 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5016547" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), s, q, r, t, (, a]¶Testing function Expression [x, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, a]¶Testing Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing add-sub Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing multi div Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing function Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Testing Expression [x, ), s, q, r, t, (, a]¶Testing add-sub Expression [x, ), s, q, r, t, (, a]¶Testing multi div Expression [x, ), s, q, r, t, (, a]¶Testing function Expression [x, ), s, q, r, t, (, a]¶Testing parenthesis Expression [x, ), s, q, r, t, (, a]¶Parenthesis Expression [), s, q, r, t, (]¶Testing parenthesis Expression [e, x, p, (, x, ), s, q, r, t, (, a, )]¶Parenthesis Expression [x, p, (, x, ), s, q, r, t, (, "), Diff(INSERT,"a]¶Testing Expression ["), Diff(EQUAL,"a]¶")]]]></diff>
  </Command>
  <Command __id="2822" _type="ConsoleOutput" date="Wed Apr 21 10:49:42 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5019203" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2823" _type="ShellCommand" date="Wed Apr 21 10:49:43 EDT 2021" starttimestamp="1619011563329" timestamp="5019951" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2824" _type="RunCommand" date="Wed Apr 21 10:49:43 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5020130" type="Run" />
  <Command __id="2825" _type="RunCommand" date="Wed Apr 21 10:49:43 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5020130" type="Run" />
  <Command __id="2826" _type="MoveCaretCommand" caretOffset="3077" date="Wed Apr 21 10:49:43 EDT 2021" docOffset="3077" starttimestamp="1619011563329" timestamp="5020551" />
  <Command __id="2827" _type="SelectTextCommand" caretOffset="2939" date="Wed Apr 21 10:51:03 EDT 2021" end="3064" start="2939" starttimestamp="1619011563329" timestamp="5100567" />
  <Command __id="2828" _type="MoveCaretCommand" caretOffset="3069" date="Wed Apr 21 10:51:59 EDT 2021" docOffset="3069" starttimestamp="1619011563329" timestamp="5156418" />
  <DocumentChange __id="2658" _type="Insert" date="Wed Apr 21 10:45:26 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10942" docExpressionCount="1194" docLength="10942" length="4" offset="2707" starttimestamp="1619011563329" timestamp="4763437">
    <text><![CDATA[
		]]></text>
  </DocumentChange>
  <DocumentChange __id="2665" _type="Replace" date="Wed Apr 21 10:45:40 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="10926" docExpressionCount="1192" docLength="10926" endLine="79" insertionLength="1" int_docASTNodeCount="1641" int_docActiveCodeLength="10925" int_docExpressionCount="1192" int_docLength="10925" length="17" offset="2648" startLine="79" starttimestamp="1619011563329" timestamp="4777622">
    <deletedText><![CDATA[setTexExpression(]]></deletedText>
    <insertedText><![CDATA[t]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2667" _type="Insert" date="Wed Apr 21 10:45:41 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10941" docExpressionCount="1194" docLength="10941" length="15" offset="2649" repeat="15" starttimestamp="1619011563329" timestamp="4777681" timestamp2="4780804">
    <text><![CDATA[exExpression = ]]></text>
  </DocumentChange>
  <DocumentChange __id="2699" _type="Delete" date="Wed Apr 21 10:45:46 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10940" docExpressionCount="1194" docLength="10940" endLine="79" length="1" offset="2699" startLine="79" starttimestamp="1619011563329" timestamp="4783223">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="2707" _type="Insert" date="Wed Apr 21 10:45:50 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10945" docExpressionCount="1194" docLength="10945" length="5" offset="2700" starttimestamp="1619011563329" timestamp="4787211">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2709" _type="Replace" date="Wed Apr 21 10:45:50 EDT 2021" docASTNodeCount="1654" docActiveCodeLength="11076" docExpressionCount="1203" docLength="11076" endLine="80" insertionLength="134" int_docASTNodeCount="1643" int_docActiveCodeLength="10942" int_docExpressionCount="1194" int_docLength="10942" length="3" offset="2702" startLine="80" starttimestamp="1619011563329" timestamp="4787428">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			propertyListenerSupport.notifyAllListeners(
					new PropertyChangeEvent(this, "texExpression", oldTexExpression, texExpression));]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2717" _type="Replace" date="Wed Apr 21 10:46:01 EDT 2021" docASTNodeCount="1654" docActiveCodeLength="11061" docExpressionCount="1203" docLength="11061" endLine="81" insertionLength="1" int_docASTNodeCount="1653" int_docActiveCodeLength="11060" int_docExpressionCount="1202" int_docLength="11060" length="16" offset="2802" startLine="81" starttimestamp="1619011563329" timestamp="4797793">
    <deletedText><![CDATA[oldTexExpression]]></deletedText>
    <insertedText><![CDATA[n]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2719" _type="Insert" date="Wed Apr 21 10:46:01 EDT 2021" docASTNodeCount="1654" docActiveCodeLength="11064" docExpressionCount="1203" docLength="11064" length="3" offset="2803" repeat="3" starttimestamp="1619011563329" timestamp="4797997" timestamp2="4798335">
    <text><![CDATA[ull]]></text>
  </DocumentChange>
  <DocumentChange __id="2729" _type="Insert" date="Wed Apr 21 10:46:03 EDT 2021" docASTNodeCount="1654" docActiveCodeLength="11069" docExpressionCount="1203" docLength="11069" length="5" offset="2824" starttimestamp="1619011563329" timestamp="4800061">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2731" _type="Replace" date="Wed Apr 21 10:46:03 EDT 2021" docASTNodeCount="1658" docActiveCodeLength="11091" docExpressionCount="1206" docLength="11091" endLine="82" insertionLength="25" int_docASTNodeCount="1654" int_docActiveCodeLength="11066" int_docExpressionCount="1203" int_docLength="11066" length="3" offset="2826" startLine="82" starttimestamp="1619011563329" timestamp="4800282">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			render(texExpression);]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2738" _type="Insert" date="Wed Apr 21 10:46:07 EDT 2021" docASTNodeCount="1658" docActiveCodeLength="11096" docExpressionCount="1206" docLength="11096" length="5" offset="2851" starttimestamp="1619011563329" timestamp="4804523">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2740" _type="Replace" date="Wed Apr 21 10:46:08 EDT 2021" docASTNodeCount="1669" docActiveCodeLength="11177" docExpressionCount="1215" docLength="11177" endLine="83" insertionLength="84" int_docASTNodeCount="1658" int_docActiveCodeLength="11093" int_docExpressionCount="1206" int_docLength="11093" length="3" offset="2853" startLine="83" starttimestamp="1619011563329" timestamp="4804696">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2745" _type="Insert" date="Wed Apr 21 10:46:11 EDT 2021" docASTNodeCount="1669" docActiveCodeLength="11182" docExpressionCount="1215" docLength="11182" length="5" offset="2937" starttimestamp="1619011563329" timestamp="4808452">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2747" _type="Replace" date="Wed Apr 21 10:46:11 EDT 2021" docASTNodeCount="1687" docActiveCodeLength="11304" docExpressionCount="1230" docLength="11304" endLine="84" insertionLength="125" int_docASTNodeCount="1669" int_docActiveCodeLength="11179" int_docExpressionCount="1215" int_docLength="11179" length="3" offset="2939" startLine="84" starttimestamp="1619011563329" timestamp="4808629">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			getImage().setImageFileName("data/latex.png");
			getImage().setHeight(imageHeight);
			getImage().setWidth(imageWidth);]]></insertedText>
  </DocumentChange>
  <Command __id="2829" _type="SelectTextCommand" caretOffset="2939" date="Wed Apr 21 10:52:01 EDT 2021" end="3064" start="2939" starttimestamp="1619011563329" timestamp="5158091" />
  <Command __id="2831" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:02 EDT 2021" starttimestamp="1619011563329" timestamp="5159616" />
  <Command __id="2833" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:03 EDT 2021" starttimestamp="1619011563329" timestamp="5159865" />
  <Command __id="2834" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:52:03 EDT 2021" starttimestamp="1619011563329" timestamp="5160143" />
  <Command __id="2835" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:52:03 EDT 2021" starttimestamp="1619011563329" timestamp="5160253" />
  <Command __id="2836" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:52:03 EDT 2021" starttimestamp="1619011563329" timestamp="5160275" />
  <Command __id="2837" _type="MoveCaretCommand" caretOffset="2937" date="Wed Apr 21 10:52:04 EDT 2021" docOffset="2937" starttimestamp="1619011563329" timestamp="5160849" />
  <Command __id="2838" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:52:07 EDT 2021" starttimestamp="1619011563329" timestamp="5163991" />
  <Command __id="2839" _type="RunCommand" date="Wed Apr 21 10:52:07 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5164161" type="Run" />
  <Command __id="2840" _type="RunCommand" date="Wed Apr 21 10:52:07 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5164161" type="Run" />
  <Command __id="2841" _type="ShellCommand" date="Wed Apr 21 10:52:08 EDT 2021" starttimestamp="1619011563329" timestamp="5164958" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2842" _type="ConsoleOutput" date="Wed Apr 21 10:52:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5165057" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2843" _type="ConsoleOutput" date="Wed Apr 21 10:52:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5165184" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2844" _type="ConsoleOutput" date="Wed Apr 21 10:52:12 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5169122" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2845" _type="ConsoleOutput" date="Wed Apr 21 10:52:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5172254" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶"), Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="2846" _type="ShellCommand" date="Wed Apr 21 10:52:16 EDT 2021" starttimestamp="1619011563329" timestamp="5173121" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2847" _type="RunCommand" date="Wed Apr 21 10:52:16 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5173297" type="Run" />
  <Command __id="2848" _type="RunCommand" date="Wed Apr 21 10:52:16 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5173297" type="Run" />
  <Command __id="2849" _type="MoveCaretCommand" caretOffset="2942" date="Wed Apr 21 10:52:18 EDT 2021" docOffset="2942" starttimestamp="1619011563329" timestamp="5174951" />
  <Command __id="2850" _type="MoveCaretCommand" caretOffset="2871" date="Wed Apr 21 10:52:20 EDT 2021" docOffset="2871" starttimestamp="1619011563329" timestamp="5177210" />
  <Command __id="2851" _type="SelectTextCommand" caretOffset="2705" date="Wed Apr 21 10:52:23 EDT 2021" end="2937" start="2705" starttimestamp="1619011563329" timestamp="5180614" />
  <Command __id="2853" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:24 EDT 2021" starttimestamp="1619011563329" timestamp="5181447" />
  <Command __id="2854" _type="MoveCaretCommand" caretOffset="2649" date="Wed Apr 21 10:52:26 EDT 2021" docOffset="2649" starttimestamp="1619011563329" timestamp="5182829" />
  <Command __id="2856" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:26 EDT 2021" starttimestamp="1619011563329" timestamp="5183234" />
  <Command __id="2858" _type="InsertStringCommand" date="Wed Apr 21 10:52:26 EDT 2021" starttimestamp="1619011563329" timestamp="5183497" timestamp2="5183497">
    <data><![CDATA[s]]></data>
  </Command>
  <Command __id="2860" _type="InsertStringCommand" date="Wed Apr 21 10:52:27 EDT 2021" starttimestamp="1619011563329" timestamp="5183699" timestamp2="5183699">
    <data><![CDATA[e]]></data>
  </Command>
  <Command __id="2862" _type="InsertStringCommand" date="Wed Apr 21 10:52:27 EDT 2021" starttimestamp="1619011563329" timestamp="5184070" timestamp2="5184070">
    <data><![CDATA[t]]></data>
  </Command>
  <Command __id="2864" _type="InsertStringCommand" date="Wed Apr 21 10:52:27 EDT 2021" starttimestamp="1619011563329" timestamp="5184324" timestamp2="5184324">
    <data><![CDATA[T]]></data>
  </Command>
  <Command __id="2865" _type="MoveCaretCommand" caretOffset="2667" date="Wed Apr 21 10:52:29 EDT 2021" docOffset="2667" starttimestamp="1619011563329" timestamp="5186133" />
  <Command __id="2867" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:29 EDT 2021" starttimestamp="1619011563329" timestamp="5186568" />
  <Command __id="2869" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:30 EDT 2021" starttimestamp="1619011563329" timestamp="5186715" />
  <Command __id="2871" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:30 EDT 2021" starttimestamp="1619011563329" timestamp="5186835" />
  <Command __id="2873" _type="InsertStringCommand" date="Wed Apr 21 10:52:30 EDT 2021" starttimestamp="1619011563329" timestamp="5187453" timestamp2="5187453">
    <data><![CDATA[(]]></data>
  </Command>
  <Command __id="2874" _type="MoveCaretCommand" caretOffset="2701" date="Wed Apr 21 10:52:31 EDT 2021" docOffset="2701" starttimestamp="1619011563329" timestamp="5188642" />
  <Command __id="2875" _type="MoveCaretCommand" caretOffset="2700" date="Wed Apr 21 10:52:32 EDT 2021" docOffset="2700" starttimestamp="1619011563329" timestamp="5188952" />
  <Command __id="2877" _type="InsertStringCommand" date="Wed Apr 21 10:52:33 EDT 2021" starttimestamp="1619011563329" timestamp="5189897" timestamp2="5189897">
    <data><![CDATA[)]]></data>
  </Command>
  <Command __id="2878" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:52:33 EDT 2021" starttimestamp="1619011563329" timestamp="5190323" />
  <Command __id="2879" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:52:33 EDT 2021" starttimestamp="1619011563329" timestamp="5190429" />
  <Command __id="2880" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:52:33 EDT 2021" starttimestamp="1619011563329" timestamp="5190451" />
  <Command __id="2881" _type="MoveCaretCommand" caretOffset="2463" date="Wed Apr 21 10:52:34 EDT 2021" docOffset="2463" starttimestamp="1619011563329" timestamp="5190882" />
  <Command __id="2882" _type="SelectTextCommand" caretOffset="3155" date="Wed Apr 21 10:52:42 EDT 2021" end="3281" start="3155" starttimestamp="1619011563329" timestamp="5199361" />
  <Command __id="2884" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:43 EDT 2021" starttimestamp="1619011563329" timestamp="5199990" />
  <Command __id="2886" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:52:43 EDT 2021" starttimestamp="1619011563329" timestamp="5200146" />
  <Command __id="2887" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:52:43 EDT 2021" starttimestamp="1619011563329" timestamp="5200335" />
  <Command __id="2888" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:52:43 EDT 2021" starttimestamp="1619011563329" timestamp="5200444" />
  <Command __id="2889" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:52:43 EDT 2021" starttimestamp="1619011563329" timestamp="5200465" />
  <Command __id="2890" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:52:48 EDT 2021" starttimestamp="1619011563329" timestamp="5204846" />
  <Command __id="2891" _type="RunCommand" date="Wed Apr 21 10:52:48 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5205037" type="Run" />
  <Command __id="2892" _type="RunCommand" date="Wed Apr 21 10:52:48 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5205037" type="Run" />
  <Command __id="2893" _type="ShellCommand" date="Wed Apr 21 10:52:49 EDT 2021" starttimestamp="1619011563329" timestamp="5205834" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2894" _type="ConsoleOutput" date="Wed Apr 21 10:52:49 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5205929" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2895" _type="ConsoleOutput" date="Wed Apr 21 10:52:49 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5206055" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2896" _type="ConsoleOutput" date="Wed Apr 21 10:52:54 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5211643" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2897" _type="ConsoleOutput" date="Wed Apr 21 10:52:57 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5214225" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶"), Diff(DELETE,"W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶")]]]></diff>
  </Command>
  <Command __id="2898" _type="ConsoleOutput" date="Wed Apr 21 10:53:00 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5217585" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2899" _type="ConsoleOutput" date="Wed Apr 21 10:53:03 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5219681" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [1]
Testing Expression [1]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [1]¶Testing Expression [1]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2900" _type="ConsoleOutput" date="Wed Apr 21 10:53:04 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5221178" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), 1]
Testing add-sub Expression [s, q, r, t, (, a, ), 1]
Testing multi div Expression [s, q, r, t, (, a, ), 1]
Testing function Expression [s, q, r, t, (, a, ), 1]
Testing parenthesis Expression [s, q, r, t, (, a, ), 1]
Parenthesis Expression [q, r, t, (, a, )]
Testing Expression [s, q, r, t, (, a, ), 1]
Testing add-sub Expression [s, q, r, t, (, a, ), 1]
Testing multi div Expression [s, q, r, t, (, a, ), 1]
Testing function Expression [s, q, r, t, (, a, ), 1]
Testing parenthesis Expression [s, q, r, t, (, a, ), 1]
Parenthesis Expression [q, r, t, (, a, )]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(INSERT,"s, q, r, t, (, a, ), "), Diff(EQUAL,"1]¶Testing "), Diff(INSERT,"add-sub "), Diff(EQUAL,"Expression ["), Diff(DELETE,"1]¶Rendered"), Diff(INSERT,"s, q, r, t, (, a, ), 1]¶Testing multi div Expression [s, q, r, t, (, a, ), 1]¶Testing function Expression [s, q, r, t, (, a, ), 1]¶Testing parenthesis Expression [s, q, r, t, (, a, ), 1]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing Expression [s, q, r, t, (, a, ), 1]¶Testing add-sub Expression [s, q, r, t, (, a, ), 1]¶Testing multi div Expression [s, q, r, t, (, a, ), 1]¶Testing function Expression [s, q, r, t, (, a, ), 1]¶Testing parenthesis Expression [s, q, r, t, (, a, ), 1]¶Parenthesis Expression [q, r, t, (, a, )]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2901" _type="ConsoleOutput" date="Wed Apr 21 10:53:06 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5222795" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), 1]
Testing add-sub Expression [s, q, r, t, (, a, ), 1]
Testing multi div Expression [s, q, r, t, (, a, ), 1]
Testing function Expression [s, q, r, t, (, a, ), 1]
Testing parenthesis Expression [s, q, r, t, (, a, ), 1]
Parenthesis Expression [q, r, t, (, a, )]
Testing Expression [s, q, r, t, (, a, ), 1]
Testing add-sub Expression [s, q, r, t, (, a, ), 1]
Testing multi div Expression [s, q, r, t, (, a, ), 1]
Testing function Expression [s, q, r, t, (, a, ), 1]
Testing parenthesis Expression [s, q, r, t, (, a, ), 1]
Parenthesis Expression [q, r, t, (, a, )]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, ), 1]¶Testing add-sub Expression [s, q, r, t, (, a, ), 1]¶Testing multi div Expression [s, q, r, t, (, a, ), 1]¶Testing function Expression [s, q, r, t, (, a, ), 1]¶Testing parenthesis Expression [s, q, r, t, (, a, ), 1]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing Expression [s, q, r, t, (, a, ), 1]¶Testing add-sub Expression [s, q, r, t, (, a, ), 1]¶Testing multi div Expression [s, q, r, t, (, a, ), 1]¶Testing function Expression [s, q, r, t, (, a, ), 1]¶Testing parenthesis Expression [s, q, r, t, (, a, ), 1]¶Parenthesis Expression [q, r, t, (, a, )]¶")]]]></diff>
  </Command>
  <Command __id="2902" _type="ConsoleOutput" date="Wed Apr 21 10:53:06 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5223248" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, ), 1]
Testing add-sub Expression [s, q, r, t, (, a, ), 1]
Testing multi div Expression [s, q, r, t, (, a, ), 1]
Testing function Expression [s, q, r, t, (, a, ), 1]
Testing parenthesis Expression [s, q, r, t, (, a, ), 1]
Parenthesis Expression [q, r, t, (, a, )]
Testing Expression [s, q, r, t, (, a, ), 1]
Testing add-sub Expression [s, q, r, t, (, a, ), 1]
Testing multi div Expression [s, q, r, t, (, a, ), 1]
Testing function Expression [s, q, r, t, (, a, ), 1]
Testing parenthesis Expression [s, q, r, t, (, a, ), 1]
Parenthesis Expression [q, r, t, (, a, )]
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, ), 1]¶Testing add-sub Expression [s, q, r, t, (, a, ), 1]¶Testing multi div Expression [s, q, r, t, (, a, ), 1]¶Testing function Expression [s, q, r, t, (, a, ), 1]¶Testing parenthesis Expression [s, q, r, t, (, a, ), 1]¶Parenthesis Expression [q, r, t, (, a, )]¶Testing Expression [s, q, r, t, (, a, ), 1]¶Testing add-sub Expression [s, q, r, t, (, a, ), 1]¶Testing multi div Expression [s, q, r, t, (, a, ), 1]¶Testing function Expression [s, q, r, t, (, a, ), 1]¶Testing parenthesis Expression [s, q, r, t, (, a, ), 1]¶Parenthesis Expression [q, r, t, (, a, )]¶")]]]></diff>
  </Command>
  <Command __id="2903" _type="ConsoleOutput" date="Wed Apr 21 10:53:07 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5224074" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing add-sub Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing multi div Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing function Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"Expression [a]¶Testing add-sub"), Diff(EQUAL," Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1]¶Parenthesis"), Diff(INSERT,"]¶Testing multi div"), Diff(EQUAL," Expression ["), Diff(INSERT,"s, "), Diff(EQUAL,"q, r, t, (, a, )]¶Testing "), Diff(INSERT,"function "), Diff(EQUAL,"Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1]¶Testing add-sub"), Diff(INSERT,"]¶Testing Expression [a]¶Testing Expression [a]¶Testing"), Diff(EQUAL," Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div"), Diff(INSERT,"add-sub"), Diff(EQUAL," Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function"), Diff(INSERT,"multi div"), Diff(EQUAL," Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"function"), Diff(EQUAL," Expression [s, q, r, t, (, a, )"), Diff(DELETE,", 1]¶Parenthesis Expression [q, r, t, (, a, )]"), Diff(INSERT,"]¶Testing Expression [a]¶Testing Expression [a]¶Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2904" _type="ConsoleOutput" date="Wed Apr 21 10:53:07 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5224584" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2905" _type="ConsoleOutput" date="Wed Apr 21 10:53:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5224849" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2906" _type="ConsoleOutput" date="Wed Apr 21 10:53:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5225052" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2907" _type="ConsoleOutput" date="Wed Apr 21 10:53:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5225268" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2908" _type="ConsoleOutput" date="Wed Apr 21 10:53:08 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5225441" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2909" _type="ConsoleOutput" date="Wed Apr 21 10:53:12 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5228710" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶"), Diff(EQUAL,"Testing Expression [a]¶Testing Expression [a]¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2910" _type="ExceptionCommand" date="Wed Apr 21 10:53:16 EDT 2021" starttimestamp="1619011563329" timestamp="5232931" type="Exception">
    <exceptionString><![CDATA[Testing Expression []
Testing Expression []
class org.scilab.forge.jlatexmath.ParseException
org.scilab.forge.jlatexmath.ParseException: Unknown symbol or command or predefined TeXFormula: 'neqa'
	at org.scilab.forge.jlatexmath.TeXParser.processEscape(TeXParser.java:1243)
	at org.scilab.forge.jlatexmath.TeXParser.parse(TeXParser.java:705)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:261)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:245)
	at components.mathEditor.MathEditorPanel.render(MathEditorPanel.java:359)
	at components.mathEditor.MathEditorPanel.setTexExpression(MathEditorPanel.java:93)
	at components.mathEditor.MathEditorPanel.neq(MathEditorPanel.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2911" _type="ExceptionCommand" date="Wed Apr 21 10:53:17 EDT 2021" starttimestamp="1619011563329" timestamp="5234624" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: org.scilab.forge.jlatexmath.ParseException: Unknown symbol or command or predefined TeXFormula: 'neqa'
	at org.scilab.forge.jlatexmath.TeXParser.processEscape(TeXParser.java:1243)
	at org.scilab.forge.jlatexmath.TeXParser.parse(TeXParser.java:705)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:261)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:245)
	at components.mathEditor.MathEditorPanel.render(MathEditorPanel.java:359)
	at components.mathEditor.MathEditorPanel.setTexExpression(MathEditorPanel.java:93)
	at components.mathEditor.MathEditorPanel.neq(MathEditorPanel.java:157)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2912" _type="ConsoleOutput" date="Wed Apr 21 10:53:20 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5236824" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2913" _type="ConsoleOutput" date="Wed Apr 21 10:53:22 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5239093" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2914" _type="ConsoleOutput" date="Wed Apr 21 10:53:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5241931" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2915" _type="ExceptionCommand" date="Wed Apr 21 10:53:26 EDT 2021" starttimestamp="1619011563329" timestamp="5243133" type="Exception">
    <exceptionString><![CDATA[class org.scilab.forge.jlatexmath.ParseException
org.scilab.forge.jlatexmath.ParseException: Unknown symbol or command or predefined TeXFormula: 'neqb'
	at org.scilab.forge.jlatexmath.TeXParser.processEscape(TeXParser.java:1243)
	at org.scilab.forge.jlatexmath.TeXParser.parse(TeXParser.java:705)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:261)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:245)
	at components.mathEditor.MathEditorPanel.render(MathEditorPanel.java:359)
	at components.mathEditor.MathEditorPanel.setTexExpression(MathEditorPanel.java:93)
	at components.mathEditor.MathEditorPanel.neq(MathEditorPanel.java:157)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2916" _type="ExceptionCommand" date="Wed Apr 21 10:53:29 EDT 2021" starttimestamp="1619011563329" timestamp="5246138" type="Exception">
    <exceptionString><![CDATA[java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at bus.uigen.reflect.local.AVirtualMethod.methodInvoke(AVirtualMethod.java:270)
	at bus.uigen.reflect.UnifiedMethod.invoke(UnifiedMethod.java:219)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:1444)
	at bus.uigen.undo.BasicCommand.execute(BasicCommand.java:69)
	at bus.uigen.undo.AHistoryUndoer.execute(AHistoryUndoer.java:99)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1906)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1701)
	at bus.uigen.controller.MethodInvocationManager.invokeMethods(MethodInvocationManager.java:1585)
	at bus.uigen.controller.MethodInvocationManager.invokeMethod(MethodInvocationManager.java:2008)
	at bus.uigen.controller.MethodInvocationManager.checkIfArgumentsAvailable(MethodInvocationManager.java:631)
	at bus.uigen.controller.MethodInvocationManager.init(MethodInvocationManager.java:304)
	at bus.uigen.controller.MethodInvocationManager.<init>(MethodInvocationManager.java:341)
	at bus.uigen.compose.ButtonCommand.actionPerformed(ButtonCommand.java:250)
	at bus.uigen.widgets.swing.SwingButtonEventForwarder.actionPerformed(SwingButtonEventForwarder.java:30)
	at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
	at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
	at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
	at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
	at java.desktop/javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:270)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.AWTEventMulticaster.mouseReleased(AWTEventMulticaster.java:297)
	at java.desktop/java.awt.Component.processMouseEvent(Component.java:6589)
	at java.desktop/javax.swing.JComponent.processMouseEvent(JComponent.java:3342)
	at java.desktop/java.awt.Component.processEvent(Component.java:6354)
	at java.desktop/java.awt.Container.processEvent(Container.java:2261)
	at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4966)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2319)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4914)
	at java.desktop/java.awt.LightweightDispatcher.processMouseEvent(Container.java:4543)
	at java.desktop/java.awt.LightweightDispatcher.dispatchEvent(Container.java:4484)
	at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2305)
	at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2772)
	at java.desktop/java.awt.Component.dispatchEvent(Component.java:4798)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
	at java.desktop/java.awt.EventQueue.access$600(EventQueue.java:97)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:97)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
	at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:87)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
Caused by: org.scilab.forge.jlatexmath.ParseException: Unknown symbol or command or predefined TeXFormula: 'neqb'
	at org.scilab.forge.jlatexmath.TeXParser.processEscape(TeXParser.java:1243)
	at org.scilab.forge.jlatexmath.TeXParser.parse(TeXParser.java:705)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:261)
	at org.scilab.forge.jlatexmath.TeXFormula.<init>(TeXFormula.java:245)
	at components.mathEditor.MathEditorPanel.render(MathEditorPanel.java:359)
	at components.mathEditor.MathEditorPanel.setTexExpression(MathEditorPanel.java:93)
	at components.mathEditor.MathEditorPanel.neq(MathEditorPanel.java:157)
	... 56 more
]]></exceptionString>
    <language><![CDATA[java]]></language>
  </Command>
  <Command __id="2917" _type="ShellCommand" date="Wed Apr 21 10:53:29 EDT 2021" starttimestamp="1619011563329" timestamp="5246368" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2918" _type="RunCommand" date="Wed Apr 21 10:53:29 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5246548" type="Run" />
  <Command __id="2919" _type="RunCommand" date="Wed Apr 21 10:53:29 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5246548" type="Run" />
  <Command __id="2920" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:53:34 EDT 2021" starttimestamp="1619011563329" timestamp="5250692" />
  <Command __id="2921" _type="RunCommand" date="Wed Apr 21 10:53:34 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5250873" type="Run" />
  <Command __id="2922" _type="RunCommand" date="Wed Apr 21 10:53:34 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5250873" type="Run" />
  <Command __id="2923" _type="ShellCommand" date="Wed Apr 21 10:53:35 EDT 2021" starttimestamp="1619011563329" timestamp="5251677" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2924" _type="ConsoleOutput" date="Wed Apr 21 10:53:35 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5251780" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2925" _type="ConsoleOutput" date="Wed Apr 21 10:53:35 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5251907" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2926" _type="ConsoleOutput" date="Wed Apr 21 10:53:36 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5253378" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2927" _type="ConsoleOutput" date="Wed Apr 21 10:53:36 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5253648" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2928" _type="ConsoleOutput" date="Wed Apr 21 10:53:43 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5260665" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Testing Expression [s, q, r, t, (, a, )]
Testing add-sub Expression [s, q, r, t, (, a, )]
Testing multi div Expression [s, q, r, t, (, a, )]
Testing function Expression [s, q, r, t, (, a, )]
Testing Expression [a]
Testing Expression [a]
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2929" _type="ConsoleOutput" date="Wed Apr 21 10:53:48 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5264780" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶Testing Expression [s, q, r, t, (, a, )]¶Testing add-sub Expression [s, q, r, t, (, a, )]¶Testing multi div Expression [s, q, r, t, (, a, )]¶Testing function Expression [s, q, r, t, (, a, )]¶Testing Expression [a]¶Testing Expression [a]¶"), Diff(EQUAL,"Rendered¶")]]]></diff>
  </Command>
  <Command __id="2930" _type="ShellCommand" date="Wed Apr 21 10:53:52 EDT 2021" starttimestamp="1619011563329" timestamp="5268787" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2931" _type="RunCommand" date="Wed Apr 21 10:53:52 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5268969" type="Run" />
  <Command __id="2932" _type="RunCommand" date="Wed Apr 21 10:53:52 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5268969" type="Run" />
  <Command __id="2933" _type="SelectTextCommand" caretOffset="3153" date="Wed Apr 21 10:54:01 EDT 2021" end="3153" start="3095" starttimestamp="1619011563329" timestamp="5278211" />
  <Command __id="2934" _type="MoveCaretCommand" caretOffset="3153" date="Wed Apr 21 10:54:01 EDT 2021" docOffset="3153" starttimestamp="1619011563329" timestamp="5278385" />
  <Command __id="2935" _type="SelectTextCommand" caretOffset="2877" date="Wed Apr 21 10:54:02 EDT 2021" end="3153" start="2877" starttimestamp="1619011563329" timestamp="5279199" />
  <Command __id="2936" _type="MoveCaretCommand" caretOffset="2877" date="Wed Apr 21 10:54:02 EDT 2021" docOffset="2877" starttimestamp="1619011563329" timestamp="5279440" />
  <Command __id="2937" _type="SelectTextCommand" caretOffset="3153" date="Wed Apr 21 10:54:04 EDT 2021" end="3153" start="2837" starttimestamp="1619011563329" timestamp="5280959" />
  <Command __id="2938" _type="MoveCaretCommand" caretOffset="3153" date="Wed Apr 21 10:54:04 EDT 2021" docOffset="3153" starttimestamp="1619011563329" timestamp="5281139" />
  <Command __id="2939" _type="SelectTextCommand" caretOffset="2653" date="Wed Apr 21 10:54:37 EDT 2021" end="2654" start="2653" starttimestamp="1619011563329" timestamp="5314183" />
  <Command __id="2940" _type="MoveCaretCommand" caretOffset="2650" date="Wed Apr 21 10:54:37 EDT 2021" docOffset="2650" starttimestamp="1619011563329" timestamp="5314584" />
  <Command __id="2941" _type="MoveCaretCommand" caretOffset="2651" date="Wed Apr 21 10:54:38 EDT 2021" docOffset="2651" starttimestamp="1619011563329" timestamp="5314910" />
  <Command __id="2942" _type="MoveCaretCommand" caretOffset="3064" date="Wed Apr 21 10:54:39 EDT 2021" docOffset="3064" starttimestamp="1619011563329" timestamp="5316043" />
  <Command __id="2943" _type="SelectTextCommand" caretOffset="3103" date="Wed Apr 21 10:54:40 EDT 2021" end="3157" start="3103" starttimestamp="1619011563329" timestamp="5316994" />
  <Command __id="2944" _type="MoveCaretCommand" caretOffset="3068" date="Wed Apr 21 10:54:40 EDT 2021" docOffset="3068" starttimestamp="1619011563329" timestamp="5317190" />
  <Command __id="2945" _type="SelectTextCommand" caretOffset="3153" date="Wed Apr 21 10:54:43 EDT 2021" end="3153" start="3007" starttimestamp="1619011563329" timestamp="5320632" />
  <Command __id="2946" _type="CopyCommand" date="Wed Apr 21 10:54:45 EDT 2021" starttimestamp="1619011563329" timestamp="5321923" />
  <Command __id="2947" _type="MoveCaretCommand" caretOffset="2702" date="Wed Apr 21 10:54:46 EDT 2021" docOffset="2702" starttimestamp="1619011563329" timestamp="5322889" />
  <Command __id="2949" _type="InsertStringCommand" date="Wed Apr 21 10:54:46 EDT 2021" starttimestamp="1619011563329" timestamp="5323558" timestamp2="5323558">
    <data><![CDATA[]]></data>
  </Command>
  <Command __id="2951" _type="PasteCommand" date="Wed Apr 21 10:54:47 EDT 2021" starttimestamp="1619011563329" timestamp="5323831" />
  <Command __id="2952" _type="MoveCaretCommand" caretOffset="2770" date="Wed Apr 21 10:54:48 EDT 2021" docOffset="2770" starttimestamp="1619011563329" timestamp="5324986" />
  <Command __id="2954" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:48 EDT 2021" starttimestamp="1619011563329" timestamp="5325459" />
  <Command __id="2956" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:48 EDT 2021" starttimestamp="1619011563329" timestamp="5325608" />
  <Command __id="2958" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:49 EDT 2021" starttimestamp="1619011563329" timestamp="5325764" />
  <Command __id="2960" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:49 EDT 2021" starttimestamp="1619011563329" timestamp="5326079" />
  <Command __id="2961" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 10:54:49 EDT 2021" starttimestamp="1619011563329" timestamp="5326547" />
  <Command __id="2962" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.LINE_DOWN" date="Wed Apr 21 10:54:50 EDT 2021" starttimestamp="1619011563329" timestamp="5327253" />
  <Command __id="2964" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:50 EDT 2021" starttimestamp="1619011563329" timestamp="5327494" />
  <Command __id="2966" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:50 EDT 2021" starttimestamp="1619011563329" timestamp="5327659" />
  <Command __id="2968" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:51 EDT 2021" starttimestamp="1619011563329" timestamp="5327830" />
  <Command __id="2969" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:54:51 EDT 2021" starttimestamp="1619011563329" timestamp="5328113" />
  <Command __id="2970" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:54:51 EDT 2021" starttimestamp="1619011563329" timestamp="5328221" />
  <Command __id="2971" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:54:51 EDT 2021" starttimestamp="1619011563329" timestamp="5328239" />
  <Command __id="2973" _type="EclipseCommand" commandID="eventLogger.styledTextCommand.DELETE_PREVIOUS" date="Wed Apr 21 10:54:51 EDT 2021" starttimestamp="1619011563329" timestamp="5328664" />
  <Command __id="2974" _type="EclipseCommand" commandID="org.eclipse.ui.file.save" date="Wed Apr 21 10:54:52 EDT 2021" starttimestamp="1619011563329" timestamp="5328938" />
  <Command __id="2975" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:54:52 EDT 2021" starttimestamp="1619011563329" timestamp="5329246" />
  <Command __id="2976" _type="EclipseCommand" commandID="" date="Wed Apr 21 10:54:52 EDT 2021" starttimestamp="1619011563329" timestamp="5329265" />
  <Command __id="2977" _type="EclipseCommand" commandID="org.eclipse.jdt.debug.ui.localJavaShortcut.run" date="Wed Apr 21 10:54:56 EDT 2021" starttimestamp="1619011563329" timestamp="5332873" />
  <Command __id="2978" _type="RunCommand" date="Wed Apr 21 10:54:56 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5333063" type="Run" />
  <Command __id="2979" _type="RunCommand" date="Wed Apr 21 10:54:56 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5333064" type="Run" />
  <Command __id="2980" _type="ShellCommand" date="Wed Apr 21 10:54:57 EDT 2021" starttimestamp="1619011563329" timestamp="5333862" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="2981" _type="ConsoleOutput" date="Wed Apr 21 10:54:57 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5333964" type="ConsoleOutput">
    <outputString><![CDATA[ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327
W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. 
 Associate annotation @Visible(false) with its getter.
W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered"), Diff(INSERT,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2982" _type="ConsoleOutput" date="Wed Apr 21 10:54:57 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5334091" type="ConsoleOutput">
    <outputString><![CDATA[W*** Value: null of Root.Image not in range.
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"ObjectEditor(Version 22, built on Wed Feb 17 11:47:24 EST 2021). Copyright Prasun Dewan, 2012, All rights reserved. US Patent Appl. No.: 12/532,327¶W*** public void components.mathEditor.MathEditorPanel.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicit property caretPosition of  MathEditorPanel ignored as it is not in property names list. ¶ Associate annotation @Visible(false) with its getter.¶W*** Implicitly editable property: caretPosition of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: image of class class components.mathEditor.MathEditorPanel not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"W*** Value: null of Root.Image not in range."), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2983" _type="ConsoleOutput" date="Wed Apr 21 10:54:59 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5336186" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a]
Testing Expression [a]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"W*** Value: null of Root.Image not in range."), Diff(INSERT,"Testing Expression [a]¶Testing Expression [a]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2984" _type="ConsoleOutput" date="Wed Apr 21 10:54:59 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5336521" type="ConsoleOutput">
    <outputString><![CDATA[Rendered
Rendered
W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)
W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. 

]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Testing Expression [a]¶Testing Expression [a]"), Diff(INSERT,"Rendered¶Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2985" _type="ConsoleOutput" date="Wed Apr 21 10:55:01 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5337894" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
Testing Expression [e, x, p, (, x, ), a]
Testing add-sub Expression [e, x, p, (, x, ), a]
Testing multi div Expression [e, x, p, (, x, ), a]
Testing function Expression [e, x, p, (, x, ), a]
Testing parenthesis Expression [e, x, p, (, x, ), a]
Parenthesis Expression [x, p, (, x, )]
]]></outputString>
    <diff><![CDATA[[Diff(DELETE,"Rendered¶Rendered¶W*** public void components.mathEditor.MathExpressionImage.addPropertyChangeListener(java.beans.PropertyChangeListener) should be associated with annotation: @ObserverRegisterer(Property Listener)¶W*** Implicitly editable property: height of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: imageFileName of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: width of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: x of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶¶W*** Implicitly editable property: y of class class components.mathEditor.MathExpressionImage not considered editable as it is not in editable property names list. ¶"), Diff(INSERT,"Testing Expression [e, x, p, (, x, ), a]¶Testing add-sub Expression [e, x, p, (, x, ), a]¶Testing multi div Expression [e, x, p, (, x, ), a]¶Testing function Expression [e, x, p, (, x, ), a]¶Testing parenthesis Expression [e, x, p, (, x, ), a]¶Parenthesis Expression [x, p, (, x, )]¶Testing Expression [e, x, p, (, x, ), a]¶Testing add-sub Expression [e, x, p, (, x, ), a]¶Testing multi div Expression [e, x, p, (, x, ), a]¶Testing function Expression [e, x, p, (, x, ), a]¶Testing parenthesis Expression [e, x, p, (, x, ), a]¶Parenthesis Expression [x, p, (, x, )]"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2986" _type="ConsoleOutput" date="Wed Apr 21 10:55:02 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5339606" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing add-sub Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing multi div Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing function Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"Expression [x]¶Testing add-sub"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Parenthesis"), Diff(INSERT,"]¶Testing multi div"), Diff(EQUAL," Expression ["), Diff(INSERT,"e, "), Diff(EQUAL,"x, p, (, x, )]¶Testing "), Diff(INSERT,"function "), Diff(EQUAL,"Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Testing add-sub"), Diff(INSERT,"]¶Testing Expression [x]¶Testing Expression [x]¶Testing"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div"), Diff(INSERT,"add-sub"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function"), Diff(INSERT,"multi div"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"parenthesis"), Diff(INSERT,"function"), Diff(EQUAL," Expression [e, x, p, (, x, )"), Diff(DELETE,", a]¶Parenthesis Expression [x, p, (, x, )]"), Diff(INSERT,"]¶Testing Expression [x]¶Testing Expression [x]¶Rendered¶Rendered"), Diff(EQUAL,"¶")]]]></diff>
  </Command>
  <Command __id="2987" _type="ConsoleOutput" date="Wed Apr 21 10:55:04 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5341391" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2988" _type="ConsoleOutput" date="Wed Apr 21 10:55:04 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5341598" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Testing Expression [e, x, p, (, x, )]
Testing add-sub Expression [e, x, p, (, x, )]
Testing multi div Expression [e, x, p, (, x, )]
Testing function Expression [e, x, p, (, x, )]
Testing Expression [x]
Testing Expression [x]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Testing Expression [e, x, p, (, x, )]¶Testing add-sub Expression [e, x, p, (, x, )]¶Testing multi div Expression [e, x, p, (, x, )]¶Testing function Expression [e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2989" _type="ConsoleOutput" date="Wed Apr 21 10:55:10 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5347581" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"e, x"), Diff(INSERT,"a"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"+"), Diff(EQUAL,", "), Diff(DELETE,"(, x, )"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing add-sub Expression ["), Diff(DELETE,"e"), Diff(INSERT,"a"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"+"), Diff(EQUAL,", "), Diff(DELETE,"p, (, x, )"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, )"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, )]¶Testing Expression [x"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing add-sub Expression ["), Diff(DELETE,"e, x"), Diff(INSERT,"a"), Diff(EQUAL,", "), Diff(DELETE,"p"), Diff(INSERT,"+"), Diff(EQUAL,", "), Diff(DELETE,"(, x, )"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, )"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, )"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing Expression ["), Diff(DELETE,"x"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing Expression ["), Diff(DELETE,"x"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing Expression ["), Diff(DELETE,"e"), Diff(INSERT,"a"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"+"), Diff(EQUAL,", "), Diff(DELETE,"p, (, x, )"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing add-sub Expression ["), Diff(DELETE,"e, x, p, ("), Diff(INSERT,"a"), Diff(EQUAL,", "), Diff(DELETE,"x"), Diff(INSERT,"+"), Diff(EQUAL,", "), Diff(DELETE,")"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"multi div "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, )"), Diff(INSERT,"a"), Diff(EQUAL,"]¶Testing "), Diff(DELETE,"function "), Diff(EQUAL,"Expression ["), Diff(DELETE,"e, x, p, (, x, )]¶Testing Expression [x]¶Testing Expression [x"), Diff(INSERT,"b"), Diff(EQUAL,"]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2990" _type="ConsoleOutput" date="Wed Apr 21 10:55:11 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5348451" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2991" _type="ConsoleOutput" date="Wed Apr 21 10:55:12 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5348699" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2992" _type="ConsoleOutput" date="Wed Apr 21 10:55:15 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5352027" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a]
Testing Expression [b]
Testing Expression [a, +, b]
Testing add-sub Expression [a, +, b]
Testing Expression [a]
Testing Expression [b]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2993" _type="ConsoleOutput" date="Wed Apr 21 10:55:19 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5355838" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [1]
Testing Expression [1]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(EQUAL,"Testing Expression ["), Diff(DELETE,"a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a]¶Testing Expression [b]¶Testing Expression [a, +, b]¶Testing add-sub Expression [a, +, b]¶Testing Expression [a]¶Testing Expression [b"), Diff(INSERT,"1]¶Testing Expression [1"), Diff(EQUAL,"]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2994" _type="ConsoleOutput" date="Wed Apr 21 10:55:25 EDT 2021" overflow="false" starttimestamp="1619011563329" timestamp="5362526" type="ConsoleOutput">
    <outputString><![CDATA[Testing Expression [1, +, 1]
Testing add-sub Expression [1, +, 1]
Testing Expression [1]
Testing Expression [1]
Testing add-sub Expression [1, +, 1]
Testing Expression [1]
Testing Expression [1]
Testing Expression [1]
Testing Expression [1]
Testing Expression [1, +, 1]
Testing add-sub Expression [1, +, 1]
Testing Expression [1]
Testing Expression [1]
Rendered
Rendered
]]></outputString>
    <diff><![CDATA[[Diff(INSERT,"Testing Expression [1, +, 1]¶Testing add-sub Expression [1, +, 1]¶Testing Expression [1]¶Testing Expression [1]¶Testing add-sub Expression [1, +, 1]¶Testing Expression [1]¶Testing Expression [1]¶Testing Expression [1]¶Testing Expression [1]¶Testing Expression [1, +, 1]¶Testing add-sub Expression [1, +, 1]¶"), Diff(EQUAL,"Testing Expression [1]¶Testing Expression [1]¶Rendered¶Rendered¶")]]]></diff>
  </Command>
  <Command __id="2995" _type="ShellCommand" date="Wed Apr 21 10:55:28 EDT 2021" starttimestamp="1619011563329" timestamp="5365366" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="2996" _type="RunCommand" date="Wed Apr 21 10:55:28 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5365545" type="Run" />
  <Command __id="2997" _type="RunCommand" date="Wed Apr 21 10:55:28 EDT 2021" kind="HitBreakPoint" projectName="TaskBox" starttimestamp="1619011563329" timestamp="5365545" type="Run" />
  <Command __id="2998" _type="MoveCaretCommand" caretOffset="2856" date="Wed Apr 21 10:55:32 EDT 2021" docOffset="2856" starttimestamp="1619011563329" timestamp="5368845" />
  <Command __id="2999" _type="MoveCaretCommand" caretOffset="2856" date="Wed Apr 21 10:55:32 EDT 2021" docOffset="2856" starttimestamp="1619011563329" timestamp="5369180" />
  <Command __id="3000" _type="MoveCaretCommand" caretOffset="2749" date="Wed Apr 21 10:55:32 EDT 2021" docOffset="2749" starttimestamp="1619011563329" timestamp="5369496" />
  <Command __id="3001" _type="MoveCaretCommand" caretOffset="2725" date="Wed Apr 21 10:55:33 EDT 2021" docOffset="2725" starttimestamp="1619011563329" timestamp="5369781" />
  <Command __id="3002" _type="MoveCaretCommand" caretOffset="2729" date="Wed Apr 21 10:55:33 EDT 2021" docOffset="2729" starttimestamp="1619011563329" timestamp="5370036" />
  <Command __id="3003" _type="ShellCommand" date="Wed Apr 21 10:55:48 EDT 2021" starttimestamp="1619011563329" timestamp="5385082" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3004" _type="ShellCommand" date="Wed Apr 21 10:55:48 EDT 2021" starttimestamp="1619011563329" timestamp="5385199" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3005" _type="ShellCommand" date="Wed Apr 21 10:55:49 EDT 2021" starttimestamp="1619011563329" timestamp="5386456" type="ECLIPSE_LOST_FOCUS" />
  <Command __id="3006" _type="ShellCommand" date="Wed Apr 21 11:12:45 EDT 2021" starttimestamp="1619011563329" timestamp="6402222" type="ECLIPSE_GAINED_FOCUS" />
  <Command __id="3007" _type="ShellCommand" date="Wed Apr 21 11:12:46 EDT 2021" starttimestamp="1619011563329" timestamp="6402930" type="ECLIPSE_LOST_FOCUS" />
  <DocumentChange __id="2830" _type="Delete" date="Wed Apr 21 10:52:02 EDT 2021" docASTNodeCount="1669" docActiveCodeLength="11177" docExpressionCount="1215" docLength="11177" endLine="86" length="127" offset="2937" repeat="2" startLine="83" starttimestamp="1619011563329" timestamp="5159605" timestamp2="5159857">
    <text><![CDATA[
			getImage().setImageFileName("data/latex.png");
			getImage().setHeight(imageHeight);
			getImage().setWidth(imageWidth);]]></text>
  </DocumentChange>
  <DocumentChange __id="2852" _type="Delete" date="Wed Apr 21 10:52:24 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10945" docExpressionCount="1194" docLength="10945" endLine="83" length="232" offset="2705" startLine="80" starttimestamp="1619011563329" timestamp="5181436">
    <text><![CDATA[propertyListenerSupport.notifyAllListeners(
					new PropertyChangeEvent(this, "texExpression", null, texExpression));
			render(texExpression);
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");]]></text>
  </DocumentChange>
  <DocumentChange __id="2855" _type="Delete" date="Wed Apr 21 10:52:26 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10944" docExpressionCount="1194" docLength="10944" endLine="79" length="1" offset="2648" startLine="79" starttimestamp="1619011563329" timestamp="5183231">
    <text><![CDATA[t]]></text>
  </DocumentChange>
  <DocumentChange __id="2857" _type="Insert" date="Wed Apr 21 10:52:26 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10948" docExpressionCount="1194" docLength="10948" length="4" offset="2648" repeat="4" starttimestamp="1619011563329" timestamp="5183494" timestamp2="5184321">
    <text><![CDATA[setT]]></text>
  </DocumentChange>
  <DocumentChange __id="2866" _type="Delete" date="Wed Apr 21 10:52:29 EDT 2021" docASTNodeCount="1641" docActiveCodeLength="10945" docExpressionCount="1192" docLength="10945" endLine="79" length="3" offset="2664" repeat="3" startLine="79" starttimestamp="1619011563329" timestamp="5186566" timestamp2="5186833">
    <text><![CDATA[ = ]]></text>
  </DocumentChange>
  <DocumentChange __id="2872" _type="Insert" date="Wed Apr 21 10:52:30 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10946" docExpressionCount="1194" docLength="10946" length="1" offset="2664" starttimestamp="1619011563329" timestamp="5187447">
    <text><![CDATA[(]]></text>
  </DocumentChange>
  <DocumentChange __id="2876" _type="Insert" date="Wed Apr 21 10:52:33 EDT 2021" docASTNodeCount="1643" docActiveCodeLength="10947" docExpressionCount="1194" docLength="10947" length="1" offset="2700" starttimestamp="1619011563329" timestamp="5189891">
    <text><![CDATA[)]]></text>
  </DocumentChange>
  <DocumentChange __id="2883" _type="Delete" date="Wed Apr 21 10:52:43 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10819" docExpressionCount="1179" docLength="10819" endLine="99" length="128" offset="3153" repeat="2" startLine="95" starttimestamp="1619011563329" timestamp="5199981" timestamp2="5200139">
    <text><![CDATA[
		
		getImage().setImageFileName("data/latex.png");
		getImage().setHeight(imageHeight);
		getImage().setWidth(imageWidth);]]></text>
  </DocumentChange>
  <DocumentChange __id="2948" _type="Insert" date="Wed Apr 21 10:54:46 EDT 2021" docASTNodeCount="1625" docActiveCodeLength="10824" docExpressionCount="1179" docLength="10824" length="5" offset="2702" starttimestamp="1619011563329" timestamp="5323549">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2950" _type="Replace" date="Wed Apr 21 10:54:47 EDT 2021" docASTNodeCount="1647" docActiveCodeLength="10973" docExpressionCount="1197" docLength="10973" endLine="80" insertionLength="152" int_docASTNodeCount="1625" int_docActiveCodeLength="10821" int_docExpressionCount="1179" int_docLength="10821" length="3" offset="2704" startLine="80" starttimestamp="1619011563329" timestamp="5323820">
    <deletedText><![CDATA[			]]></deletedText>
    <insertedText><![CDATA[			render(texExpression);
			System.out.println("Rendered");
			
			image = new MathExpressionImage(0, 0, imageHeight, imageWidth, "data/latex.png");]]></insertedText>
  </DocumentChange>
  <DocumentChange __id="2953" _type="Delete" date="Wed Apr 21 10:54:48 EDT 2021" docASTNodeCount="1647" docActiveCodeLength="10968" docExpressionCount="1197" docLength="10968" endLine="82" length="5" offset="2765" repeat="4" startLine="81" starttimestamp="1619011563329" timestamp="5325457" timestamp2="5326071">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
  <DocumentChange __id="2963" _type="Delete" date="Wed Apr 21 10:54:50 EDT 2021" docASTNodeCount="1647" docActiveCodeLength="10963" docExpressionCount="1197" docLength="10963" endLine="83" length="5" offset="2851" repeat="4" startLine="82" starttimestamp="1619011563329" timestamp="5327492" timestamp2="5328659">
    <text><![CDATA[
			]]></text>
  </DocumentChange>
</Events>
